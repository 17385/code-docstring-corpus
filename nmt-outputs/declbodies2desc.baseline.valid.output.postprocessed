&apos;Returns a numpy array containing a sparse matrix of shape ( length , ndim ) DCNL or a corresponding sparse matrix DCNL Parameters DCNL values : numpy array DCNL A numpy array of shape ( batch _ size , ndim = 2 ) DCNL shape : list of numpy array DCNL The shape of the array DCNL labels : int DCNL Number of labels to check DCNL ref _ items : int DCNL Number of items to check DCNL ref _ items : int DCNL Number of items to check DCNL ref _ items : int DCNL Number of items to check DCNL ref _ items : list of int DCNL Number of items to check DCNL ref _ items : int DCNL Number of items to be converted DCNL ref _ items : ndarray ( int , int ) DCNL Number of items to check DCNL Returns DCNL out : array of shape ( nlabels , ) DCNL A numpy array containing the shape of the array&apos;
&apos;Create COW image DCNL Creates a COW image with the specified backing file DCNL : param backing _ file : Path to the COW image DCNL : param path : Path to the COW image DCNL : param size : Desired size of the COW image&apos;
&apos;Reload supervisor configuration . DCNL : return : True if successful , False if unsuccessful DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.reload &lt; config &gt; &apos;
&apos;Encode a Morse text using Base64 . DCNL Parameters DCNL msg : str DCNL The message to encode . DCNL sep : str , optional DCNL The character to encode . DCNL mapping : string , optional DCNL The length of the character . DCNL Returns DCNL U : A byte string DCNL The plaintext text . DCNL Examples DCNL &gt; &gt; &gt; from sympy.crypto.crypto import encode _ morse DCNL &gt; &gt; &gt; from sympy.crypto.crypto import encode _ morse DCNL &gt; &gt; &gt; encode _ morse ( mc ) DCNL \ &apos; MOVE &apos; &apos;
&apos;Tests that the field \ &apos; s value is a boolean indicating whether the DCNL field can be marked as a member . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 2038&apos;
&apos;constant _ expression : constant _ expression&apos;
&apos;Find the n smallest elements of a array . DCNL Equivalent to : sorted ( n , sort = True ) - &gt; n DCNL Equivalent to : sorted ( n , count , keep = True ) . DCNL Equivalent to : sorted ( n ) = = n ( n ) &apos;
&apos;Calculates the hash hash for the current cache hash . DCNL : param partition _ dir : directory to check for validity DCNL : return : hash of the partition hashes for this partition DCNL : rtype : str&apos;
&apos;Parameters DCNL http : / / msdn.microsoft.com / en-us / library / ISO _ 3166-1 ( &quot; / &quot; ) DCNL Returns : DCNL ( string , string ) : ( string , string ) &apos;
&apos;Return a filter that checks if a CG has volumes . DCNL : param bool attached _ or _ snapshots : Whether to check if a CG has volumes . DCNL : returns : A filter that checks if a CG has volumes . &apos;
&apos;Return True if the url belongs to the given spider&apos;
&apos;Compute polynomial LCM over a polynomial in `K &#91; x &#93; ` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys import ring , ZZ DCNL &gt; &gt; &gt; R , x = ring ( &quot; x &quot; , QQ ) DCNL &gt; &gt; &gt; R.dup _ spherical _ x ( 2 * x * * 2 + 1 * x * * 2 + 1 * x + 1 ) DCNL x * * 2 + 1 * x * * 2 + 1 * x + 1 DCNL &gt; &gt; &gt; R.dup _ spherical _ factorial ( 2 * x * * 2 + 1 * x + 1 ) DCNL x * * 2 + 1 * x * * 2 + 1 * x * * 2 + 1 * x + 1 DCNL &gt; &gt; &gt; R.dup _ spherical _ factorial ( n * * 2 + 1 , x * * 2 + 1 ) DCNL x * * 2 + 1 * x * * 2 + 1 * x * * 2 + 1 * x * * 2 + 1 * x + 1 DCNL &gt; &gt; &gt; R.dup _ spherical
&apos;Produces a list of projection vectors . DCNL @ param event : The event event . DCNL @ type event : L { dict } DCNL @ param params : A list of parameters . DCNL @ type params : L { list } of L { list } DCNL @ return : A list of projection vectors . DCNL @ rtype : L { list } &apos;
&apos;Sets the coordinate of a rectangle in coord DCNL Parameters DCNL output : WRITEME DCNL coord : WRITEME DCNL width : WRITEME DCNL start _ input : WRITEME DCNL start _ idx : WRITEME DCNL start _ idx : WRITEME DCNL start _ idx : WRITEME DCNL start _ idx : WRITEME DCNL start _ idx : WRITEME DCNL index of top-left corner of coord for coord DCNL Returns DCNL coords : array , shape ( n _ samples , 3 ) DCNL Output image . &apos;
&apos;Get a thought of a c . &apos;
&apos;Return a list of ( n , n ) pairs for n elements DCNL Parameters DCNL n : int DCNL number of nodes DCNL m : int or None DCNL Minimum number of quantiles DCNL Returns DCNL rho : ndarray DCNL List of partitions . DCNL Examples DCNL &gt; &gt; &gt; from sympy.ntheory import smoothness _ p DCNL &gt; &gt; &gt; smoothness _ p ( 1 , 5 ) DCNL ( 2 , 5 ) DCNL &gt; &gt; &gt; smoothness _ p ( 1 , 5 ) DCNL &#91; ( 1 , 2 ) , ( 3 , 4 ) , ( 3 , 4 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 4 , 5 ) , ( 5 ,
&apos;Downloads an library file and return the file size . DCNL * dest _ dir - the path to the library file DCNL version -- the version of the library DCNL Returns : DCNL str : the full path to the library file DCNL Raises : DCNL IOError : if the source file is not supported . &apos;
&apos;Generate the optimal graph connectivity matrix . DCNL Parameters DCNL G : NetworkX graph DCNL Undirected graph DCNL Returns DCNL G : NetworkX graph DCNL A dictionary keyed by node connectivity . DCNL Examples DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; G.add _ target _ node ( G ) DCNL &gt; &gt; &gt; G.add _ node _ from _ node ( G ) DCNL &gt; &gt; &gt; G.add _ node _ from _ node ( G ) DCNL &gt; &gt; &gt; G.add _ node _ from _ node ( G ) DCNL &gt; &gt; &gt; G.add _ node _ from _ node ( G ) DCNL &gt; &gt; &gt; G.add _ node _ from _ node ( G ) DCNL &gt; &gt; &gt; G.add _ node _ from _ node ( G ) DCNL &gt; &gt; &gt; G.add _ node _ from _ node ( G ) DCNL &gt; &gt; &gt; G.add _ node _ from _ node ( G ) DCNL &gt; &gt; &gt; G.add _ node _ from _ node ( G ) DCNL &gt; &gt; &gt;
&apos;Get memory information from Linux . DCNL : return : tuple of ( proc _ info , net _ info ) &apos;
&apos;Get the service for interacting with the API . DCNL This function is meant to be used for API requests . DCNL : param config : Configuration object . DCNL : type config : dict DCNL : param config : Configuration configuration . DCNL : type config : dict DCNL : param discovery _ info : The configuration file . DCNL : type discovery _ info : dict DCNL : return : The service object . DCNL : rtype : dict DCNL : returns : The service object . &apos;
&apos;Creates the URL for an upload URL . DCNL Arguments : DCNL handler _ name ( str ) : The name of the course for the course . DCNL course _ key ( CourseKey ) : Identifier for the course . DCNL kwargs ( dict ) : Keyword arguments to pass to the course . DCNL Returns : DCNL None&apos;
&apos;Returns a boolean array of the given values . DCNL Parameters DCNL a : array _ like DCNL Input array . DCNL limits : { \ &apos; lower \ &apos; , \ &apos; upper \ &apos; , \ &apos; upper \ &apos; , \ &apos; upper \ &apos; } , optional DCNL Defines how to set the value of the filter . DCNL inclusive : ( bool , bool ) , optional ( default = False ) DCNL If True , the default values will be ignored . DCNL Returns DCNL ( bool , bool ) : bool DCNL True if the given array is a lower or upper limit , False otherwise . DCNL Examples DCNL &gt; &gt; &gt; from scipy import np.arange DCNL &gt; &gt; &gt; a = np.arange ( 20 ) DCNL &gt; &gt; &gt; mask = np.arange ( 5 ) DCNL &gt; &gt; &gt; mask _ to _ range ( &#91; 1 , 2 , 3 &#93; ) DCNL array ( &#91; &#91; 0 , 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 &#93; , DCNL &#91;
&apos;This function parses the \ &apos; data \ &apos; key in the \ &apos; token \ &apos; key . DCNL This function doesn \ &apos; t make sure the function doesn \ &apos; t matter . DCNL : param data : DCNL : type data : DCNL : return : DCNL : rtype : &apos;
&apos;Get the path based on the key if it exists , otherwise return None . &apos;
&apos;check a named option value ( e.g. , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; ) DCNL &gt; &gt; &gt; check _ named ( \ &apos; foo \ &apos; , \ &apos; foo \ &apos; ) DCNL \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; check _ named ( \ &apos; foo \ &apos; , \ &apos; foo \ &apos; ) DCNL \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; check _ named ( \ &apos; foo \ &apos; , \ &apos; foo \ &apos; ) DCNL \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; check _ named ( \ &apos; foo \ &apos; , \ &apos; foo \ &apos; ) DCNL \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; check _ named ( \ &apos; foo \ &apos; , \ &apos; foo \ &apos; ) DCNL \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; check _ named ( \ &apos; foo \ &apos; , \ &apos; foo \ &apos; ) DCNL \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; check _ named ( \ &apos; foo \ &apos; , \ &apos; foo \ &apos; ) DCNL Traceback ( most
&apos;Return True if all connections support transactions . &apos;
&apos;Make sure environment variables are logged in before behave ( ) . DCNL By default , behave tests should be set to &quot; behave _ &quot; . &apos;
&apos;Similar to escape _ sql _ special , but uses special characters instead of DCNL special characters . &apos;
&apos;Returns the string \ &apos; s version string . DCNL This is useful if you \ &apos; re doing an empty string instead of an empty string . DCNL For example : DCNL &gt; &gt; &gt; strip _ version ( \ &apos; 1.2.3 \ &apos; ) DCNL \ &apos; 1.1.0.1 \ &apos; DCNL &gt; &gt; &gt; strip _ version ( \ &apos; 1.2.3 \ &apos; ) DCNL \ &apos; 1.1.0.1 \ &apos; DCNL &gt; &gt; &gt; strip _ version ( \ &apos; 1.2.3 \ &apos; ) DCNL \ &apos; 1.2.3 \ &apos; &apos;
&apos;Extract the real URL from a Google Cloud Storage URL . DCNL : param url _ url : URL to be extracted DCNL : type ca _ url : str DCNL : return : full url to the local group DCNL : rtype : str&apos;
&apos;Fetches all files in data in data in data . DCNL Parameters DCNL data _ home : list DCNL List of data in data . DCNL subset : bool , optional DCNL Whether to download the data in the data . DCNL verbose : bool , optional DCNL If True , use the default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL remove _ state : bool , optional DCNL If True , create a random subset for the data . &apos;
&apos;This returns a tuple consisting of the body of the body as a string , DCNL returning the string s as the length of the body as a string . DCNL If there is no such header , it returns None . &apos;
&apos;Open all tasks based on a project in a project . DCNL Returns True if all tasks are open , False otherwise . &apos;
&apos;Get all the nodes for a node . DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ elasticache.get _ node _ host myelasticachegroup&apos;
&apos;Set up the libcloud functions and check for CloudStack configurations . &apos;
&apos;Convert a value to an int . &apos;
&apos;Returns the p-value for the given array . DCNL Parameters DCNL a : array _ like DCNL Input array . DCNL limits : int , optional DCNL Axis along which to operate . Default is True . DCNL inclusive : bool , optional DCNL If True , then the default limits is used . DCNL Returns DCNL statistic : float DCNL pvalue of the chisquare statistic DCNL pvalue : float DCNL pvalue of the chisquare statistic DCNL pvalue : float DCNL pvalue of the chisquare statistic DCNL pvalue : float DCNL the maximum number of bins DCNL Notes DCNL For more details , see `stats.kruskal` . &apos;
&apos;Add the authentication URL to the URL . DCNL : param url : DCNL The URL to add to . DCNL : type url : str DCNL : param auth : The URL to add to the URL . DCNL : type auth : bool DCNL : param force : if True , use the auth URL to redirect to . DCNL : type force : bool DCNL : return : The URL to redirect to . DCNL : rtype : bool DCNL : returns : The URL to redirect to . &apos;
&apos;Parameters DCNL start : int or datetime-like , default None DCNL Left bound for generating dates DCNL end : string or datetime-like , default None DCNL Left bound for generating dates DCNL periods : int , optional DCNL Name of the frequency DCNL freq : string or DateOffset , optional ( default None ) DCNL Frequency to normalize the dates DCNL freq : string or DateOffset , optional ( default None ) DCNL Frequency to normalize the data for . Default is None . DCNL name : str or DateOffset , optional , optional DCNL If None , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL date : Series or DateOffset object , default None DCNL The start date , or None if not found . DCNL Examples DCNL &gt; &gt; &gt; import statsmodels.api as sm DCNL &gt; &gt; &gt; date = \ &apos; http : / / pandas.pydata.org / pandas-docs / stable / timeseries.html # offset-aliases &gt; ` _ _ \ &apos; DCNL &gt; &gt; &gt; date = date _ range ( \ &apos; YEAR \ &apos;
&apos;external _ declaration : external _ definition&apos;
&apos;Update the cache instance for an instance . &apos;
&apos;Capitalizes the first character of the value . &apos;
&apos;Fail unless a blank line is blank . DCNL If blank _ lines is a string , a warning is raised . DCNL Okay : spam ( 1 ) DCNL Okay : spam ( 1 ) DCNL Okay : spam ( 1 ) DCNL Okay : spam ( 1 ) DCNL Okay : ( blank _ lines , blank _ lines = True ) DCNL Okay : ( blank _ lines , blank _ lines = True ) DCNL Okay : ( blank _ lines , blank _ lines = True ) DCNL Okay : ( blank _ lines , blank _ lines = True ) DCNL Okay : ( blank _ lines , blank _ lines = True ) DCNL Okay : spam ( 1 ) DCNL Okay : ( blank _ lines , blank _ lines ) DCNL Okay : spam ( 1 ) DCNL Okay : spam ( 1 ) DCNL Okay : spam ( 1 ) DCNL Okay : spam ( 1 ) DCNL Okay : spam ( 1 ) DCNL Okay : spam ( 1 ) DCNL Okay : spam ( 1 ) DCNL Okay : spam ( 1 ) DCNL Okay : ( blank
&apos;Perform a pull request . DCNL This is a helper function that checks the configuration . DCNL : param vif : The configuration . DCNL : param config : The configuration . DCNL : param event : The configuration . DCNL : return : A dictionary with the configuration . &apos;
&apos;Return True if the Z is monotonic and 0 . &apos;
&apos;Create a trigger for the specified Trigger . DCNL : param trigger _ type : Trigger type . DCNL : type trigger _ type : ``str`` DCNL : return : The trigger type . DCNL : rtype : dict&apos;
&apos;Return the leading coefficient of ``f`` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.distributedmodules import sdm _ LC DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys import QQ , ZZ DCNL &gt; &gt; &gt; from sympy.polys.densebasic import sdm _ LC DCNL &gt; &gt; &gt; sdm _ LC ( &#91; ( 1
&apos;Byte-compile all modules in the given module . DCNL Returns the compiled file object for the given file . DCNL If the filename is not specified , it will be printed out . DCNL If the filename is not specified , it will be printed out . &apos;
&apos;Parameters DCNL extra _ filter : dict DCNL A list of resource ids DCNL Returns DCNL res : dict DCNL A dictionary containing the following fields : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : DCNL - \ &apos; - \ &apos; : \ &apos; - \ &apos; , DCNL \ &apos; name \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; name \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; name \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; name \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos;
&apos;Add corners to the loops . &apos;
&apos;Recursively validate an object \ &apos; s `obj _ type` . DCNL `obj _ type` is the object \ &apos; s \ &apos; , \ &apos; c \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; bar \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; &#93; . &apos;
&apos;Wait for a file or raise an exception if it doesn \ &apos; t exist . &apos;
&apos;Try to encode a Python string as an ASCII string ( e.g. , \ &apos; C \ &apos; , \ &apos; C \ &apos; ) and DCNL convert it to an ASCII string . DCNL This is equivalent to Python \ &apos; s equivalent to Python \ &apos; s Python 3 . DCNL : param s : The string to encode . DCNL : type s : str DCNL : return : The decoded string as an ASCII string . DCNL : rtype : str&apos;
&apos;Load a pickle file from a given file . DCNL Parameters DCNL f : file-like object DCNL The file to load . DCNL pickle _ load : str DCNL The name of the file to load . DCNL Returns DCNL load : object DCNL The contents of the file to load . &apos;
&apos;Apply weights to output _ dim DCNL Parameters DCNL input _ dim : WRITEME DCNL output _ dim : WRITEME DCNL name _ list : list ( optional ) DCNL Size of the output layer ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL name : str , optional DCNL The name of the parameter to create the weights for . DCNL name : str DCNL The name of the parameter to be applied . DCNL name : str DCNL The name of the parameter to be applied . DCNL name : str DCNL The name of the parameter to be applied . DCNL name : str DCNL The name of the parameter to be applied . DCNL name : str DCNL The name of the parameter to be applied . DCNL name : str DCNL The name of the parameter to be applied . DCNL name : str DCNL The name of the parameter to be applied . DCNL name : str DCNL The name of the parameter to be applied . DCNL name : str DCNL The name of the parameter to be
&apos;Generate a NetworkX graph for a given graph . DCNL Parameters DCNL G : NetworkX graph DCNL source : node DCNL The source node to search . DCNL value : string DCNL The value of the graph . DCNL width : int , optional DCNL The width of the graph . If None , the default is returned . DCNL Returns DCNL edges : list DCNL A NetworkX graph . DCNL Examples DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; print ( nx.bfs _ edges _ edges ( G , 0 ) ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; D \ &apos; &#93; DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; print ( nx.bfs _ edges ( G , \ &apos; G \ &apos; ) ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; D \ &apos; &#93; DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt;
&apos;Return an iterator over a sequence of sequences . DCNL .. seealso : : : func : `numpy.repeat _ sequence DCNL .. seealso : : : func : `numpy.repeat _ sequence DCNL .. seealso : : : func : `numpy.repeat _ sequence&apos;
&apos;Serialize the object to a YAML file . DCNL This is useful for debugging . DCNL : param object _ : The object to write to . DCNL : type object _ : str DCNL : param file _ : The object to write to . DCNL : type file _ : str DCNL : param file _ name : The name of the file to dump . DCNL : type to _ add : bool DCNL : param use _ encoding : If set to False , the default protocol is used . DCNL : type use _ encoding : bool DCNL : param protocol : The protocol to use when we want to use . DCNL : type use _ encoding : bool DCNL : param protocol : The protocol to use when we want to use . DCNL : type use _ encoding : bool DCNL : param protocol : The protocol to use when we want to use . DCNL : type use _ encoding : bool DCNL : param protocol : The protocol to use when we want to use . DCNL : type use _ encoding : bool DCNL : param protocol : The
&apos;Write a file to the given filename and write it to the given file . &apos;
&apos;Given a lambda function , returns a lambda that will be used DCNL for a predicate on a predicate . DCNL Parameters DCNL pos _ l : list DCNL A sequence of ( label , value ) pairs . DCNL tokens : list DCNL A sequence of ( label , value ) pairs . DCNL tokens : list DCNL The list of tokens to be used . DCNL Returns DCNL A list of : class : ` ~ tgrep _ tree _ pos DCNL Examples DCNL &gt; &gt; &gt; from nltk.import import _ node _ tree _ pos DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; _ tgrep _ compute _ tree _ tree _ pos _ tree _ pos ( \ &apos; / tmp / b \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; / \ &apos; ) DCNL &gt; &gt; &gt; _ predicate _ handle _ tree _ pos _ tree _ pos _ tree _ pos _ tree _ pos ( \ &apos; / b / c \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; / \ &apos; ) DCNL
&apos;Returns the WSGI filter app for use with paste.deploy . &apos;
&apos;Try to create a mask in the range &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , ... , 0 , 0 , 0 , ... , 0 , 0 , ... , 0 , 0 , 0 , ... , 0 , 0 , 0 , ... , 0 , 0 , 0 , ... , 0 , 0 , ... , 0 , 0 , 0 , ... , 0 , 0 , 0 , ... , 0 , 0 , 0 , ... , 0 , 0 , 0 , ... , 0 , 0 , 0 , ... , 0 , 0 , 0 , 0 , ... , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
&apos;Return dict of categories , ordered categories and categories of the database DCNL : return : list of categories , where categories are ordered DCNL : rtype : dict&apos;
&apos;Tower a gcode linear move file or text . &apos;
&apos;Adds a simple view to the user \ &apos; s login form . DCNL If the user is not logged in , it will be added to the user . &apos;
&apos;Find the n largest elements in a list . DCNL Equivalent to : sorted ( iterable , key = key , key = key ) : sorted ( iterable ) ) DCNL Equivalent to : sorted ( iterable , key = key , key = key , key = key ) ) DCNL Equivalent to : sorted ( iterable , key = key , key = key , key = key ) ) DCNL Equivalent to : sorted ( iterable , key = key ) &#91; : n &#93; &apos;
&apos;Display information about active data DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; docker.active &lt; service _ file &gt; &apos;
&apos;yaml : openshift-svc-verify001.yaml DCNL : language : yaml DCNL Minimal Example : DCNL .. literalinclude : : / .. / .. / tests / builders / fixtures / openshift-creator001.yaml DCNL : language : yaml&apos;
&apos;read one unit at a time&apos;
&apos;Removes all values of arg from the given string . &apos;
&apos;Helper to format _ source _ url ( ) &apos;
&apos;Escape a string in text so that it can be embedded in text . DCNL Intended to be used in conjunction with a special case of text . &apos;
&apos;List all the files except that the given suffix is a list . DCNL If suffix is None , all files will be returned . DCNL If suffix is None , all files will be returned . &apos;
&apos;Iterate over the trees in a Newick file handle . DCNL : returns : generator of Bio.Phylo.NeXML.Tree objects . &apos;
&apos;Injects data into the given query . DCNL This is a convenience function to inject the results into account . DCNL Args : DCNL query : A query string . DCNL updated _ entities : dict of ( key , value ) pairs . DCNL updated _ entities : list of ( key , value ) pairs . DCNL deleted _ keys : Dictionary of keys to include in the datastore . DCNL Returns : DCNL A dictionary containing the results of the query . DCNL Raises : DCNL ValueError : if the query does not exist . &apos;
&apos;Generate a unique hash for the given SHA . DCNL : param sha : The SHA . DCNL : return : The hash digest . DCNL : rtype : str&apos;
&apos;Elementwise cos function . DCNL Args : DCNL x ( ~ chainer.Variable ) : Input variable . DCNL Returns : DCNL ~ chainer.Variable : Output variable . &apos;
&apos;Get average radius from radiusComplex . &apos;
&apos; &gt; &gt; &gt; test _ lambda ( n ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos;Register a function and all modules . &apos;
&apos;Return the contents of the minion to the minion DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; ret.get _ minions mysql&apos;
&apos;Decompresses a list of byte strings into a list of byte strings . &apos;
&apos;Purge a organization . DCNL You must be authorized to edit the organization . DCNL : param id : the id or name of the organization DCNL : type id : string DCNL : param id : the id or name of the organization DCNL : type id : string&apos;
&apos;Returns a test based on its idx&apos;
&apos; .. todo : : DCNL WRITEME properly DCNL Return a list of the form ( status , value , value ) pairs . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; iptables.mod _ aggregate 8.8.8.8 DCNL salt \ &apos; * \ &apos; iptables.mod _ aggregate test.kwarg arg = \ &apos; &#91; &quot; foo &quot; , &quot; bar &quot; &#93; \ &apos; &apos;
&apos;Pops all symbolic operators on the system . &apos;
&apos;Verify that the divisions are greater than the given index . DCNL : param divisions : The number of partitions to compare DCNL : param tuple parts : the number of divisions to compare DCNL : type required : list DCNL : param required : If True , the index will be checked DCNL : type required : bool DCNL : param required : If True , returns the index of the entire series DCNL : type required : bool DCNL : rtype : ``bool``&apos;
&apos;Find all users in the user . DCNL : param node : modular odm Node object DCNL : param user _ ids : list of user ids DCNL : return : list of users&apos;
&apos;Return the hash object of a file , based on the file object . &apos;
&apos; * musicpd.org , playback section : * DCNL ``kill`` DCNL Kills MPD . &apos;
&apos;Tests that we can \ &apos; t find a good record if it doesn \ &apos; t DCNL exist . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 120&apos;
&apos;yaml : docker-build-enabled DCNL Requires the Jenkins : jenkins-wiki : `GitLab Plugin &lt; Build + Plugin &gt; ` . DCNL : arg str project : The location of the project . DCNL : arg str site : Name of the project ( default \ &apos; \ &apos; ) DCNL : arg bool no-cache : If the build is enabled ( default false ) DCNL Example : DCNL .. literalinclude : : / .. / .. / tests / publishers / fixtures / docker-builder001.yaml DCNL : language : yaml&apos;
&apos;Convert a number to seconds since the epoch . DCNL Args : DCNL t : Time to convert . DCNL Returns : DCNL A string representing the number of seconds since the unix epoch . &apos;
&apos;Download the password from a given username DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; docker.auth &lt; username &gt; &lt; password &gt; DCNL salt \ &apos; * \ &apos; docker.auth &lt; username &gt; &lt; password &gt; &lt; password &gt; &lt; password &gt; &apos;
&apos;Makes sure list of available items in list is available . &apos;
&apos; .. todo : : DCNL WRITEME&apos;
&apos;Check a virtual server on a specific balancer DCNL CLI Examples : DCNL .. code-block : : bash DCNL salt-run f5.check _ balancer pool _ name&apos;
&apos;Return CPU frequency . DCNL For example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; ps.cpu _ freq DCNL salt \ &apos; * \ &apos; ps.cpu _ freq \ &apos; frequency \ &apos; &apos;
&apos;Adds permission to the given user \ &apos; s permission . DCNL : param user : User object DCNL : type user : str DCNL : param model : User object DCNL : type model : django.db.Model DCNL : param permission _ permission : permission to add the permission to DCNL : type permission _ permission : bool DCNL : return : Permission type DCNL : rtype : ``bool``&apos;
&apos;yaml : pollscm DCNL Minimal Example : DCNL .. literalinclude : : / .. / .. / tests / publishers / fixtures / git-minimal.yaml DCNL : language : yaml DCNL Full Example : DCNL .. literalinclude : : / .. / .. / tests / publishers / fixtures / git-full.yaml DCNL : language : yaml&apos;
&apos;Wraps a function to preserve the context of a context . DCNL This decorator ensures that the object is safe to call this decorator . DCNL This decorator ensures that the object is safe to call this decorator . DCNL This decorator ensures that the decorated function is a decorator . &apos;
&apos;Return an object that can be used as an instance type . DCNL If ``obj`` is a string , it will be converted to a ``unicode`` object . DCNL If ``obj`` is a class object , it will be converted to a subclass of DCNL ``getattr _ type ( obj ) `` . DCNL : param obj : DCNL The object to be converted . DCNL : return : DCNL The value of the given object . &apos;
&apos;Shift an image with the specified axis , randomly or non-randomly . DCNL Parameters DCNL x : numpy array DCNL List of images with dimension of &#91; row , col , channel &#93; ( default ) . DCNL wrg : float DCNL Percentage of shift . DCNL row _ axis : int , optional DCNL Axis along which to create the image . Default is 0 . DCNL col _ axis : int , optional DCNL Axis along which to create the image . Default is 0 . DCNL fill _ mode : int , optional DCNL Axis along which to fill the channel . Default is 0 . DCNL fill _ mode : int , optional DCNL Axis along which to fill the channel . Default is 0 . DCNL fill _ mode : int , optional DCNL Axis along which to fill the channel . Default is 0 . DCNL Returns DCNL out : ndarray DCNL An image with shape ( n _ channels , row _ axis , col _ axis ) . DCNL References DCNL .. &#91; 1 &#93; http : / / docs.scipy.org / doc / scipy-0.14.0 / reference / generated / scipy.ndimage.interpolation.affine _ transform.html
&apos;Build the type for plugin _ type and register it for the given repository . This is DCNL needed because we don \ &apos; t need to specify the type of plugin _ type . &apos;
&apos;Returns a factory for the given cursor as a dict&apos;
&apos;Create and convert a volume to a local machine . DCNL We need to create a new volume in a local machine and we need to DCNL create a new volume . DCNL In this case , we need to create a new volume from a local machine . DCNL In this case , we need to create a new volume in the database . DCNL In this case , we need to create a new volume in the database . &apos;
&apos;Warn if dependencies aren \ &apos; t met . &apos;
&apos;Save an email to the remote backend , in the sent folder . &apos;
&apos;Returns the coefficients of a polynomial in `K &#91; x &#93; ` . &apos;
&apos;Parse an XML string using minidom safely . &apos;
&apos;Perform independent random variables of a variable . DCNL Parameters DCNL x : array _ like DCNL array of variables DCNL variables : int or array _ like DCNL Number of variables to add . Default is None . DCNL dtype : int , optional DCNL Number of variables to use . Default is None . DCNL Returns DCNL seed : float DCNL Number of independent groups . &apos;
&apos;Create a prompt for a widget DCNL Parameters DCNL msg : str DCNL The message to display . DCNL inputs : int DCNL The amount of action to wait for . DCNL Returns DCNL n : int DCNL The first element of the dialog DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; mysql.prompt _ n \ &apos; click \ &apos; &apos;
&apos;Run a server in a local server . DCNL If no timeout is specified , then the server is running . DCNL If no timeout is specified , it will be printed to the local DCNL server . DCNL If no timeout is specified , it will be printed to the local DCNL server . DCNL If no timeout is specified , it will be printed to stdout . DCNL If * quiet * is True , then the server is running as soon as the DCNL connection is running . DCNL If * quiet * is True , then the server is running as soon as the DCNL connection is running . &apos;
&apos;Checks that the given object is a tuple of ( name , object ) . DCNL Checks that the given object is a tuple of ( name , object ) , and DCNL returns True if the object is a valid exception , or None if it \ &apos; s DCNL an exception . DCNL If no code is found , the exception will be skipped . DCNL If no code is found , the exception will be skipped . DCNL If no code is found , it will return None . &apos;
&apos;ZDT2 multiobjective function . DCNL : math : `f ( \ mathbf { x } ) = 0` . DCNL : math : `f ( \ mathbf { x } ) = 0` . DCNL : math : `f ( \ mathbf { x } ) = 0` . DCNL : math : `f ( \ mathbf { x } ) = 0` . DCNL : math : `f ( \ mathbf { x } ) = 0` . DCNL : math : `f ( \ mathbf { x } ) = 0` . DCNL : math : `f ( \ mathbf { x } ) = 0` . DCNL : math : `f ( \ mathbf { x } ) = 0` . DCNL : math : `f ( \ mathbf { x } ) = 0` . DCNL : math : `f ( \ mathbf { x } ) = 0` . DCNL : math : `f ( \ mathbf { x } ) = 0` . DCNL : math : `f ( \ mathbf { x } ) = 0` . DCNL : math : `f ( \ mathbf { x } ) = \ frac
&apos;Get hours of hours , minutes , and hours and hours . &apos;
&apos;Ensure that attempts to use with a normal error . DCNL Args : DCNL list : A list of ( name , name ) tuples . DCNL Returns : DCNL A list of ( name , name ) tuples . &apos;
&apos;Create L { identity } if it does not exist . DCNL : param state : The state object . &apos;
&apos;Clone a git repository . DCNL : param git _ path : Path to the git repository DCNL : param module : The path to the git repository DCNL : param git : The path to the git repository DCNL : param git : The path to the git repository DCNL : param branch : The path to the git repository DCNL : param branch : The path to the git repository DCNL : param branch : The path to the git repository DCNL : param branch : The path to the git repository DCNL : param git _ commit : The path to the git repository DCNL : param verify _ commit : Whether to create the git commit . DCNL : param verify _ commit : Whether to create the git commit . DCNL : param verify _ commit : Whether to run the git repository . DCNL : return : A git repository . &apos;
&apos;Sends an email to an email . DCNL : param subject : Email subject . DCNL : param recipients : List of email addresses . DCNL : type recipients : list &#91; str &#93; DCNL : param html : List of email addresses to send in the email . DCNL : type html : str DCNL : return : The email address . DCNL : rtype : str DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; mysql.send _ email subject _ email DCNL salt \ &apos; * \ &apos; mysql.send _ email subject _ email = \ &apos; email \ &apos; &apos;
&apos;Load the strikes data and return a Dataset class instance . DCNL Returns DCNL Dataset instance : DCNL See DATASET _ PROPOSAL.txt for more information . &apos;
&apos;Delete an existing image from the specified image . DCNL : param context : context to schedule DCNL : param image _ id : ID of image to schedule DCNL : param location : location of the image DCNL : return : None&apos;
&apos;Decorator for views that tries to cache the page \ &apos; s Vary header and DCNL populates the cache if it doesn \ &apos; t exist yet . DCNL This is useful if you want to cache the cache for a particular cache DCNL so we don \ &apos; t need to be rebuilt , so this function DCNL is used instead of Django \ &apos; s Vary header . &apos;
&apos;A helper function that asserts that the given node is a valid . DCNL : param self : node to be executed DCNL : param node : Name of the node DCNL : param node : container name DCNL : param kwargs : keyword arguments passed to `cat` DCNL : param kwargs : keyword arguments passed to ``cat`` DCNL : param kwargs : keyword arguments passed to ``cat`` . &apos;
&apos;Convert dotted IPv4 address to dotted IPv4 address . &apos;
&apos;Sets the masquerade for the current user . DCNL If the user is masquerading as , a default masquerade will be set . DCNL If the user is masquerading as , then the default is displayed . &apos;
&apos;Initialize a set of all available widgets&apos;
&apos;Returns a WSGI server suitable for connecting to the server . DCNL This is a helper function that parses the WSGI environment based on DCNL the server \ &apos; s WSGI environment . If the server is not present in the DCNL environment , it will be returned . If the server is not found , DCNL it will be returned . &apos;
&apos;Checks if the object is an internal attribute . DCNL : param obj : the object to check . DCNL : param attr : the attribute name . DCNL : return : True if the object is the same attribute , False otherwise . &apos;
&apos;Returns the shortest path from all shortest paths between nodes . DCNL Parameters DCNL G : NetworkX graph DCNL cutoff : integer , optional DCNL Depth to stop the shortest path . DCNL Returns DCNL shortest _ path : list DCNL A list of shortest paths keyed by node . DCNL Examples DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; path = nx.all _ pairs _ shortest _ path ( G ) DCNL &gt; &gt; &gt; path = nx.all _ pairs _ shortest _ path ( G ) DCNL &gt; &gt; &gt; path = nx.all _ pairs _ shortest _ path _ path ( G ) DCNL &gt; &gt; &gt; list ( all _ pairs _ shortest _ path ( G ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL Notes DCNL Edge weight attributes must be numerical . DCNL Distances are calculated as sums of weighted edges traversed . DCNL See Also DCNL floyd _ warshall _ all _ shortest _ path DCNL path _ shortest _ path ( G ) &apos;
&apos;Returns a list of all types defined in the given object . &apos;
&apos;View helper that checks whether a course has been enabled . DCNL Arguments : DCNL course ( CourseDescriptor ) : The course to check . DCNL Returns : DCNL dict : A list of certificates for the course . &apos;
&apos;Return the most recent payload in this demo DCNL : param payload : DCNL : return : &apos;
&apos;Extract the zip file from the zip file or relative path to DCNL the zip file or directory . &apos;
&apos;Given a field path and a field name , return the appropriate field path . &apos;
&apos;Simulates a new host to be enabled if it \ &apos; s enabled or not . DCNL If \ &apos; enabled \ &apos; is True , the host will be enabled . &apos;
&apos;Create a secgroup to nova ( nova secgroup-delete ) DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; nova.secgroup _ create mygroup&apos;
&apos;Extract tests from a file . DCNL Parameters DCNL fname : str DCNL The name of the file to run . DCNL selector : str DCNL The element to pass to the test . DCNL verbose _ params : bool , optional DCNL If True , don \ &apos; t want to print the output file DCNL Returns DCNL ipython _ params : list DCNL A list of TestFramework output . &apos;
&apos;Helper method to create an entrance exam and return an entrance exam DCNL Begin by short-circuiting if the course does not have an entrance exam&apos;
&apos;Authenticate via HTTP Basic Auth . &apos;
&apos;Elementwise cos function . DCNL .. math : : DCNL y _ i = \ &apos; i \ &apos; . DCNL Args : DCNL x ( ~ chainer.Variable ) : Input variable . DCNL y ( ~ chainer.Variable ) : Input variable . DCNL Returns : DCNL ~ chainer.Variable : Output variable . &apos;
&apos;Add a new service group DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; netscaler.servicegroup _ add \ &apos; serviceGroupName \ &apos; &apos;
&apos;Check if a string is a valid IPv4 or IPv6 address . DCNL : param s : IPv4 or IPv6 string to be checked DCNL : type s : str DCNL : rtype : bool&apos;
&apos;Parses an HTTP date into a datetime object . &apos;
&apos;Method to detect if CSP Policies are enabled for CSP Policies DCNL to a HTTPResponse object . DCNL : param response : A HTTPResponse object . DCNL : return : True if the response is enabled , False otherwise . &apos;
&apos;Converts the \ &apos; per \ &apos; per \ &apos; per \ &apos; per \ &apos; per \ &apos; into a time . &apos;
&apos;Tries to find an element with the given id . DCNL context : a behave context DCNL id _ str : str DCNL the id of the element to wait for DCNL kwargs : keyword arguments to wait for the element to wait DCNL kwargs : keyword arguments to wait for the element to wait for DCNL Returns : DCNL None&apos;
&apos;Subscribe back to a new frame . DCNL Currently only works on drivers . &apos;
&apos;Decorator to determine the current component for a given view . DCNL Arguments : DCNL request _ func ( function ) : The view function to use for the current user . DCNL dashboard ( str ) : The user to use for the current user . DCNL panel ( str ) : The user to use for the current user . &apos;
&apos;A function to connect to a bigip device and modify an existing profile . DCNL hostname DCNL The host / address of the bigip device DCNL username DCNL The iControl REST username DCNL password DCNL The iControl REST password DCNL profile _ type DCNL The type of profile to modify DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; bigip.modify _ profile bigip admin admin my-pool 10.2.2.1 : 80&apos;
&apos;Check if string is valid . DCNL : param string : The string to check . DCNL : return : True if string is valid . DCNL : rtype : bool&apos;
&apos;Create all axes for a given image . DCNL Parameters DCNL image : matplotlib image DCNL The image to be used . DCNL methods : list of float , optional DCNL The height of the figure . DCNL figsize : tuple , optional DCNL Number of columns in the figure . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL fig : instance of matplotlib.figure.Figure DCNL The figure . DCNL fig : instance of matplotlib DCNL Figure to the figure . DCNL fig : instance of matplotlib DCNL Figure to the figure . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL fig : instance of matplotlib.figure.Figure DCNL The figure . &apos;
&apos;size ( N , N ) - &gt; int DCNL Return a number of bits on the system DCNL &gt; &gt; &gt; size ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; size ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; size ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; size ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; size ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; size ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; size ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; size ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; size ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; size ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; size ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; size ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; size ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt;
&apos;Convert media _ service _ url into path . DCNL Args : DCNL root _ desc : str . The root path to the file . DCNL path _ url : str . The path to the file path . &apos;
&apos;Ensure that urlencoded format type format works as intended&apos;
&apos;Given a list of files , returns a 2-tuple of ( path , path ) DCNL and returns the corresponding file . DCNL ARGUMENTS : DCNL - dirs : the list of files in which to turn off DCNL - returns : the number of files in the file , if any , DCNL and returns the corresponding file&apos;
&apos;Parse a list of lines and return a json object . DCNL Args : DCNL lines ( list ) : List of lines to parse DCNL Returns : DCNL list ( list ) : A list of tuples , where each item is a dict&apos;
&apos;Read a signature from a Ed25519 signature pair with OpenBSD signify . DCNL http : / / man.openbsd.org / OpenBSD-current / man1 / signify.1&apos;
&apos;Tokenizes the given input string into escaped words . DCNL &gt; &gt; &gt; words = &#91; ( \ &apos; text \ &apos; , \ &apos; x \ &apos; , 3 ) , ( \ &apos; text \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; text \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; text \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; text \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; text \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; text \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; text \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; text \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; text \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; text \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; text \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; text \ &apos; , \ &apos; text \ &apos; )
&apos; : param process : Process instance . DCNL : type process : int DCNL : param interval : Process ID . DCNL : type interval : int DCNL : param interval : Process ID . DCNL : type interval : int DCNL : param with _ idle : Whether or not to process the stack trace . DCNL : type with _ cpu : bool DCNL : return : Tuple containing information about the process . DCNL : rtype : list &#91; str &#93; &apos;
&apos;Delete a blob . DCNL Args : DCNL bucket _ name : The name of the blob to delete . DCNL blob _ name : The name of the blob to delete . &apos;
&apos;Toggle the watch for the given node , if any . DCNL : arg auth : the authentication node DCNL : type node : str DCNL : param node : the node to examine DCNL : type node : str DCNL : param kwargs : DCNL : type kwargs : DCNL : rtype : bool&apos;
&apos;Prints multi-column formatting for year calendars&apos;
&apos;Load a template tag library module . DCNL Verifies that the template tag contains a custom template tag DCNL in the template module . &apos;
&apos;Adjust pvalues for some tests . DCNL Parameters DCNL pvals : array _ like , 2d DCNL 2d array of floats DCNL Returns DCNL p-value : array , shape ( n _ samples , n _ features ) DCNL p-values of chisquare tests DCNL Notes DCNL Based on https : / / en.wikipedia.org / wiki / fdr _ correction DCNL See Also DCNL benjamini _ hochberg _ step _ down DCNL References DCNL .. &#91; 1 &#93; https : / / en.wikipedia.org / wiki / Cochran _ test DCNL SAS Manual for NPAR TESTS&apos;
&apos;atom : LPAR testlist RPAR&apos;
&apos;Calculate the tanh function of a vector . DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . ISBN : 978-0716724117&apos;
&apos;Return a list of valid parameters for a string . &apos;
&apos;Retrieves the BatchJob with the given id . DCNL Args : DCNL client : an instantiated AdWordsClient used to retrieve the BatchJob . DCNL batch _ job _ id : the id of the BatchJob to be retrieved . DCNL Returns : DCNL The BatchJob associated with the given id . &apos;
&apos;Create a reverse URL for the given app _ name and key _ name . DCNL : param handler _ name : Name of the handler to query DCNL : param key _ name : name of the key to query DCNL : param key _ value : Optional key value to use in the config file DCNL : param key _ value : Optional kwargs to pass to key _ value DCNL : return : URL to use in config _ name DCNL : rtype : str&apos;
&apos;Are we currently in the thread responsable for I / O requests . &apos;
&apos;Scan a postfix _ line based on EXECUTE _ SERVER _ NAME . &apos;
&apos;Make sure the caller can check if a caller can \ &apos; t be raised . &apos;
&apos;Returns if * func * is a dictionary like `` \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ``&apos;
&apos;Tries to find the changes of a dataset . DCNL : param uuid : The uuid of the dataset . DCNL : param current _ state : The desired state of the dataset . DCNL : param desired _ state : The desired state of the dataset . DCNL : return : A dict containing the information about the dataset . &apos;
&apos;Test that all fields are all fields for all fields . &apos;
&apos;Variance of a model DCNL Parameters DCNL W _ list : array-like , shape ( n _ samples , n _ features ) DCNL Weight matrices of the model . DCNL b _ list : array-like , shape ( n _ samples , ) DCNL Biases of the DBM DCNL beta : array-like , shape ( n _ samples , ) DCNL Biases of the model DCNL pa _ bias : array-like , shape ( n _ samples , ) DCNL Biases of the DBM DCNL pa _ bias : array-like , shape ( n _ samples , ) DCNL Biases of the DBM DCNL pa _ bias : array-like , shape ( n _ samples , ) DCNL Biases of the DBM DCNL pa _ bias : array-like , shape ( n _ samples , ) DCNL Biases of the DBM DCNL pa _ bias : array-like , shape ( n _ samples , ) DCNL Biases of the DBM DCNL pa _ bias : array-like , shape ( n _ samples , ) DCNL Biases of the DBM DCNL pa _ bias : array-like , shape ( n _ samples , ) DCNL Biases of the model
&apos;roundrobin ( \ &apos; ABC \ &apos; , \ &apos; D \ &apos; , \ &apos; EF \ &apos; ) -- &gt; A D E B F C&apos;
&apos;Check to see if the given pipeline is present in the given API . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ datapipeline._ pipeline _ exists _ with _ definition my _ pipeline _ id&apos;
&apos;Add an instance type access to the instance type . DCNL : param instance _ id : identifier of the instance type DCNL : param project _ id : id of the project DCNL : param project _ id : identifier of the project . DCNL : return : the created instance type . &apos;
&apos;Utility function to parse _ parse _ func . DCNL Parameters DCNL string : str DCNL Text to parse . DCNL strip : bool , optional DCNL If True , strip the data from the inline format . DCNL verbose : bool , str , str , str , str , str , str , or None DCNL If not None , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL code : object DCNL See Also DCNL parse _ parse _ func DCNL inline _ func = parse _ eval ( \ &apos; / html / html \ &apos; , strip = True ) DCNL &gt; &gt; &gt; parse _ eval ( \ &apos; text / html / html \ &apos; , strip = True ) DCNL &#91; \ &apos; red \ &apos; , \ &apos; red \ &apos; , \ &apos; red \ &apos; , \ &apos; red \ &apos; , \ &apos; red \ &apos; , \ &apos; red \ &apos; , \ &apos; red \ &apos; , \ &apos; red \ &apos; , \ &apos;
&apos;Log a message to the pool , including sending the pool to the pool . DCNL This function is meant to be used to implement a logging system , DCNL which will be written to the logging system . DCNL Parameters DCNL msg : str DCNL The message to log to . Defaults to None . DCNL sfreq : float DCNL The worker to write to . If not specified , it will be used to DCNL suppress logging . If not specified , it will be attached to the DCNL console . DCNL Returns DCNL log _ msg : callable DCNL A logging instance , or None if no logging was found . &apos;
&apos;Updates a single dict that can be updated to the database DCNL if they aren \ &apos; t present . &apos;
&apos;expression : MINUS expression % prec UMINUS&apos;
&apos;Convert string into a string . &apos;
&apos;Frequency text of a normal distribution . DCNL Arguments : DCNL state ( str ) : the state text . DCNL text ( str ) : The text to use . DCNL user _ data ( str ) : The user \ &apos; s text . DCNL user _ data ( str ) : The user data . DCNL Returns : DCNL text ( str ) : The normal text . &apos;
&apos;True if object is an instance of an object . DCNL Always returns an instance of an object . DCNL &gt; &gt; &gt; class MyClass ( object ) : DCNL ... class MyClass ( object ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; datetime ( obj ) DCNL Traceback ( most recent call last ) : DCNL ValueError : if an object is an instance of an object . DCNL &gt; &gt; &gt; llstr.startswith ( \ &apos; \ &apos; ) DCNL True DCNL &gt; &gt; &gt; datetime ( \ &apos; ABC \ &apos; ) DCNL \ &apos; ALA \ &apos; DCNL &gt; &gt; &gt; class MyClass ( object ) : DCNL ... print ( obj ) DCNL Traceback ( most recent call last ) : DCNL ValueError : if an object is an instance of an object . &apos;
&apos;Assert that s is equal to t ( s ) . &apos;
&apos;merge shared variables to a dict . DCNL Parameters DCNL mappings : list of dict DCNL List of variables to merge to . &apos;
&apos;Split key _ split into word _ word _ split into word _ word . DCNL &gt; &gt; &gt; _ key _ split ( &quot; Hola mundo &quot; ) DCNL \ &apos; / home / html \ &apos; DCNL &gt; &gt; &gt; _ key _ split ( \ &apos; / home / html \ &apos; ) DCNL \ &apos; / home / html \ &apos; DCNL &gt; &gt; &gt; _ key _ split ( \ &apos; / home / html \ &apos; ) DCNL \ &apos; { &quot; key &quot; : &quot; / &quot; } \ &apos; &apos;
&apos;Closes the review request object for the current review request . DCNL If the review request is already a review request , it will return DCNL the new review request . DCNL If the review request is already a review request , it will return DCNL the new review request . &apos;
&apos;Return group types that doesn \ &apos; t exist . DCNL If group _ type _ list doesn \ &apos; t exist , the group types will be cached . &apos;
&apos;Entry point for the setup ( ) script . &apos;
&apos;Helper function to convert an integer into an array of values . DCNL Parameters DCNL y : dict DCNL A dictionary with lists of attributes . DCNL normalized : bool , optional ( default = True ) DCNL If True , the dictionary will be converted to a dictionary . DCNL Returns DCNL d : dict DCNL Dictionary mapping attribute values to values . &apos;
&apos;Move task _ name and task _ name into a task name . &apos;
&apos;Generate C pre-processor options ( -D , -U , -I ) as defined by the DCNL macro \ &apos; name \ &apos; and \ &apos; include _ dirs \ &apos; . If \ &apos; include _ dirs \ &apos; is a list of DCNL ( -D , -U ) macro \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , DCNL \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , DCNL \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \ &apos; , \ &apos; name \
&apos;Convert a datetime into a datetime object . DCNL &gt; &gt; &gt; dt = datetime _ to _ datetime ( \ &apos; date \ &apos; ) DCNL &gt; &gt; &gt; convert _ time _ to _ utc ( datetime ( \ &apos; UTC \ &apos; ) ) DCNL datetime.date ( 2000 , 6 , 25 ) &apos;
&apos;Returns a list of the users that have access to the current wiki . &apos;
&apos;Comparison to Python types to use in Python 2.6 . DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL Okay : if isinstance ( x , y ) : DCNL
&apos;Create a new cleaned port for the destination . DCNL : param source : Source source . DCNL : param destination : Source source . DCNL : return : A tuple of ( host , port ) pairs . &apos;
&apos;Sets the &quot; colorbar _ extensions _ length &quot; to test . &apos;
&apos;Send a vpn negotiation packet and return it as a packet . DCNL packet _ id is the value of the packet . DCNL timeout _ id ( int , optional ) : The buffer id . DCNL session _ id ( str , optional ) : The session ID . DCNL Returns DCNL packet _ id : float DCNL The packet address . DCNL packet _ id : float DCNL The port ID . DCNL packet _ id : str DCNL The value of the connection . DCNL Returns DCNL packet _ id : float DCNL The packet address . DCNL packet _ id : float DCNL The value of the connection . DCNL packet _ id : float DCNL The value of the connection . DCNL packet _ id : str DCNL The value of the session . DCNL Returns DCNL packet _ id : float DCNL The packet address . DCNL packet _ id : float DCNL The port ID . DCNL packet _ id : str DCNL The value of the connection . DCNL packet _ id : str DCNL The value of the session . DCNL Returns DCNL packet _ id : float DCNL The
&apos;Print documentation for each line , returning the output . &apos;
&apos;Formats a date object to use for HTTP requests . DCNL &gt; &gt; &gt; import datetime DCNL &gt; &gt; &gt; httpdate ( datetime.datetime ( 1970 , 1 , 1 , 1 ) ) DCNL \ &apos; Thu , 01 Jan 1970 01 : 01 GMT \ &apos; &apos;
&apos;Create a datadog service instance for interacting with Datadog . &apos;
&apos;Gets node information from a batch node . DCNL Returns : DCNL A list of tuples of the form ( x , y ) tuples . &apos;
&apos;Volunteer Group Types for Channels DCNL - used for Imports &amp; Reports&apos;
&apos;Check if the container exists . &apos;
&apos;Try to get an integer DCNL : param int int _ str : DCNL : param default _ default _ default : DCNL : return : &apos;
&apos;True if the alpha color is a color number . &apos;
&apos;Gets the words from a string and returns the word numbers . DCNL Args : DCNL value : The value to parse . DCNL Returns : DCNL A string with the words corresponding to the value . &apos;
&apos;Example : DCNL &gt; &gt; &gt; list ( shape ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; shape ( &#91; \ &apos; x \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; shape ( &#91; \ &apos; x \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; shape ( &#91; \ &apos; x \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; shape ( &#91; \ &apos; x \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; shape ( &#91; \ &apos; x \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL &#91; \ &apos; x
&apos;Turn a numpy array into 1-hot encoded samples . &apos;
&apos;Function to run a command in systemd DCNL : param command : DCNL : return : DCNL : rtype : &apos;
&apos;Return a Font representation . DCNL This function is meant to be used by ``make _ plot`` . &apos;
&apos;Default 404 handler . DCNL Templates : `404.html` DCNL Context : DCNL request _ name DCNL The URL of the requested URL ( e.g. , \ &apos; / app / pages / bad _ page \ &apos; ) &apos;
&apos;Test to install a package with \ &apos; show install install \ &apos; on a package . &apos;
&apos;Compute the coefficients of a polynomial in `K &#91; x &#93; ` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.solvers.solvers import solve _ solve _ poly DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; solve _ solve _ poly ( x * * 2 * x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x *
&apos;Returns a string representation of the given string DCNL .. versionadded : : 2014.7.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; hashutil.base64 _ encode&apos;
&apos;process for displaying a graph&apos;
&apos;Return True if successful , otherwise False DCNL : return : True if successful , False if not DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; system.get _ disable _ keyboard _ on _ mode&apos;
&apos;Returns the user details for the given user . &apos;
&apos;Call linecache.checkcache ( ) to preserve the original linecache.checkcache ( ) DCNL Args : DCNL filename ( str ) : The name of the original linecache.checkcache ( ) DCNL orig _ checkcache is taken from the signal to the original DCNL alert . DCNL Returns : DCNL dict ( dict ) : The original linecache.checkcache ( ) &apos;
&apos;Compute the correct spatial reference for each individual DCNL This is used to make sure that we can \ &apos; t know how to make the DCNL training set of the correct spatial patch for each other . DCNL We don \ &apos; t know how to make sure we don \ &apos; t know how to generate the DCNL training set of them to make sure we don \ &apos; t know how to handle them . DCNL We don \ &apos; t know how to make sure we don \ &apos; t know what you want to DCNL make sure we don \ &apos; t know how to make sure we don \ &apos; t know how to DCNL make sure to make sure we don \ &apos; t know how to make sure that they DCNL can be used . &apos;
&apos;Pop an item from a queue , return the top level DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; state.pop \ &apos; sqlite &gt; &apos;
&apos;Add a hook function to add extra keyword arguments to the ResourceManager . DCNL The `do _ foo` calls will be called from the ResourceManager . &apos;
&apos;Test get _ prefixes ( ) method for testing . &apos;
&apos;Returns a HttpResponse whose content is used as an AJAX GET request . &apos;
&apos;Synchronously connect the database to a modbus server DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; redis.ping&apos;
&apos;Image data resource factory method&apos;
&apos; : param manager : The manager for which to run the command . DCNL : param options : Parsed command line options . DCNL : return : A dictionary containing the settings and the settings . &apos;
&apos; : param dict options : Parsed command line options DCNL : param dict args : Mapping of image location to be passed to the DCNL : py : class : ` ~ elasticsearch.Elasticsearch.bulk` api . &apos;
&apos;Only load if the cloud module is available in _ _ salt _ _ &apos;
&apos;Write the hexadecimal digest to a hex digest . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; test.hex _ digest family = ipv6&apos;
&apos;Count the number of words in the string pattern . Return a list of words . DCNL @ param text : Match text DCNL @ type text : str DCNL @ param pattern1 : list of words in pattern DCNL @ rtype : string&apos;
&apos;Local minimum of the minimum image in an image . DCNL Parameters DCNL image : 2-D array ( uint8 , uint16 ) DCNL Input image . DCNL selem : 2-D array DCNL The neighborhood expressed as a 2-D array of 1 \ &apos; s and 0 \ &apos; s . DCNL out : 2-D array ( same dtype as input ) DCNL If None , the complete image is used ( default ) . DCNL shift _ x , shift _ y : int DCNL Offset added to the structuring element center point . Shift is bounded DCNL to the structuring element sizes ( center must be inside the given DCNL structuring element ) . DCNL Returns DCNL out : 2-D array ( same dtype as input image ) DCNL Output image . DCNL Examples DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage.morphology import disk DCNL &gt; &gt; &gt; from skimage.filters.rank import minimum DCNL &gt; &gt; &gt; from skimage.morphology import disk DCNL &gt; &gt; &gt; from skimage.filters.rank import minimum DCNL &gt; &gt; &gt; img = data.camera ( ) DCNL &gt; &gt; &gt; img = data.camera ( ) DCNL &gt; &gt; &gt; minimum ( img
&apos;Compute the entropy of a series of standard deviations from a series . &apos;
&apos;Get the start of the event loop list for the given list . DCNL @ param list _ id : the list of the chapters to be used . DCNL @ type list _ id : str DCNL @ param item _ id : The resource id . DCNL @ type item _ id : str DCNL @ param resource : The resource type to use . DCNL @ type resource : L { str } DCNL @ param resource : The resource record to use . DCNL @ type record : int DCNL @ param record : The resource record to use . DCNL @ type record : int DCNL @ param record : The resource record to use . DCNL @ type record : int DCNL @ param record : The resource record to use . DCNL @ type record : int DCNL @ param record : The resource record to use . DCNL @ type record : int DCNL @ param record : The resource record to use . DCNL @ type record : int DCNL @ param record : The resource record to use . DCNL @ type record : int DCNL @ param record :
&apos;Sets the fake web-history object . &apos;
&apos;Attempt to determine the contents of a repository into a temporary file . DCNL This is used to determine the contents of a repository to a local DCNL repository . DCNL If a repository is not specified , it will be converted to a local DCNL repository . &apos;
&apos;Read a stored checksum . DCNL Parameters DCNL target : str DCNL The target of the string . DCNL % ( int ) DCNL The length of the string . DCNL % ( int ) s DCNL The length of the string . DCNL Returns DCNL data : str DCNL The formatted string . &apos;
&apos;Add libraries to libraries . DCNL Args : DCNL libraries ( list ) : List of libraries to enable . &apos;
&apos;Create a new webhook channel . DCNL Args : DCNL url : A string representing the URL to use . DCNL token : A string representing the expiration time . DCNL expiration : A string representing the expiration time . DCNL params : A string representing the expiration time . DCNL params : A tuple of parameters that will be used when the user was DCNL sent to . DCNL Returns : DCNL An apiproxy _ stub _ map.UserRPC object specialized for this service . &apos;
&apos;The default URL for the current environment , and if it \ &apos; s not DCNL available , then it \ &apos; s not available . &apos;
&apos;Takes a query string and returns the results based on the user _ url . DCNL : param room _ url _ key : the name of the room&apos;
&apos;Load a collection from database DCNL @ param Collection collection collection DCNL @ param bool topological&apos;
&apos; .. versionadded : : 2016.3.0 DCNL Return a list of available rules . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.get _ rules DCNL salt \ &apos; * \ &apos; service.get _ rules
&apos;determines how memberships are calculated based on the groups of the groups DCNL of the group . &apos;
&apos;Return the mu accuracy of the current audio file . DCNL Parameters DCNL sample : int DCNL The audio output to use . DCNL Returns DCNL rval : float DCNL The p-value for the current audio . &apos;
&apos;Parse a location _ to _ query function and returns the query _ to _ query _ query function . DCNL This function assumes that the location _ to _ query function is called . DCNL : param location : the location of the location DCNL : type location : str or None DCNL : param wildcard : the path to the location to be converted DCNL : param tag : the tag to parse DCNL : param tag : the tag to parse DCNL : returns : the query string DCNL : rtype : dict ( str , str ) &apos;
&apos;Returns a list of ( id , value ) tuples where each list is a list of dicts . DCNL Args : DCNL objects : list of dicts . DCNL Returns : DCNL list of dicts with the keys \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos;
&apos;List profiles of user DCNL user DCNL The user to get DCNL default _ hidden DCNL If true , then the user will be logged in . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; rbac.profile _ list&apos;
&apos;Return a list of all available datacenter locations on the provider . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud --list-locations my-proxmox-config&apos;
&apos;Orthogonal size of dimensions with shape DCNL &gt; &gt; &gt; size = &#91; 1 , 2 , 3 , 4 &#93; DCNL &gt; &gt; &gt; size = K.size ( ) DCNL &gt; &gt; &gt; size ( x ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; size ( x , shape = &#91; 1 , 2 , 3 &#93; ) DCNL array ( &#91; &#91; 0 , 1 , 2 &#93; , DCNL &#91; 0 , 1 , 2 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91;
&apos;Similar to str.format , but uses format _ html instead . &apos;
&apos;Change the user \ &apos; s Full Name DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; user.chfullname foo \ &apos; Foo Bar \ &apos; DCNL salt \ &apos; * \ &apos; user.chfullname foo &quot; Foo Bar &quot; &apos;
&apos; &gt; &gt; &gt; _ get _ object ( id _ or _ symbols ( \ &apos; id _ or _ symbols \ &apos; ) DCNL ( \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; ) DCNL &gt; &gt; &gt; id _ or _ symbols ( \ &apos; _ _ init _ _ \ &apos; ) DCNL ( \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; ) DCNL &gt; &gt; &gt; id _ or _ symbols ( \ &apos; _ _ init _ _ \ &apos; ) DCNL ( \ &apos; id \ &apos; , \ &apos; id \ &apos; , \ &apos; id \ &apos; ) DCNL &gt; &gt; &gt; assert _ _ _ id _ _ ( id _ or _ symbols ( id ) ) DCNL \ &apos; _ _ init _ _ \ &apos; DCNL &gt; &gt; &gt; _ get _ object ( id _ or _ symbols ( \ &apos; _ _ init _ _ \ &apos; ) DCNL ( \ &apos; id \ &apos; , \ &apos; id \ &apos; ) DCNL &gt; &gt; &gt; _
&apos;Returns the list of deleted objects for the given model and user _ name . DCNL If there is no such objects for the given objects , then this function DCNL will return all objects for the given objects . DCNL If there is no such objects , this function will return the list of DCNL objects for the given objects . &apos;
&apos;Interpolate bad channels from the data . DCNL Parameters DCNL inst : ndarray , shape ( n _ channels , n _ channels ) DCNL Array containing the channels to be plotted . DCNL Returns DCNL r : ndarray , shape ( n _ channels , n _ channels ) DCNL The transformed data . &apos;
&apos;Return the beacons of the minion DCNL : param dict opts : The Salt options dictionary DCNL : param function : The context of the function DCNL : return : The decorated function DCNL : rtype : dict DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; saltutil.beacons&apos;
&apos;Returns the VPC associated with the specified VPC ID . DCNL Raises an exception if the specified VPC ID is not found . DCNL Raises an exception if the specified VPC ID is not found . &apos;
&apos;Decorator to mark the function as root . DCNL This decorator requires the decorator to mark the function as root . &apos;
&apos;Adds a single database to the Postgres server . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; mysql.db _ db dbname DCNL salt \ &apos; * \ &apos; mysql.db _ db \ &apos; dbname \ &apos; &apos;
&apos;Extract a javascript source code from a Python source file . &apos;
&apos;Checks whether the given attribute is on the given attribute DCNL : param ava : The value of the attribute DCNL : param acs : List of AttributeConverter instances DCNL : param acs : List of AttributeConverter instances DCNL : param required : optional required for the operation DCNL : param optional : optional * optional * * optional ) DCNL : param optional : optional optional ( optional ) DCNL : return : A dictionary of updated values DCNL : rtype : bool&apos;
&apos;Check to see if a certificate is absent . DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ iam.server _ cert _ absent region = us-east-1&apos;
&apos;Get seconds since epoch ( UTC ) . DCNL Per `section 3.3` _ of the spec . DCNL .. _ `section 3.2.1` : http : / / tools.ietf.org / html / rfc5849 # section-3.3&apos;
&apos;Compute the initial degree of the Hermite polynomial . DCNL Parameters DCNL n : int DCNL Quadrature nodes DCNL k : int , optional DCNL Number of nodes to evaluate DCNL Returns DCNL nodes : ndarray DCNL Quadrature nodes DCNL nodes : ndarray DCNL Quadrature nodes DCNL See Also DCNL roots _ hermite _ asy&apos;
&apos;Format all zeros to scale . DCNL Parameters DCNL scale : float DCNL Input scale . DCNL copy : bool , optional DCNL If True , scale all zeros to scale . DCNL Returns DCNL out : ndarray , shape ( n _ samples , ) DCNL Output matrix . &apos;
&apos;Find the maximum distance between a file and return a string . &apos;
&apos;Check to see if \ &apos; dev \ &apos; is not available . DCNL Returns None if not found . &apos;
&apos;Convert an integer into integer number . &apos;
&apos;Create an instance of the figure . DCNL : return : DCNL An instance of : class : ` ~ matplotlib.figure.Figure instance DCNL : rtype : : class : ` ~ matplotlib.figure.Figure instance DCNL : return : The new figure . &apos;
&apos;Return the value associated with the first value of the parsed dictionary DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; cassandra.rlist&apos;
&apos;Renders the URL for a given URL . DCNL Usage : : DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL { % url path.to.some _ view arg1 arg2 % } DCNL
&apos;Helper function to make an option value from a string value DCNL &gt; &gt; &gt; make _ instance ( \ &apos; Zm9vYmFy \ &apos; ) DCNL \ &apos; Zm9vYmFy \ &apos; DCNL &gt; &gt; &gt; make _ instance ( \ &apos; foobar \ &apos; ) DCNL \ &apos; Zm9vYmFy \ &apos; DCNL &gt; &gt; &gt; make _ instance ( \ &apos; \ &apos; ) DCNL \ &apos; Zm9vYmFy \ &apos; DCNL &gt; &gt; &gt; make _ instance ( \ &apos; \ &apos; ) DCNL \ &apos; Zm9vYmFy \ &apos; DCNL &gt; &gt; &gt; make _ instance ( \ &apos; \ &apos; ) DCNL \ &apos; Zm9vYmFy \ &apos; DCNL &gt; &gt; &gt; make _ instance ( \ &apos; \ &apos; ) DCNL \ &apos; Zm9vYmFy \ &apos; DCNL &gt; &gt; &gt; make _ instance ( \ &apos; \ &apos; ) DCNL \ &apos; Zm9vYmFy \ &apos; DCNL &gt; &gt; &gt; make _ instance ( \ &apos; \ &apos; ) DCNL
&apos;Returns the integral of the given operators . DCNL This function is meant to be used in two ways : DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; t = get _ fragments _ operators ( ) DCNL &gt; &gt; &gt; print ( x ) DCNL ( x , y ) DCNL &gt; &gt; &gt; t = get _ fragments _ operators ( ) DCNL &gt; &gt; &gt; print ( x ) DCNL ( x , y ) DCNL &gt; &gt; &gt; t = get _ fragments _ operators ( ) DCNL &gt; &gt; &gt; print ( x ) DCNL ( x , y ) DCNL &gt; &gt; &gt; t = get _ fragments _ operators ( ) DCNL &gt; &gt; &gt; print ( x ) DCNL ( x , y ) DCNL &gt; &gt; &gt; t = get _ fragments _ operators ( ) DCNL &gt; &gt; &gt; print ( x ) DCNL ( x , y ) DCNL &gt; &gt; &gt; t = get _ fragments _ operators ( ) DCNL &gt; &gt; &gt; print ( x ) DCNL ( x , y ) DCNL &gt; &gt; &gt; t = get _
&apos;Validates a source of source files for a given spec . DCNL Args : DCNL spec : The spec to validate . DCNL version : The version of the source file . DCNL Returns : DCNL A list of strings describing the source of the source files . &apos;
&apos;Set up the configuration and configuration files to the assistive access configuration . DCNL This is a wrapper around : py : func : ` ~ ckan.logic.action.update.config _ option _ update` . DCNL : param config : The configuration object . DCNL : param config : The configuration configuration to use . DCNL : return : True if successful , False if not . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; win _ iis.remove _ event config _ name = \ &apos; / path / to / Connection \ &apos; &apos;
&apos;Returns the n-th central moment of the given axis . DCNL Parameters DCNL a : array _ like DCNL Input array . DCNL moment : float , optional DCNL Axis along which to compute variance . Default is 0 . DCNL axis : int , optional DCNL Axis along which to operate . Default is 0 . Default is 0 . DCNL nan _ policy : boolean , optional ( default = True ) DCNL Axis along which to compute calculations . Default is 0 . DCNL Returns DCNL skewness : ndarray ( float , float ) DCNL The variance of the given array . &apos;
&apos;Call GCE \ &apos; s public key from the provider . DCNL vm \ _ DCNL The name of the VM to create . DCNL vm _ name DCNL The name of the VM to create . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; virt.create &lt; vm name &gt; &apos;
&apos;Get memory information about the proc / proc / net / statm output . &apos;
&apos;helper function to get the same resource params as a list of DCNL resource params . &apos;
&apos;make _ array _ suite ( ) should return _ _ list&apos;
&apos; &gt; &gt; &gt; get _ backref ( \ &apos; A \ &apos; , \ &apos; c \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; get _ backref ( \ &apos; A \ &apos; , \ &apos; c \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; get _ backref ( \ &apos; A \ &apos; , \ &apos; c \ &apos; ) DCNL ( \ &apos; A \ &apos; , \ &apos; c \ &apos; ) DCNL &gt; &gt; &gt; get _ backref ( \ &apos; A \ &apos; , \ &apos; c \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; get _ backref ( \ &apos; A \ &apos; , \ &apos; c \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; get _ backref ( \ &apos; A \ &apos; , \ &apos; c \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; get _ backref ( \ &apos; A \ &apos; , \ &apos; c \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; get _ backref ( \ &apos;
&apos;Create derivation D on k ( p ) from k ( p ) in k &#91; t &#93; in k &#91; t &#93; . DCNL Given a derivation D on k ( p ) = = p ( p ) = = p ( p ) = = p ( p ) = = p ( p ) = = p ( p ) = = p _ n DCNL Given a derivation D on k ( p ) = = p ( p ) = = p ( p ) = = p ( p ) = = p . DCNL Given a derivation D ( p , p ) = = p ( p ) = = p ( p ) = = p ( p ) = = p ( p ) = = p ( p ) = = p ( p ) = = p ( p ) = = p ( p ) = = f ( p ) = = f ( p ) = = f ( t ) . &apos;
&apos;Clear the caches and returns the caches for debugging . &apos;
&apos;Get the github issue for a given issue . DCNL : param issue _ number : The GitHub issue number . DCNL : param repo _ name : The name of the repository . DCNL : param repo _ name : The name of the repository . DCNL : param profile : The name of the repository . DCNL : return : A string containing the information about the issue . DCNL : rtype : str DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion github.get _ repo \ &apos; issue \ &apos; &apos;
&apos;Return the difference between two sets of nodes in G . DCNL Parameters DCNL G : NetworkX graph DCNL A NetworkX graph . DCNL H : NetworkX graph DCNL An undirected graph . DCNL Returns DCNL G : NetworkX graph DCNL A NetworkX graph . DCNL Examples DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph
&apos;Returns a valid URI string for the given uri and host . DCNL If host is None , the uri will be returned . &apos;
&apos;Return the list of ( course _ key , course _ key ) for the given course . &apos;
&apos;Removes all users in the given list of hosts ( if any ) DCNL : param hosts _ to _ release : set or idents for hosts to release DCNL : type hosts _ to _ release : str DCNL : param username : login of the user reserving hosts DCNL : type username : str DCNL : param username : login of the user reserving hosts DCNL : type username : str DCNL : return : number&apos;
&apos;Run all of the benchmarks that have been executed . DCNL Returns : DCNL None&apos;
&apos;Delete the user preference preference for a user . DCNL Args : DCNL requesting _ user ( User ) : The requesting user . DCNL preference _ key ( str ) : The name of the user preference . DCNL username ( str ) : The username of the user preference . DCNL Returns : DCNL True if the user preference is deleted , False otherwise . &apos;
&apos; .. versionadded : : 2015.8.0 DCNL Delete a specific disk DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -f delete _ disk my-azure name = my _ disk&apos;
&apos; &gt; &gt; &gt; test _ job ( ) DCNL 1 DCNL &gt; &gt; &gt; test _ job ( ) DCNL Traceback ( most recent call last ) : DCNL NameError : \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; test _ job ( ) DCNL \ &apos; test \ &apos; DCNL &gt; &gt; &gt; test _ job ( ) DCNL \ &apos; test \ &apos; DCNL &gt; &gt; &gt; test _ job ( ) DCNL \ &apos; test \ &apos; DCNL &gt; &gt; &gt; test _ job ( ) DCNL \ &apos; test \ &apos; DCNL &gt; &gt; &gt; test _ job ( ) DCNL \ &apos; test \ &apos; DCNL &gt; &gt; &gt; test _ job ( ) DCNL \ &apos; test \ &apos; DCNL &gt; &gt; &gt; test _ job ( ) DCNL \ &apos; test \ &apos; DCNL &gt; &gt; &gt; test _ job ( ) DCNL \ &apos; test \ &apos; DCNL &gt; &gt; &gt; test _ job ( ) DCNL \ &apos; test \ &apos; DCNL &gt; &gt; &gt; test _ job ( ) DCNL \ &apos; test \ &apos; DCNL &gt; &gt; &gt; test _ job ( ) DCNL \ &apos; test
&apos;Return true if the character is not in the XML element . &apos;
&apos;Format a file DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; partition.mkfs / dev / sda2 fat32&apos;
&apos;Make sure an answer is complete . If an error is raised , DCNL we will send an answer to an error message . &apos;
&apos;Returns the maximum number of elements in a tensor , alongside the specified axis . DCNL Args : DCNL a ( cupy.ndarray ) : Array to take the maximum . DCNL axis ( int , optional ) : Along which axis to take the maximum . DCNL out ( cupy.ndarray ) : Output array . DCNL keepdims ( bool ) : If ``True`` , the axis is remained as an axis of DCNL one axis . DCNL Returns : DCNL cupy.ndarray : The maximum of ``a`` along the axis . DCNL .. seealso : : : func : `numpy.argmax`&apos;
&apos;Simply print unformatted text . This is the ultimate fallback . &apos;
&apos;Returns a HttpResponse whose content looks for a file based on its content . &apos;
&apos;Given a list of paths and converts them to a list of tuples , DCNL and converts them into a list of tuples . DCNL The first element is a list of tuples , where each element is DCNL a list of tuples , where each element is a list of tuples , DCNL and a list of tuples that will be added to the path . &apos;
&apos;Map an IP address to record an IP address . DCNL Used to record an IP address in printable format . DCNL @ type record : str DCNL @ param record : DNS record to record . DCNL @ type record : str DCNL @ return : packed IP address , or None if not found . &apos;
&apos;Install setuptools and EasyInstall&apos;
&apos;Collect all the following files from a previous test . DCNL : return : DCNL A list of : py : class : ` ~ datetime.datetime` objects . &apos;
&apos;Create a new Connection object . DCNL @ param pool : The method to wrap . DCNL @ type pool : L { dict } DCNL @ return : A L { REQUEST } instance with the old authentication connection . &apos;
&apos;Attempt to turn a connection to a synchronous connection if it is DCNL closed . &apos;
&apos;Returns the name of a Python table in the filesystem . DCNL @ param col : The column name . DCNL @ param row : The row row . DCNL @ return : The name of the table . &apos;
&apos;Given a filename , return the full path to the target directory . DCNL If the filename is not a file , it will return the full path . DCNL Otherwise , returns the full path to the file . DCNL If the filename is not a file , it is returned . DCNL : param filename : The filename to create the target info from . DCNL : return : The absolute path to the file . &apos;
&apos;Issue a warning with a warning . DCNL Parameters DCNL msg : str DCNL The message to print . DCNL Returns DCNL msg : callable DCNL A warning . &apos;
&apos;Return \ &apos; a \ &apos; , \ &apos; / \ &apos; , \ &apos; / \ &apos; , \ &apos; / \ &apos; , \ &apos; / \ &apos; , \ &apos; / \ &apos; , \ &apos; / \ &apos; , \ &apos; / \ &apos; , \ &apos; / \ &apos; , or \ &apos; / \ &apos; &apos;
&apos;Starts a client for the given port . DCNL Helper function for client _ generator ( ) . DCNL : param port : Port to connect to . DCNL : param bytes port : Port to connect to . DCNL : param int timeout : Maximum number of seconds to use . Defaults to 1.0 . DCNL : return : generator of : py : class : ` ~ google.cloud.logging.client.Client` DCNL : param port : The port to connect to . DCNL : type host : int DCNL : param port : The number of seconds to connect to . DCNL : type timeout : int DCNL : param delay : The percentage usage of the server . DCNL : type timeout : int DCNL : param timeout : Maximum number of seconds to wait for the server . DCNL : return : generator of : class : ` ~ PIL.Image.Image` object . &apos;
&apos;Multiply ``f`` by ``c * x * * i`` in ``K &#91; X &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys import ring , ZZ DCNL &gt; &gt; &gt; R , x , y = ring ( &quot; x , y &quot; , ZZ ) DCNL &gt; &gt; &gt; R.dmp _ mul _ ground ( x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x *
&apos;Build a title for a title . DCNL Parameters DCNL title _ dict : dict DCNL The title of the title . DCNL canonical : str , optional DCNL The name of the title to use . Default is \ &apos; title \ &apos; . DCNL captcha _ title : str , optional DCNL The name of the title to be used . DCNL Returns DCNL title : str DCNL The title of the title . &apos;
&apos;Returns a semaphore object&apos;
&apos;Fail if the ``RPM`` file at ``rpm _ path`` contains the DCNL `` _ _ command _ _ `` option . DCNL : param case : The ``TestCase`` whose assert methods will be called . DCNL : param logger logger : The logger to use for logging . &apos;
&apos; .. todo : : DCNL WRITEME&apos;
&apos;Create the model class for the model and initialize the model . &apos;
&apos;Make sure the process _ pid is done in test _ pid _ name . DCNL This function is designed to be done in test _ init _ _ init _ _ .py . &apos;
&apos;Determine the path points of a vector3 points . DCNL If there is none , the radius points to the center point . &apos;
&apos;test _ _ import _ _ import _ _ import _ without _ import`` . &apos;
&apos;Create a request object from a node . DCNL : param node : node dictionary from the ring DCNL : param part : part of the request DCNL : param method : method name DCNL : param path : name of the request DCNL : param resource _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : return
&apos;Args : DCNL vectors : the vectors for which to build the model DCNL shape ( list of ints ) : The shape of the input vectors DCNL settings ( int ) : the name of the model DCNL Returns : DCNL a tuple consisting of ( width , height ) DCNL Raises : DCNL ValueError : if the given vectors could not be determined . &apos;
&apos;Runs the CalendarExample headers with the specified username and DCNL password values . For example : DCNL GET _ password = proxy ( \ &apos; username \ &apos; , password = \ &apos; password \ &apos; ) DCNL oauth _ password = &#91; DCNL \ &apos; password \ &apos; , \ &apos; password \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; password \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; password \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; password \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; password \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; password \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; password \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; password \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; password \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; password \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; password \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; password \ &apos;
&apos;Parse \ &apos; n \ &apos; into a list of floats . &apos;
&apos;Since we don \ &apos; t have an image , we don \ &apos; t need to be discussed on DCNL http : / / www.ics.uci.edu / ~ eppstein / PADS / DFS.py DCNL by D. Kroon , 2009 , Short Paper University Twente , Numerical DCNL Optimization of Kernel Based Image Derivatives . &apos;
&apos;This will fetch the version of the given number of values . DCNL For example : : DCNL { % version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { % Version % } DCNL { %
&apos;metaWeblog.getPost ( blog _ id , username , password , post ) DCNL : param blog _ id : string DCNL : param username : username DCNL : param password : string DCNL : param post : DCNL : param publish : DCNL : param publish : DCNL : return : &apos;
&apos;Return True if the entire screen is made up to the end of the DCNL sentence&apos;
&apos;Retrieve an unpickled object . DCNL : param fname : The name of the file . DCNL : return : The pickled object . &apos;
&apos;Only work on POSIX-like systems DCNL CLI Example : DCNL .. code-block : : bash DCNL salt -G \ &apos; os _ family : Windows \ &apos; os _ family : Windows \ &apos; os _ family : Windows \ &apos; &apos;
&apos;Write the given string to unicode using the given encoding . DCNL If it is not a unicode string , then it will be written to DCNL the given encoding . If it is not a unicode string , it will DCNL be used instead of raising an exception . &apos;
&apos;Try to check the existing package in a list . DCNL Args : DCNL package ( str ) : package name to check DCNL package _ files ( str ) : package name to check DCNL config _ file ( str ) : package name to check DCNL Returns : DCNL bool : True if the package is existing , False if not found DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.check _ existing package _ path DCNL salt \ &apos; * \ &apos; pkg.check _ existing package _ path = \ &apos; http : / / localhost / foo / bar \ &apos; DCNL salt \ &apos; * \ &apos; pkg.check _ existing package _ path = \ &apos; http : / / localhost / foo / bar \ &apos; DCNL salt \ &apos; * \ &apos; pkg.version _ existing package _ path = \ &apos; http : / / example.com / foo / bar \ &apos; DCNL salt \ &apos; * \ &apos; pip.check _ existing &lt; package name &gt; \ &apos; &#91; \ &apos; bar \ &apos; &#93; &#91; \ &apos; bar \
&apos;Test that there is a wrong type of the classifier . DCNL This is called only when the caller is called with a wrong type . DCNL Regression test for https : / / github.com / astropy / astropy / pull / 362&apos;
&apos;Create a link for a named route . DCNL For example : : DCNL toolkit.link _ link ( \ &apos; Login \ &apos; ) DCNL def my _ link ( text ) : DCNL print ( \ &apos; hello world ! \ &apos; ) DCNL print ( \ &apos; http : / / localhost / html \ &apos; ) DCNL print ( \ &apos; http : / / localhost / html \ &apos; ) DCNL url = \ &apos; http : / / localhost / html \ &apos; , \ &apos; Login \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos; yellow \ &apos; , \ &apos;
&apos;List roles for a role DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; rbac.role _ list&apos;
&apos;Configure size-text . DCNL Requires the Jenkins : jenkins-wiki : `Exclusion Plugin &lt; Exclusion-Plugin &gt; ` . DCNL Example : DCNL .. literalinclude : : / .. / .. / tests / publishers / fixtures / gitbucket-minimal.yaml DCNL : language : yaml DCNL Full Example : DCNL .. literalinclude : : / .. / .. / tests / publishers / fixtures / text-minimal.yaml DCNL : language : yaml&apos;
&apos;Expected locale _ code _ include _ include _ include ( ) , locale = \ &apos; en _ US \ &apos; ) = &gt; { \ &apos; en _ US \ &apos; : \ &apos; en _ US \ &apos; } &apos;
&apos;Raise an error if the document is too large enough . DCNL : param operation : the operation . DCNL : param doc _ size : the size of the document . DCNL : param max _ size : The max _ size of the chunk . &apos;
&apos;Creates a model from the neural network . DCNL Args : DCNL session ( Session ) : The session to create the model for . DCNL forward _ only : bool , optional ) DCNL Returns : DCNL A model instance . DCNL Raises : DCNL ValueError : if the model is not recognized . &apos;
&apos;Setup the ZigBee switch platform . &apos;
&apos;Create a credential based on the configuration config . DCNL This is useful to middlewares . DCNL .. versionadded : : 2016.11.0 DCNL Usage : DCNL &gt; &gt; &gt; client = create _ creds _ resolver ( ) DCNL &gt; &gt; &gt; client = create _ creds _ resolver ( \ &apos; ec2 \ &apos; ) DCNL &gt; &gt; &gt; create _ credentials _ resolver ( \ &apos; plotly _ config \ &apos; ) DCNL \ &apos; bob \ &apos; DCNL .. versionadded : : 2016.11.0 DCNL : param session : The session object to create . DCNL : type session : : class : `certbot.configuration.NamespaceConfig`&apos;
&apos;Show all the figures and enter the current screen . DCNL This is useful for debugging . &apos;
&apos;Test that we can use the corrmat randomization . &apos;
&apos;Check that the value is missing and returns True if it doesn \ &apos; t exist , DCNL otherwise returns True . DCNL This function returns True if the value is missing , False otherwise . DCNL : param value : the value to be converted DCNL : returns : True if the value is True , False otherwise&apos;
&apos;Computes the harmonic mean of precision and recall . DCNL The difference is the harmonic mean of precision and recall . DCNL The difference is the harmonic mean of precision and recall . DCNL The difference is the harmonic mean of precision and recall . DCNL Parameters DCNL x : array-like , shape ( n _ times , n _ times ) DCNL The difference between two matrices . DCNL y : array-like , shape ( n _ times , n _ times ) DCNL The difference of difference between two matrices . DCNL t : float , shape ( n _ times , ) DCNL The difference of difference between two matrices . DCNL t : float , optional DCNL The value of the precision and recall . DCNL Returns DCNL q : float DCNL The harmonic mean of precision . DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . ISBN : 978-0716724117&apos;
&apos;Find all folders in a path DCNL : param path : path to the folder DCNL : param include _ parent : if True , include the parent directory DCNL : param show _ hidden : if True , don \ &apos; t include folder DCNL : param show _ hidden : if True , don \ &apos; t include folder DCNL : return : a list of folders DCNL : rtype : list ( str ) &apos;
&apos;Get the gcode file and parse the gcode file . &apos;
&apos;Test that we don \ &apos; t find the correct SR . &apos;
&apos;A helper method for methods and methods . DCNL : param func : The function to decorate . DCNL : type func : callable DCNL : returns : A tuple of ( name , value ) pairs . DCNL : rtype : dict&apos;
&apos;Try to guess a tag for the specified tag . DCNL Parameters DCNL user _ tags : string DCNL The name of the tag to check . DCNL state : string DCNL The name of the user to check . DCNL text : str DCNL The name of the source file . DCNL user _ data : str DCNL The name of the user to check . DCNL user _ data : string DCNL The user \ &apos; s text . DCNL Returns DCNL branch : str DCNL The formatted string . &apos;
&apos;Return a new copy of the string . If the input is a DCNL string , then a new string will be replaced with a new one . DCNL If the string is not a regular expression , it will be removed DCNL with the first one . &apos;
&apos;URL decode the given string into a unicode string . DCNL : param s : the string to unquote . DCNL : param encoding : The encoding of the string . DCNL : return : The unicode string . &apos;
&apos;Place an order by id and number of digits . DCNL : param id _ or _ ins : the id or Instrument identifier . DCNL : type id _ or _ ins : str or Instrument DCNL : param int amount : Order type . DCNL : type amount : int DCNL : param style : Order type . DCNL : type style : int&apos;
&apos;Test to ensure hug \ &apos; s basic auth correctly handles basic auth&apos;
&apos;Build the flow dictionary from a dictionary of nodes . DCNL Parameters DCNL G : graph DCNL A NetworkX graph . DCNL R : dict DCNL A dictionary of node names . DCNL Returns DCNL dict DCNL A dictionary keyed by node label . &apos;
&apos;Detach the given policy from the given policy . DCNL Returns { deleted : true } if the policy was created and returns DCNL { deleted : False } if the policy was not created . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ ec2.detach _ principal _ policy mypolicy mycognitoID&apos;
&apos;Check to see if the named service is disabled to start on boot DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.disabled &lt; service name &gt; &apos;
&apos;Setup the configurator component . DCNL : param config : The configuration configuration to setup . DCNL : param config : The configuration configuration . &apos;
&apos;A replacement for the replacement for a callable . &apos;
&apos;Create a new group . DCNL : param id : the id or name of the group DCNL : type id : string DCNL : param id : the id or name of the group DCNL : type id : string DCNL : rtype : dictionary&apos;
&apos;Find a file from a given document and create a new one . DCNL This is a convenience method for creating a new one . DCNL Args : DCNL children ( list ) : List of file objects to search for . DCNL source ( str ) : The source of the file . DCNL destination _ node ( str ) : The destination node for the file . DCNL obj ( str ) : The node to search for . DCNL obj ( str ) : The object to search for . DCNL Returns : DCNL A list of ( new , col ) tuples . &apos;
&apos;Writes the data to a file . DCNL Parameters DCNL logfile : file DCNL The log file to write to . DCNL cores : list of strings DCNL The line to write to . DCNL minute _ scale : int DCNL The value of the line to write to . DCNL space _ scale : int DCNL The value of the line to write to . DCNL indent : int DCNL Number of lines to put in the line . DCNL indent : int , optional DCNL How to indent each line in the line . DCNL indent : int , optional DCNL How to indent each line in the line . DCNL indent : int , optional DCNL How to indent each line in the line . DCNL indent : int , optional DCNL Number of lines to put in the line . &apos;
&apos;Implementation of : meth : ` ~ stem.socket.ControlSocket` if * timeout * is raised . DCNL : param conn : DB method to check . DCNL : param host : Host to connect to . DCNL : param int port : Port to connect to . DCNL : param int timeout : Number of seconds to be checked . &apos;
&apos;Remove spacing during analysis . DCNL This is a hack so we don \ &apos; t need to do this . &apos;
&apos;Return the abstract base class with an abstract base class ( subclass ) . &apos;
&apos;Make sure we don \ &apos; t do nothing . &apos;
&apos;Assert that the response body matches the response body and body . DCNL This function parses the response body and body . DCNL : param response : the response body . DCNL : type response : response object DCNL : param status _ code : the body of the response body . DCNL : type body _ code : str DCNL : param body : The body of the response body . DCNL : type body : str DCNL : param body : body of the response body . DCNL : type body _ cmp : dict ( str ) DCNL : param body _ cmp : the body of the response body . DCNL : type body _ cmp : dict ( str ) , dict ( str ) , dict , str ) &apos;
&apos;Checks if the given volume has a given volume status as a string DCNL with the given status _ id and status _ id . DCNL Arguments : DCNL client ( botocore.client.EC2 ) : Boto3 client . DCNL volume _ id ( str ) : The number of the specified volume status . DCNL status ( str ) : The status of the given volume status . DCNL Returns : DCNL True if the specified volume has a valid volume status , False otherwise . &apos;
&apos;Wrapper around ``upper _ bound ( lower _ bound , upper _ bound ) . &apos;
&apos;Create a new figure manager instance for the given figure . &apos;
&apos;Check to see if it \ &apos; s listened on . &apos;
&apos;Set up to REVIEW _ UNAVAILABLE back to NEEDS _ REVIEW . &apos;
&apos;Branch for computation DCNL Parameters DCNL expr : Expr DCNL The blaze expression . DCNL d : Expr DCNL The blaze expression . DCNL d : { \ &apos; amount \ &apos; : { \ &apos; old \ &apos; : \ &apos; amount \ &apos; , \ &apos; right \ &apos; : \ &apos; right \ &apos; } , DCNL \ &apos; amount \ &apos; : { \ &apos; old \ &apos; : \ &apos; right \ &apos; , \ &apos; old \ &apos; : \ &apos; right \ &apos; } , DCNL \ &apos; amount \ &apos; : { \ &apos; old \ &apos; : \ &apos; right \ &apos; } , DCNL \ &apos; amount \ &apos; : { \ &apos; old \ &apos; : \ &apos; right \ &apos; } , DCNL \ &apos; amount \ &apos; : { \ &apos; old \ &apos; : \ &apos; right \ &apos; } , DCNL \ &apos; amount \ &apos; : { \ &apos; old \ &apos; : \ &apos; right \ &apos; } , DCNL \ &apos; old \ &apos; : { \ &apos; old \ &apos; : \ &apos; right \ &apos; } , DCNL \
&apos;Replace the old expression with the old _ value according to the DCNL old _ value function . If full _ value is true , then replace the old DCNL expression with the old expression . &apos;
&apos;Read the global epochs object . DCNL Parameters DCNL fname : str DCNL Name of the file to read . DCNL proj : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL projs : list DCNL List of Epochs instances to read . &apos;
&apos;Create a new resource . DCNL : param id : the id or name of the resource DCNL : type id : string DCNL : param resource _ id : the name of the resource DCNL : type resource _ id : string DCNL : param resource _ id : the name of the resource DCNL : type resource _ id : string DCNL : rtype : dictionary&apos;
&apos;Returns the cycle of all nodes in a graph . DCNL Examples DCNL &gt; &gt; &gt; from networkx.algorithms import bipartite DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; R , x = ring ( &quot; x &quot; , ZZ ) DCNL &gt; &gt; &gt; cycle _ matrix ( G , x ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos;Compute the given key for a given key DCNL @ param password : The password to be converted DCNL @ type password : C { str } DCNL @ param key : The key to be converted to&apos;
&apos;A decorator for HttpResponseRedirect to http : / / github.com / andresriancho / w3af / issues / 304 DCNL : param uri : The URI to redirect to . DCNL : type uri : str DCNL : param uri : The URL to redirect to . DCNL : type redirect : bool DCNL : param redirect : If True , redirect to the request . DCNL : type request : bool DCNL : param request : HTTP request body . DCNL : type request : bool DCNL : param request : HTTP request body . DCNL : type request : str DCNL : param response : HTTP request body . DCNL : type request : str DCNL : param response : HTTP request body . DCNL : type request : str DCNL : param response : HTTP request body . DCNL : type response : str DCNL : param response : HTTP request body . DCNL : type response : str DCNL : param response : HTTP request body . DCNL : type response : str DCNL : param response : HTTP request body . DCNL : type response : str DCNL : param response : HTTP response body .
&apos;Loads the index.rst file for a particular file . DCNL Args : DCNL filename : The filename of the file DCNL location : A string representing the location of the request DCNL hsVersion : The version of the model to check for . DCNL hsVersion : The version of hypersearch version to retrieve . DCNL hsVersion : The version of hypersearch version to retrieve . DCNL Returns : DCNL A dictionary containing the keys of the request file . DCNL Raises : DCNL IOError : If the file could not be found . &apos;
&apos;Returns the full path to the Core Reporting API . &apos;
&apos;Mount a logical volume to a logical volume . DCNL : param vg _ name : Name of volume group to check . DCNL : param volume _ name : Name of the volume to check . DCNL : return : True on success , False otherwise . &apos;
&apos;Process the raw cron job ( for debugging ) DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; incron.raw _ cron DCNL salt \ &apos; * \ &apos; cron.raw _ cron user = True&apos;
&apos;Create logger for the logger . DCNL This is useful for debugging . &apos;
&apos;Transform the relation to its camelcased representation . &apos;
&apos;yields a ( timestamp , timestamp ) tuple with the given timestamp + timestamp + timestamp + timestamp + timestamp + timestamp + offset DCNL : param idx : the index in which to get the timestamp DCNL : type idx : int DCNL : param timestamps : timestamps to extract the timestamp in DCNL : return : a tuple of ( timestamp , timestamp , timestamp ) tuple&apos;
&apos;Get the request to the pull request from the given project . DCNL : param project : The project to pull from . DCNL : type project : str DCNL : param num : The number of requests to pull from . DCNL : type num : int DCNL : param auth : The auth token to use when the request was sent to . DCNL : rtype : dict DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; tomcat.get _ pull _ request DCNL salt \ &apos; * \ &apos; tomcat.get _ pull _ request project _ id &gt; &apos;
&apos;Check if text is not in a regular expression . DCNL Args : DCNL text -- The text to encode . DCNL regex -- The regular expression to check . DCNL Returns : DCNL True if the text is not a regular expression , False otherwise . &apos;
&apos; &gt; &gt; &gt; for _ in _ empty ( ) DCNL &gt; &gt; &gt; for _ in _ empty ( ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; &#93; &apos;
&apos;Deprecated . DCNL Parameters DCNL a : WRITEME DCNL b : WRITEME DCNL Returns DCNL WRITEME&apos;
&apos;Prints usage information and exits with a status code . DCNL Args : DCNL code : Status code to pass to sys.exit ( ) for usage information . &apos;
&apos;Signal that we need to connect to an SSH server . &apos;
&apos;Remove the given configuration file from the StackStorm config . DCNL : param config _ path : Full path to the configuration file . DCNL : type config _ path : ``str`` DCNL : rtype : ``str``&apos;
&apos; : param config : Configuration dictionary DCNL : type config : dict DCNL : param config _ path : path to the config file DCNL : type config _ path : str DCNL : param conf _ path : DCNL : type config _ config : DCNL : return : DCNL : rtype : &apos;
&apos;Returns a list of ( app _ name , title ) pairs . DCNL `klass` can be a model instance , a model instance , a model instance , DCNL or a model instance . DCNL : param klass : class object DCNL : param max _ depth : maximum depth of the model DCNL : param max _ depth : maximum depth of the model ( optional ) DCNL : param parent _ depth : the maximum depth of the model ( optional ) DCNL : param in _ parent : ( optional ) the depth of the model ( optional ) DCNL : param from _ parent : ( optional ) DCNL : param from _ parent : ( optional ) DCNL : param from _ parent : ( optional ) DCNL : param from _ parent : ( optional ) DCNL : param from _ parent : ( optional ) DCNL : param from _ parent : ( optional ) DCNL : param from _ parent : ( optional ) DCNL : param from _ parent : ( optional ) DCNL : param from _ parent : ( optional ) DCNL : param from _ parent :
&apos;a wrapper for the pywinupdater class . I think we don \ &apos; t make it easier to make sure that DCNL it doesn \ &apos; t have a reference to the class , but it doesn \ &apos; t work . &apos;
&apos;reorder unifrac res DCNL unifrac res is a unifrac res DCNL sample _ names is a list of sample names , where sample _ names is the list of DCNL sample names in unifrac sample . &apos;
&apos;Returns the organisation \ &apos; s display message DCNL @ todo : deprecate&apos;
&apos;Download the youtube _ id from youtube _ id . DCNL Args : DCNL youtube _ id ( str ) : The youtube id . DCNL video _ md ( str ) : The video to download . DCNL settings ( dict ) : The settings to download . &apos;
&apos;Loops through the addresses , collapsing concurrent netblocks . DCNL Example : DCNL ip1 = IPv4Network ( \ &apos; 1.1.0.0 / 24 \ &apos; ) DCNL ip2 = IPv4Network ( \ &apos; 1.1.4.0 / 24 \ &apos; ) DCNL ip2 = IPv4Network ( \ &apos; 1.1.4.0 / 24 \ &apos; ) DCNL ip3 = IPv4Network ( \ &apos; 1.1.4.0 / 24 \ &apos; ) DCNL ip4 = IPv4Network ( \ &apos; 1.1.4.0 / 24 \ &apos; ) DCNL ip2 = IPv4Network ( \ &apos; 1.1.4.0 / 24 \ &apos; ) DCNL ip3 = IPv4Network ( \ &apos; 1.1.4.0 / 24 \ &apos; ) DCNL ip4 = IPv4Network ( \ &apos; 1.1.4.0 / 24 \ &apos; ) DCNL ip2 = IPv4Network ( \ &apos; 1.1.4.0 / 24 \ &apos; ) DCNL ip3 = IPv4Network ( \ &apos; 1.1.4.0 / 24 \ &apos; ) DCNL ip4 = IPv4Network ( \ &apos; 1.1.4.0 / 24 \ &apos; ) DCNL ip2 = IPv4Network ( \ &apos; 1.1.4.0 / 24 \ &apos; ) DCNL ip3 = IPv4Network ( \ &apos; 1.1.4.0 / 24 \ &apos; ) DCNL ip4 = IPv4Network ( \
&apos;Add a bunch of handlers to a given handler . DCNL Parameters DCNL handler _ list : list DCNL List of handlers to add to the template file . DCNL verbose : bool , optional DCNL If True , the output will be added to the template file . DCNL Returns DCNL list of dict DCNL A list of all available handlers . &apos;
&apos;Count the first line of a string , returning the line . DCNL Args : DCNL text ( str ) : The text to split . DCNL Returns : DCNL string : The line of text . &apos;
&apos;set the default colormap to prism and apply to current image if any . DCNL See help ( colormaps ) for more information&apos;
&apos;Run a container from a container DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; docker.run _ container &lt; command name &gt; \ &apos; ls -l / etc \ &apos; &apos;
&apos;Sampling version of Gaussian distribution DCNL Parameters DCNL data : array _ like DCNL Input data . DCNL return _ bins : bool , optional DCNL If True , return the number of bins . DCNL Returns DCNL bins : ndarray , shape ( n _ samples , n _ features ) DCNL The data along the bin . DCNL Notes DCNL .. versionadded : : 0.12.0 DCNL References DCNL .. &#91; 1 &#93; http : / / en.wikipedia.org / wiki / Histogram _ equalization&apos;
&apos;Escape and quote a string using the given entities . DCNL : param data : DCNL : param entities : DCNL : param entities : DCNL : return : DCNL : rtype : &apos;
&apos;Default function to use key _ prefix for testing . &apos;
&apos;Get the NUMA topology from an instance . DCNL : param host : Hostname or IP address DCNL : param instance : nova.objects.instance.Instance object DCNL : param free : If True , return the topology type DCNL : param pool _ result : If True , return the topology type . DCNL : return : The topology type . &apos;
&apos; * musicpd.org , playback section : * DCNL ``stop`` DCNL Stops playing . &apos;
&apos;Send a message to the recipient \ &apos; s email address . DCNL If the message is not specified , the message will be sent to the DCNL response . &apos;
&apos;Validates that the given text is valid . DCNL For example : : DCNL &gt; &gt; &gt; validate ( \ &apos; text / html \ &apos; ) DCNL ( \ &apos; text \ &apos; , \ &apos; Content-Type \ &apos; , \ &apos; text \ &apos; ) DCNL &gt; &gt; &gt; validate ( \ &apos; Content-Type \ &apos; ) DCNL True DCNL &gt; &gt; &gt; validate ( \ &apos; Content-Type \ &apos; ) DCNL True DCNL &gt; &gt; &gt; validate ( \ &apos; text / html \ &apos; ) DCNL \ &apos; Content-Type \ &apos; DCNL &gt; &gt; &gt; validate ( \ &apos; text / html \ &apos; ) DCNL True DCNL &gt; &gt; &gt; validate ( \ &apos; text / text / html \ &apos; ) DCNL True DCNL &gt; &gt; &gt; validate ( \ &apos; text / html \ &apos; ) DCNL \ &apos; Content-Type \ &apos; DCNL &gt; &gt; &gt; validate ( \ &apos; text / html \ &apos; ) DCNL \ &apos; Content-Type \ &apos; DCNL &gt; &gt; &gt; validate ( \ &apos; text / html \ &apos; ) DCNL True DCNL &gt; &gt; &gt; validate ( \ &apos; text / html \ &apos; ) DCNL
&apos;Get a list of hosts based on a comma separated list of hosts . &apos;
&apos;Collects all bears and bear directories . DCNL : param bear _ dirs : A list of bear directories . DCNL : param bear _ dirs : A list of bear names . DCNL : param kinds : A list of bear names . DCNL : param log _ printer : The top-level of the bear classes . DCNL : param log _ printer : The log printer to use for logging . DCNL : param warn _ if _ unused _ glob : If True , all bear classes will be returned . DCNL : return : A list of all bear directories . &apos;
&apos; .. versionadded : : 2015.8.0 DCNL Return the formatted password for a password DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; redis.format _ content foo&apos;
&apos;Prepare and compute stats from values . DCNL Args : DCNL values : A dictionary mapping values to values . DCNL Returns : DCNL A dict with keys \ &apos; values \ &apos; and \ &apos; values \ &apos; . &apos;
&apos;Initialize a model object and return it . DCNL Parameters DCNL params : dict DCNL A dictionary with column names and their values . DCNL Returns DCNL res : dict DCNL A dictionary with the following keys : DCNL \ &apos; name \ &apos; : int , \ &apos; name \ &apos; : int , DCNL \ &apos; name \ &apos; : int , DCNL \ &apos; name \ &apos; : int , DCNL \ &apos; name \ &apos; : int , DCNL \ &apos; name \ &apos; : int , DCNL \ &apos; name \ &apos; : int , DCNL \ &apos; name \ &apos; : int , DCNL \ &apos; name \ &apos; : int , DCNL \ &apos; name \ &apos; : int , DCNL \ &apos; name \ &apos; : int , DCNL \ &apos; name \ &apos; : int , DCNL \ &apos; name \ &apos; : int , DCNL \ &apos; name \ &apos; : 1 , DCNL \ &apos; name \ &apos; : 1 , DCNL \ &apos; name \ &apos; : 1 , DCNL \ &apos; name \ &apos; : 1 , DCNL \ &apos; name \ &apos; : 1 , DCNL
&apos;Check if a point is at least one dimension of a point . DCNL Parameters DCNL point : 2D array DCNL Input point . DCNL axes : array , shape = ( 0 , 1 ) DCNL Array of dimensions to use . Default is 0 . DCNL Returns DCNL x : array , shape = ( 0 , 1 ) DCNL The nearest axis for the point . &apos;
&apos;Get all available regions for the CloudWatch service . DCNL : rtype : list DCNL : return : A list of : class : `boto.RegionInfo` instances&apos;
&apos;Test whether the input array contains any `np.nan` values . DCNL Parameters DCNL arr : ndarray DCNL The input array . DCNL node : str DCNL The node to check . DCNL var : bool , optional DCNL Whether to check whether the array contains any `np.inf` values . DCNL Returns DCNL bool DCNL Whether the array contains any `np.inf` values . &apos;
&apos;Returns the given HTML with all tags stripped . &apos;
&apos;Run the python tests _ _ init _ _ . &apos;
&apos;Wait until a port is reached . DCNL : param host : Host to connect to . DCNL : type host : int DCNL : param port : Port to wait for . DCNL : type port : int DCNL : param timeout : Seconds to wait for the port to wait for . DCNL : type timeout : int DCNL : return : Maximum number of seconds to wait for . &apos;
&apos;Get the parser result parser for the given init command . DCNL : rtype : : py : class : ` ~ kivy.graphics.Color` . &apos;
&apos;Update qos specs . DCNL Raises NotFound if qos specs is updated . DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; qos _ specs _ specs \ &apos; qos _ specs \ &apos; &apos;
&apos;Given a list of extensions , return a list of all the extensions , DCNL which will be appended to the end of the extensions . DCNL : param extensions : List of extensions to search for . DCNL : type extensions : list &#91; str &#93; DCNL : param exclude : The list of extensions to use . DCNL : type ignored : bool DCNL : param exclude : List of extensions to use . Defaults to False . DCNL : type ignored : bool DCNL : return : A list of all the extensions , or a list with all the DCNL extensions . DCNL : rtype : list &#91; str &#93; &apos;
&apos;ZDT2 multiobjective function . DCNL : math : `f ( \ mathbf { x } ) = \ sum _ { i = 1 } \ sum _ { i = 1 } \ sum _ { i = 1 } \ sum _ { i = 1 } \ sum _ { i = 1 } \ sum _ { i = 1 } \ sum _ { i = 1 } \ sum _ { i = 1 } } \ sum _ { i = 1 } \ sum _ { i = 1 } \ sum _ { i = 1 } } \ sum _ { i = 1 } \ sum _ { 1 } ( x _ i ) } \ sum _ { 1 } ( x _ i ) } \ sqrt { 2 } } DCNL Parameters DCNL ind : array _ like DCNL List of vectors to compute DCNL n _ labels : int , optional DCNL The number of classes to compute DCNL Returns DCNL x : array _ like , ( n _ samples , n _ features ) DCNL A list of ( x _
&apos;Find and return an array of axes . DCNL Parameters DCNL offset : int DCNL Number of axes to return . DCNL fig : float , optional DCNL Figure to add to the axes . DCNL ax : Matplotlib AxesSubplot instance , optional DCNL If not None , the axes will be added to the axes . DCNL Returns DCNL axes : bool DCNL The first element of the axes . DCNL Examples DCNL &gt; &gt; &gt; import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; from nipype.pipeline.engine.utils import offset _ xlim DCNL &gt; &gt; &gt; import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; fig = plt.figure ( ) DCNL &gt; &gt; &gt; print ( x ) DCNL &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
&apos;Compute connectivity matrix for a source matrix . DCNL Parameters DCNL src : array _ like DCNL The source space matrix . DCNL n _ times : int DCNL Number of iterations to use . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL connectivity : sparse COO matrix DCNL The connectivity matrix describing the source space . &apos;
&apos;Get all rules for a given instance . &apos;
&apos;Return a font object ( font size , font size ) . DCNL : param section : The section to be queried DCNL : param option : font option ( optional ) DCNL : param font _ size : Index of font size ( default font size ) DCNL : param font _ size : Index of font size ( defaults to 0 ) &apos;
&apos;Try to save a store _ fs by pootle _ path for a non existent language&apos;
&apos;Check if the boolean value is boolean . &apos;
&apos;Return a list of all Remote methods that are subclasses of a given resolver , DCNL or a list of names . DCNL Args : DCNL resolver ( str ) : The resolver to retrieve . DCNL ns _ prefix ( str ) : Name of the namespace to get . DCNL Returns : DCNL List of tuples of the form ( app _ prefix , namespace _ prefix ) . &apos;
&apos;Remove the files files , recursively . &apos;
&apos;Print a new model and update the keys and update them . DCNL Args : DCNL obj ( object ) : The object to print . DCNL modules ( dict ) : The name of the model . DCNL delete ( bool ) : If ``True`` , the message will be removed from the DCNL database . &apos;
&apos;Parameters DCNL input : array , shape ( n _ samples , n _ features ) DCNL Input array . DCNL labels : tuple of ints , shape ( n _ samples , ) DCNL The shape of the input array . DCNL axis : int , optional DCNL The first dimension of the input array . DCNL out _ dtype : bool , optional DCNL Whether to use the default ordering of the input . DCNL default _ position : bool , optional DCNL If True , then the default values will be returned . DCNL Returns DCNL out : array , shape ( n _ samples , n _ features ) DCNL The array of shape of the input array . &apos;
&apos;Returns the hash of a given file . DCNL For example : DCNL &gt; &gt; &gt; get _ file _ hash ( &quot; Miaow-01-Tempered-song.mp3 &quot; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ file _ hash ( &quot; Miaow-01-Tempered-song.mp3 &quot; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ file _ hash ( &quot; Miaow-01-Tempered-song.mp3 &quot; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ file _ hash ( &quot; Miaow-01-Tempered-song.mp3 &quot; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ file _ hash ( &quot; Miaow-01-Tempered-song.mp3 &quot; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ file _ hash ( &quot; Miaow-01-Tempered-song.mp3 &quot; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ file _ hash ( &quot; Miaow-01-Tempered-song.mp3 &quot; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _
&apos;Destroy the backup or raise if it does not exist . &apos;
&apos;Determine the path to resource . DCNL Args : DCNL service : A str , the service to use . DCNL resource : A str , the resource name . DCNL Returns : DCNL An object . &apos;
&apos; \ n&apos;
&apos;Returns a list of query parameters for the given user . DCNL If the user is not specified , it is assumed to be used in the DCNL database . DCNL Arguments : DCNL user ( User ) : The user to query . DCNL added _ size ( str ) : The maximum number of documents to retrieve . DCNL page _ size ( str ) : The maximum number of documents in the user . DCNL prefix ( str ) : The maximum number of documents to be queried . DCNL is _ uri ( bool ) : If True , then the user will be queried . DCNL is _ uri ( bool , optional ) : If True , then the user will be displayed in the DCNL flat list . &apos;
&apos;Try to find the first element of a given line . DCNL @ param line : The line to search for . DCNL @ type line : C { str } DCNL @ param pattern : The regular expression to search for . DCNL @ type pattern : str DCNL @ param pattern : The regular expression to search for . DCNL @ type pattern : C { str } DCNL @ param full : If True , don \ &apos; t want to search the command . DCNL @ type full : bool DCNL @ return : A boolean indicating whether or not the package is on . DCNL @ rtype : C { bool } &apos;
&apos;Draw a DataFrame . DCNL Q1 , Q2 , Q3 are the data for the specified axis . DCNL Q1 , Q2 , Q3 are the top of the selected axes . DCNL Q1 , Q2 , Q3 are the top of the selected axes . DCNL Q1 , Q2 , Q3 are the top of the selected axes . DCNL Q1 , Q2 , Q3 are the top of the selected axes . DCNL Q1 , Q2 , Q3 are the axis for the specified axis . DCNL Q1 , Q2 , Q3 are the top of the selected axes . DCNL cmap : string , optional DCNL figsize : tuple of ints , optional DCNL figsize : tuple , optional DCNL figsize : tuple , optional DCNL figsize : tuple , optional DCNL figsize : tuple , optional DCNL figsize : tuple , optional DCNL figsize : tuple , optional DCNL figsize : tuple , optional DCNL figsize : tuple , optional DCNL figsize : tuple , optional DCNL figsize : tuple , optional DCNL figsize : tuple , optional DCNL figsize : tuple , optional DCNL figsize : tuple , optional ( default = None ) DCNL
&apos;Favorite \ &apos; s create _ favorite method . &apos;
&apos;Decorates a function to make sure that the user is logged in . &apos;
&apos;Renders the product of the authenticated product . DCNL This function will return a list of the following keys : DCNL * The order of the product will be logged in , and the second element DCNL will be logged in . DCNL * The order of the returned product will be logged in . DCNL * The order of the returned product will be logged in . DCNL * The order of the returned product will be logged in . DCNL * The returned product will be logged in , and the second element is DCNL returned by the : func : ` ~ google.cloud.iterator.Iterator`. It is intended to DCNL be used to make sure that the user is logged in . DCNL : param request : The request to be rendered DCNL : type request : django.http.HttpRequest DCNL : param order _ id : The order of the request to be rendered DCNL : type order _ id : str DCNL : param response _ format : The response to be logged in . DCNL : type response _ format : str DCNL : param response _ format : The response to be logged in .
&apos;Return the graph G for a graph G . DCNL Parameters DCNL G : graph DCNL A NetworkX graph DCNL line : string DCNL A networkx graph DCNL Returns DCNL G : graph DCNL A NetworkX graph DCNL Examples DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; G = nx.Graph ( ) DCNL &gt; &gt; &gt; G = nx.Graph ( ) DCNL &gt; &gt; &gt; G = nx.read _ sparse6 ( G , \ &apos; test.s6 \ &apos; ) DCNL &gt; &gt; &gt; G = nx.read _ sparse6 ( G , \ &apos; test.s6 \ &apos; ) DCNL &gt; &gt; &gt; G = nx.nx _ agraph.graphviz _ graph ( G ) DCNL &gt; &gt; &gt; G = nx.nx _ agraph.graphviz _ graph ( G ) DCNL &gt; &gt; &gt; G = nx.read _ sparse6 ( G , \ &apos; test.s6 \ &apos; ) DCNL &gt; &gt; &gt; G = nx.read _ sparse6 ( G , \ &apos; test.s6 \ &apos; ) DCNL &gt; &gt; &gt; G = nx.read _ sparse6 ( G , \ &apos; test.s6 \ &apos; ) DCNL &gt; &gt; &gt;
&apos;Parse a string into a DOM . &apos;
&apos;Return the number of block blocks for a given file , or None if no DCNL block is found . &apos;
&apos; &gt; &gt; &gt; print ( &#91; 1 , 2 , 3 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos;Use this method to destroy the cluster if it does not exist . &apos;
&apos;Show the output of the specified volume . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; glusterfs.get _ output _ volume DCNL salt \ &apos; * \ &apos; glusterfs.get _ output _ volume &lt; volume &gt; &apos;
&apos;Test the last float size if there is a fixed float on error . DCNL When there \ &apos; s no exception when we don \ &apos; t crash if there \ &apos; s no exception DCNL when we don \ &apos; t crash . &apos;
&apos;Create a sequence of successive chunks from sequence . &apos;
&apos;Insert a simple entry into the list of warnings filters ( at the front ) . &apos;
&apos;Check that module name in lib modules are not found in Python DCNL T102 : Cannot import virtualenv with tempest / etc / tempest / etc / tempest / etc . DCNL T108&apos;
&apos;Updates the named service DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; data.clear&apos;
&apos;Upgrade the virtual machine \ &apos; s kernel distribution to install . DCNL : param bytes distribution : The distribution name to install . DCNL : return : A boolean representing whether or not the distribution is an upgrade . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; chocolatey.task _ upgrade _ kernel &lt; distribution &gt; &apos;
&apos;Send a delay for sending responses . DCNL Args : DCNL delay ( int ) : Number of seconds after which the delay should be sent DCNL delay ( int ) : Number of seconds after which to send the delay . &apos;
&apos;Takes a unit and * unit * and * unit * and * unit _ * * . DCNL * units _ is * is a string representing a unit \ &apos; s unit . &apos;
&apos;Check if a given requirement is available . DCNL : param str requirement : the distribution to check DCNL : return : True if the requirement is available , False otherwise . &apos;
&apos;Calculates the representative of p . DCNL p _ i is the number of v in the matrix . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.domains import ZZ DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; x = MatrixSymbol ( \ &apos; x \ &apos; , \ &apos; D \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; D \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; D \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; D \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; D \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; D \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; D \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; D \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; D \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; D \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; D \ &apos; ) DCNL
&apos;Launch a switch to a router based on localhost . DCNL For example : DCNL &gt; &gt; &gt; try : DCNL &gt; &gt; &gt; try : 80 DCNL &gt; &gt; &gt; launch _ flow ( \ &apos; localhost \ &apos; , network = \ &apos; 127.0.0.1 \ &apos; ) DCNL \ &apos; 127.0.0.1 \ &apos; DCNL &gt; &gt; &gt; launch _ flow ( \ &apos; 127.0.0.1 \ &apos; , rate = \ &apos; 127.0.0.1 \ &apos; ) DCNL \ &apos; 127.0.0.1 \ &apos; DCNL &gt; &gt; &gt; launch _ flow ( \ &apos; 127.0.0.1 \ &apos; , rate = \ &apos; 127.0.0.1 \ &apos; ) DCNL \ &apos; 127.0.0.1 \ &apos; DCNL &gt; &gt; &gt; launch _ flow ( \ &apos; 127.0.0.1 \ &apos; , rate = \ &apos; 127.0.0.1 \ &apos; ) DCNL \ &apos; 127.0.0.1 \ &apos; DCNL &gt; &gt; &gt; launch _ flow ( \ &apos; 127.0.0.1 \ &apos; , rate = \ &apos; 127.0.0.1 \ &apos; ) DCNL \ &apos; 127.0.0.1 \ &apos; DCNL &gt; &gt; &gt; launch _ flow ( \ &apos; 127.0.0.1 \ &apos; , rate = \ &apos; 127.0.0.1 \ &apos; ) DCNL \ &apos; 127.0.0.1 \ &apos; DCNL &gt; &gt; &gt; try
&apos;getparser ( ) - &gt; parser , unmarshaller DCNL Create an instance of the fastest available parser , and attach it DCNL to an unmarshalling object . Return parser objects . &apos;
&apos;Get the outstanding API . DCNL This function is needed to make it easier to deal with lots of places DCNL where the curve is needed . DCNL See http : / / arxiv.org / abs / 1609.05158 for details . &apos;
&apos;Checks if a request is protected . &apos;
&apos;Parses an HTTP request and returns a tuple of ( headers , body ) tuples . DCNL The return value is a string containing the body of the HTTP DCNL header and the body of the HTTP response . DCNL : param full _ load : The full file-like object to parse . DCNL : param http _ methods : a list of HTTP headers to parse . DCNL : return : A tuple containing the parsed data . &apos;
&apos;Convert a long integer value into a byte string . DCNL The first argument is a : class : ` ~ kivy.graphics.Color` . &apos;
&apos;Run a command in a shell . DCNL : param str cmd : The command to run DCNL : param cwd : The path to the command to run DCNL : param str cwd : The path to the command to run DCNL : param str env : The command to run DCNL : param str runas : The user to run the command DCNL : param str runas : The user to run the command DCNL : param bool force _ log : If True , don \ &apos; t run the command DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; svn.run / path / to / repo&apos;
&apos;Return the content of the resource . DCNL : param resource : the resource of the resource DCNL : type resource : string DCNL : param package : the resource of the resource DCNL : type package : str DCNL : return : the newly created resource DCNL : rtype : bool&apos;
&apos;Return shortcut suitable for use in a menu tag . &apos;
&apos;Ensures that the user has a certain action that has been enabled . &apos;
&apos;Returns the current time zone for the current thread . &apos;
&apos;Get current event . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; hue.lights DCNL salt \ &apos; * \ &apos; service.get _ lights &apos;
&apos;yaml : jclouds DCNL Use the Jenkins : jenkins-wiki : `Parameterized Trigger Plugin DCNL &lt; Parameterized + Trigger + Plugin &gt; ` . DCNL : arg str name : The name of the server . DCNL : arg str name : The name of the server to use . Default is \ &apos; default \ &apos; DCNL : arg str timeout : The name of the server to use . Default is \ &apos; default \ &apos; DCNL Example : DCNL .. literalinclude : : / .. / .. / tests / builders / fixtures / fingerprint001.yaml DCNL : language : yaml&apos;
&apos;Compile a file , returning the contents of the file . DCNL Parameters DCNL filepath : str DCNL The path to the file to compile . DCNL library : str , optional DCNL The path to which to compile the file . DCNL expand : bool , optional DCNL Whether to operate on the current directory . DCNL extra _ args : bool , optional DCNL Whether to operate on the same directory . DCNL extra _ args : bool , optional DCNL Whether to operate on the same directory . &apos;
&apos; &gt; &gt; &gt; test _ try _ finally _ regression ( ) DCNL Traceback ( most recent call last ) : DCNL UnboundLocalError : local variable \ &apos; a \ &apos; referenced before assignment&apos;
&apos;Send a function that takes a user ID based on the user \ &apos; s ID DCNL subject . DCNL Args : DCNL user ( User ) : The user to send . DCNL invoice _ id ( str ) : The ID of the current user . DCNL order _ url ( str ) : The order ID of the user . DCNL order _ url ( str ) : The order ID of the user . DCNL Returns : DCNL unicode&apos;
&apos;Convert an image to a clipping value DCNL Parameters DCNL image : ndarray DCNL Input image . DCNL shape : tuple DCNL The shape of the image to be converted . DCNL Returns DCNL WRITEME&apos;
&apos;Create a threshold histogram over the given image . DCNL Parameters DCNL image : array _ like DCNL Input image . DCNL nbins : int , optional DCNL Number of bins to use . Default is 0 . DCNL bias : float , optional DCNL Maximum number of bins to use . Default is 0 . DCNL max _ iter : int , optional DCNL Maximum number of iterations to use . Default is 0 . DCNL max _ iter : int , optional DCNL Maximum number of iterations to use . Default is 0 . DCNL Returns DCNL threshold : ndarray DCNL Filtered array . Has the same shape as `input` . DCNL Examples DCNL &gt; &gt; &gt; from scipy import ndimage , misc DCNL &gt; &gt; &gt; from scipy import ndimage , misc DCNL &gt; &gt; &gt; from scipy import ndimage , misc DCNL &gt; &gt; &gt; from scipy import threshold DCNL &gt; &gt; &gt; G = plt.figure ( ) DCNL &gt; &gt; &gt; thresh = threshold _ minimum ( image ) DCNL &gt; &gt; &gt; threshold = threshold ( ) DCNL &gt; &gt; &gt; threshold = threshold ( ) DCNL &gt; &gt; &gt; threshold = threshold (
&apos;Returns a string representing the translation of either the singular or DCNL plural , if necessary . DCNL Arguments : DCNL count : the number of singular values . DCNL singular : the number of singular values . DCNL plural : A string which will be converted to a number . DCNL Returns : DCNL A string representing the number of singular values . &apos;
&apos;Renders the response for a GET request . DCNL This is a simple way to make sure that the page is logged in . DCNL For example : DCNL get _ response _ query ( request ) DCNL : param request : DCNL : param response _ format : DCNL : type response _ format : DCNL : param response _ format : DCNL : type response _ format : DCNL : return : &apos;
&apos;Get a list of ssh _ ips used by master _ service _ pair . DCNL : param ssh _ bin : Path to ``ssh`` binary DCNL : param master _ address : Address of the master file to write to DCNL : param ec2 _ key _ pair _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file _ file&apos;
&apos;Compute a linear operator such that \ &apos; A \ &apos; and \ &apos; A \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , DCNL \ &apos; A \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \ &apos; r \ &apos; , \
&apos;Internal method to create user credentials for this user . &apos;
&apos;Pad a sequence of sequences . DCNL Parameters DCNL sequences : sequence DCNL The sequences to pad . DCNL length : int DCNL Number of sequences to pad . DCNL dtype : str , optional DCNL Length to pad the sequence to . DCNL value : int , optional DCNL How many times to pad the resulting sequence . DCNL value : int , optional DCNL How many times to pad the resulting sequence . DCNL value : int , optional DCNL How many times to pad the resulting sequence . DCNL value : str , optional DCNL The value to pad the resulting string to . If None , the DCNL whole array will be returned . DCNL Returns DCNL out : ndarray DCNL The padded sequences . DCNL Examples DCNL &gt; &gt; &gt; from scipy import pad DCNL &gt; &gt; &gt; sentences = &#91; &#91; \ &apos; A \ &apos; , \ &apos; Bob \ &apos; , \ &apos; Bob \ &apos; , \ &apos; Bob \ &apos; &#93; , DCNL ... \ &apos; A \ &apos; , \ &apos; Bob \ &apos; , \ &apos; Bob \ &apos; , \ &apos; Bob \ &apos; , \ &apos;
&apos;Removes a list of tokens from a list of tokens . DCNL For example : DCNL &gt; &gt; &gt; s = &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; DCNL &gt; &gt; &gt;
&apos;Construct the user from the given numpy array . DCNL Parameters DCNL arr : ndarray DCNL The array of dates to convert . DCNL dense _ dates : pd.DatetimeIndex DCNL The dates to convert . DCNL sparse _ dates : int DCNL The number of dates to check . DCNL sparse _ dates : int DCNL The number of dates to check . DCNL asset _ idx : int DCNL The index of the asset . DCNL value : int DCNL The value of the asset . DCNL value : int DCNL The value of the asset . DCNL value : int DCNL The value of the asset . DCNL value : int DCNL The value of the asset . DCNL value : int DCNL The value of the asset . DCNL value : int DCNL The value of the asset . DCNL value : int DCNL The value of the asset . &apos;
&apos;Create a item from an item DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pcs.item _ create item = \ &apos; item _ type \ &apos; &#91; \ &apos; item _ type \ &apos; : \ &apos; item \ &apos; , \ &apos; item _ type \ &apos; : \ &apos; bar \ &apos; , \ &apos; item _ type \ &apos; : \ &apos; galera \ &apos; } DCNL \ &apos; item _ type \ &apos; : { \ &apos; item \ &apos; : \ &apos; key1 \ &apos; , \ &apos; key2 \ &apos; : \ &apos; bar \ &apos; } } DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pcs.item _ create item = \ &apos; item _ type \ &apos; &#91; \ &apos; item _ type \ &apos; : \ &apos; item \ &apos; , \ &apos; item _ type \ &apos; : \ &apos; bar \ &apos; , \ &apos; item _ type \ &apos; : \ &apos; bar \ &apos; , \ &apos; item _ type \ &apos;
&apos;Perform a random circuit from a circuit . DCNL Parameters DCNL circuit : Gate tuple DCNL The circuit to reduce . DCNL gate _ ids : list DCNL The list of ints to be transformed . DCNL seed : int , optional DCNL The seed for the seed . DCNL Returns DCNL A tuple of shape ( n _ ids , n _ ids ) , where LHS is the circuit . DCNL Examples DCNL &gt; &gt; &gt; from sympy import random _ reduce DCNL &gt; &gt; &gt; from sympy.physics.quantum.gate import X , Y , Z DCNL &gt; &gt; &gt; from sympy.physics.quantum.gate import X , Y , Z DCNL &gt; &gt; &gt; from sympy.physics.quantum.gate import X , Y , Z DCNL &gt; &gt; &gt; X = Normal ( \ &apos; X \ &apos; , 0 , 0 ) DCNL &gt; &gt; &gt; X = random _ seed ( &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 &#93; ) DCNL &gt; &gt; &gt; X = random _ seed ( &#91; 0 , 1 , 2
&apos;Ensures that the user has access to the specified user DCNL This is used to access the facebook context , as well as DCNL the user \ &apos; s access to the facebook context , as well as the user DCNL user doesn \ &apos; t have access to the user \ &apos; s own context . &apos;
&apos;Get the path separator for the file . &apos;
&apos;Write a cron job to the specified user DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; cron.write _ cron _ file root / tmp / foo&apos;
&apos;Load an image from a PIL image , return a tuple ( image _ path , image _ path ) . &apos;
&apos;Checks whether translation files provide a translation for some technical DCNL message ID to store partial date formats . If it doesn \ &apos; t contain one , the DCNL formats provided in the settings will be used . &apos;
&apos;Coerce \ &apos; value \ &apos; to an JSON-compatible representation . &apos;
&apos;Generate a certificate . DCNL name DCNL The name of the certificate DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; icinga2.generate _ cert domain.tld&apos;
&apos;Verify that the path is a mount point of the mount point . DCNL : param root : The path to the mount point to be checked . DCNL : param drive : drive name to be checked . DCNL : returns : True if the mount point is mounted , False otherwise . &apos;
&apos;Display a single sysctl parameter for this minion DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; sysctl.show&apos;
&apos;Perform a greedy search per second . DCNL Parameters DCNL state : scalar ( int ) DCNL Number of columns . DCNL Returns DCNL environ : list of float , shape ( n _ samples , 3 ) DCNL The split line . DCNL Raises DCNL NetworkXError DCNL If the limit cannot be found or not . DCNL References DCNL .. &#91; 1 &#93; https : / / github.com / tomsercu / lstm &gt; ` _ . DCNL Parameters DCNL state : array-like , shape ( n _ samples , 3 ) DCNL The proposed value . DCNL Returns DCNL environ : list of float , shape ( n _ samples , ) DCNL The split line . &apos;
&apos;Add the appropriate settings for a Bokeh server . DCNL This is useful for debugging . DCNL Args : DCNL apps ( dict ) : List of apps to be used . DCNL feed ( str ) : The location of the bundled version . DCNL * * kwargs : dict , optional DCNL The keyword arguments to be used for the UI . DCNL Returns : DCNL dict : A dictionary with the following parameters : DCNL - app1 DCNL - vendor&apos;
&apos;Returns True if the supplied function takes a coroutine function . &apos;
&apos;Decompress compressed data . DCNL : param fileobj : a file-like object or file-like object to open DCNL : param path : the file to open DCNL : returns : The decompressed data . &apos;
&apos;Generate a list of the children of the stack frame . &apos;
&apos;Returns true if path is in the OS , without importing anything . &apos;
&apos;Return a list of key-value pairs from a file DCNL Args : DCNL path ( str ) : Path to a python list DCNL Returns : DCNL list of str DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; config.load _ partitions&apos;
&apos;Return the signature of \ &apos; signature \ &apos; and \ &apos; signature \ &apos; . DCNL The function can be used to call signature _ name and method _ name ( ) . DCNL If the signature is not a method name , it will raise a DCNL TypeError . DCNL If * obj * is not a string , it will raise a TypeError . DCNL If * obj * is not a valid name , it will raise a TypeError . DCNL If * obj * is not specified , it will raise a TypeError . DCNL If * obj * is not a valid name , it will raise a TypeError . DCNL If * obj * is not specified , it will raise a TypeError . DCNL If * obj * is not specified , it will raise a TypeError . DCNL If * obj * is not specified , it will raise a TypeError . DCNL If * obj * is not specified , it will raise a TypeError . DCNL If * obj * is not specified , it will raise a TypeError . DCNL If * obj * is not specified ,
&apos;Set the setting setting for a given server . DCNL : param settings settings : The settings to set . DCNL : type settings : str DCNL : param server : The SMTP server name . DCNL : type server : str DCNL : param server : The SMTP server name . DCNL : type server : str DCNL : return : The set of the server setting . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; netscaler.server _ server _ setting \ &apos; serverName \ &apos; &apos;
&apos;Returns the IP version of a network ( IPv4 or IPv6 ) . DCNL Raises AddrFormatError if invalid network . &apos;
&apos;Add total number of active requests to the total number . DCNL : param request : Request object . DCNL : param list _ all _ total : total number of active requests to be updated . DCNL : param add _ active _ count : total number of active items to update . &apos;
&apos;Like : meth : `str.encode`. DCNL Arguments : DCNL value ( str ) : The value to be encoded . DCNL o _ encoding ( str ) : The encoding of the value . DCNL errors ( str , optional ) : The encoding of the value . DCNL Returns : DCNL An exception instance . &apos;
&apos;Creates a new secret key for the given project _ directory . DCNL Args : DCNL project _ directory : The directory where the secret key should be converted . DCNL Returns : DCNL The secret key for the given project _ directory . &apos;
&apos;Declare a module-level attribute as deprecated . DCNL @ type version : C { str } DCNL @ param version : Version that the attribute is being deprecated . DCNL @ type message : C { str } DCNL @ param message : Deprecation message DCNL @ type message : C { str } DCNL @ param moduleName : Fully-qualified name of the deprecated attribute DCNL @ type moduleName : C { str } DCNL @ param name : Deprecation message DCNL @ type name : C { str } DCNL @ param name : Deprecation message DCNL @ type name : C { str } DCNL @ param name : Deprecation message DCNL @ type name : C { str } DCNL @ param name : Deprecation message DCNL @ type name : C { str } DCNL @ param name : Deprecation message DCNL @ type name : C { str } DCNL @ param name : Deprecation message DCNL @ type name : C { str } DCNL @ param name : Deprecation message DCNL @ type name : C { str } DCNL @ return : C { False } DCNL @ rtype : C {
&apos;Returns a lambda function representing the predicate \ &apos; s tree , DCNL where each element is a list of tokens . Each element is a DCNL list of tuples where each element is the tree itself . DCNL If the pattern is not a tree , it will return the first element DCNL if the first element is the tree itself . DCNL : param list _ s : A lambda function representing a predicate . DCNL : param tokens : a sequence of tokens . DCNL : type tokens : list ( str ) DCNL : param tokens : A list of tokens . DCNL : type tokens : list DCNL : param tokens : A list of tokens . DCNL : rtype : list &#91; str &#93; &apos;
&apos;Retrieve the type type for a given type . DCNL Arguments : DCNL key -- The type of the type to search for . DCNL flags : A flag indicating whether or not the type should be found . DCNL Returns : DCNL A list of ( name , version ) pairs . &apos;
&apos;Helper function to check for a proportion of a proportion of a DCNL proportion of a given proportion . DCNL Parameters DCNL proportion : array _ like DCNL List of ( nobs , nobs ) or ( nobs , nobs ) or ( nobs , nobs ) . DCNL step _ length : int , optional DCNL The length of the proportion of the given proportion . DCNL method : float , optional DCNL The method of the test for which the step is used . DCNL method : float , optional DCNL The method used to calculate the number of samples . DCNL method : float , optional DCNL The method of the test for which the sample is used . DCNL References DCNL .. &#91; 1 &#93; http : / / en.wikipedia.org / wiki / Binomial _ estimate DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . ISBN : 978-0716724117&apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 4098&apos;
&apos;Returns True if the request is logged in , and if it \ &apos; s available . &apos;
&apos;Return True if the given exception is a valid checker . &apos;
&apos;Get the ctypes pointer as a ctypes object and return it . &apos;
&apos;Test the Wink platform . &apos;
&apos;Generate new URL&apos;
&apos;Assert that the array elements in the list are equal . DCNL This function assumes that the elements are equal to the list of DCNL elements in the plot . DCNL Parameters DCNL xlist : array _ like DCNL The list of buffers to compare . DCNL x2 : array _ like DCNL The list of nodes to be checked . DCNL err _ msg : str , optional DCNL The error message to be checked . DCNL verbose : bool , optional ( default = False ) DCNL If True , the output will be printed to the output . &apos;
&apos;http : / / msdn.microsoft.com / en-us / library / system.numerics.biginteger ( VS.100 ) .aspx DCNL This should be tested minimally here , and hit comprehensively from DCNL Python 2 . This should be tested minimally here as a BigInteger . &apos;
&apos;Creates the output filename . DCNL Args : DCNL dataset _ dir : The directory of the dataset . DCNL split _ name : The name of the temporary file . DCNL Returns : DCNL The output filename . &apos;
&apos;Display a password based on the user \ &apos; s password . DCNL : param url : DCNL : param email : DCNL : param methods : DCNL : param methods : DCNL : return : &apos;
&apos; .. warning : : DCNL This function is * * deprecated * * and will be removed in version 0.1.0 ! DCNL Use the : meth : `.Authomatic.credentials` method instead . &apos;
&apos;A helper function to get the correct answer for a given expression . DCNL Args : DCNL leaves ( str ) : The expression to use . DCNL expr ( str ) : The expression to use . DCNL Returns : DCNL A string representation of the given expression . &apos;
&apos; &gt; &gt; &gt; test _ escape _ decode ( \ &apos; &amp; nbsp ; \ &apos; ) DCNL \ &apos; &amp; nbsp ; \ &apos; DCNL &gt; &gt; &gt; test _ escape _ decode ( \ &apos; abc \ &apos; ) DCNL \ &apos; &amp; nbsp ; \ &apos; DCNL &gt; &gt; &gt; test _ escape _ decode ( \ &apos; abc \ &apos; ) DCNL \ &apos; &amp; nbsp ; \ &apos; DCNL &gt; &gt; &gt; test _ escape _ decode ( \ &apos; &amp; nbsp ; \ &apos; ) DCNL \ &apos; &amp; nbsp ; \ &apos; DCNL &gt; &gt; &gt; test _ escape _ decode ( \ &apos; &amp; nbsp ; \ &apos; ) DCNL \ &apos; &amp; nbsp ; \ &apos; DCNL &gt; &gt; &gt; test _ escape _ decode ( \ &apos; &amp; nbsp ; \ &apos; ) DCNL \ &apos; &amp; nbsp ; \ &apos; DCNL &gt; &gt; &gt; test _ escape _ decode ( \ &apos; &amp; nbsp ; \ &apos; ) DCNL \ &apos; &amp; nbsp ; \ &apos; DCNL &gt; &gt; &gt; test _ escape _ decode ( \ &apos; &amp; nbsp ; \ &apos; ) DCNL \ &apos; &amp;
&apos;Logs out of the line of a file . DCNL Args : DCNL filename : The name of the line to check . DCNL clean _ lines : A CleansedLines instance containing the file . DCNL linenum : The number of the line to check . DCNL function _ state : A function to call the function . DCNL error : The function to call with the function . &apos;
&apos;Convert a path to its canonical , case-normalized , absolute version . &apos;
&apos;Run all the munin plugins DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; nagios.run check _ all&apos;
&apos;Handle the next test view of the given view . DCNL This is a convenience function . For example : : DCNL @ app.route ( \ &apos; / foo / bar \ &apos; ) DCNL def my _ view ( ) : DCNL return next ( ) DCNL def my _ view ( ) : DCNL return next = next ( ) DCNL def my _ view ( ) : DCNL return next = next ( ) DCNL def my _ view ( ) : DCNL return next = next ( ) DCNL def my _ view ( ) : DCNL return next = next ( ) DCNL def my _ view ( ) : DCNL return next = next ( ) DCNL def my _ view ( ) : DCNL return next = next ( ) DCNL def my _ view ( ) : DCNL return next = next ( ) DCNL def my _ view ( ) : DCNL return next = next ( ) DCNL def my _ view ( ) : DCNL return next = next ( ) DCNL def my _ view ( ) : DCNL return next = next ( ) DCNL def next
&apos;Given a M / M / M / M / M / M / M / M / M / M / M / M / M / M / M / M / M / M / M / M / M / M / M / M / M / M / M ) , DCNL where x is an integer ( M , M ) or ( M , M ) or ( M , M ) or ( M , M ) . &apos;
&apos;The \ &apos; parent \ &apos; argument is a SqlAlchemy DCNL ( A ) is a member , if it is a member , return a ( True , True ) . DCNL The argument is a list of ( id , id ) pairs . &apos;
&apos;A decorator that wraps a function that wraps a function . &apos;
&apos;Return the value for a quoted string if necessary . DCNL : param value : The value to quote . DCNL : return : The quoted value . &apos;
&apos;Unpack a byte string to bytes . DCNL Parameters DCNL data : str DCNL The data to decode . DCNL word _ size : int DCNL Length of the word . DCNL Returns DCNL out : str DCNL The data to decode . DCNL Example : DCNL &gt; &gt; &gt; unpack _ many ( \ &apos; hello \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; unpack _ many ( \ &apos; hello \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; unpack _ many ( \ &apos; hello \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; unpack _ many ( \ &apos; hello \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; unpack _ many ( \ &apos; hello \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; unpack _ many ( \ &apos; hello \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; unpack _ many ( \ &apos; hello \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; unpack _ many ( \ &apos; hello \ &apos; )
&apos;Show all of the L1 norm of a sparse matrix . DCNL Parameters DCNL Y : ndarray , shape ( n _ samples , n _ features ) DCNL An array of shape ( n _ samples , n _ features ) . DCNL alpha : array-like , shape ( n _ samples , n _ features ) DCNL The number of observations in each row . DCNL shape : { array-like , sparse matrix } , shape ( n _ samples , n _ features ) DCNL The shape of the input . DCNL shape : { array-like , sparse matrix } , shape ( n _ samples , n _ features ) DCNL The shape of the array . DCNL is _ hat : bool , optional DCNL Whether to normalize the variance . DCNL is _ hat : bool , optional DCNL Whether to normalize the variance . DCNL Returns DCNL y : array _ like , shape ( n _ samples , n _ features ) DCNL An array of shape ( n _ samples , n _ features ) . DCNL References DCNL .. &#91; 1 &#93; http : / / en.wikipedia.org / wiki /
&apos;Distance metric : DCNL http : / / en.wikipedia.org / wiki / Binomial _ distance DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . DCNL Examples DCNL &gt; &gt; &gt; from sympy.crypto.crypto import interval _ distance DCNL &gt; &gt; &gt; interval _ distance ( 10 ) DCNL 1 DCNL &gt; &gt; &gt; interval _ distance ( 10 ) DCNL 1 DCNL &gt; &gt; &gt; interval _ distance ( 10 ) DCNL 1 DCNL &gt; &gt; &gt; interval _ distance ( 10 ) DCNL 1 DCNL &gt; &gt; &gt; interval _ distance ( 10 ) DCNL 1 DCNL &gt; &gt; &gt; interval _ distance ( 10 ) DCNL 1 DCNL &gt; &gt; &gt; interval _ distance ( 10 ) DCNL 1 DCNL &gt; &gt; &gt; interval _ distance ( 10 ) DCNL 1 DCNL &gt; &gt; &gt; interval _ distance ( 10 ) DCNL 1 DCNL &gt; &gt; &gt; interval _ distance ( 10 ) DCNL 1 DCNL &gt; &gt; &gt; interval _ distance ( 10 ) DCNL 1 DCNL &gt; &gt; &gt; interval _ distance ( 10 ) DCNL 1 DCNL &gt; &gt;
&apos;Given a Value for `obj` , a field name , returns a Value . &apos;
&apos;Return a form class for a given version . DCNL @ param version : the version string . DCNL @ type version : L { twisted.python.versions.Version } DCNL @ param replacement : the replacement for which to be used . DCNL @ type replacement : L { twisted.python.versions.Version } DCNL @ param replacement : the name of the callable that will be used . DCNL @ rtype : L { str } &apos;
&apos;Constructs and returns the database entrypoint flow . DCNL : param db _ api : The configuration to get the flow for . DCNL : type db _ api : : class : ` ~ google.cloud.logging.client.Client` DCNL : param image _ service _ api : The API instance of the API . DCNL : type image _ service _ api : : class : ` ~ google.cloud.iterator.Iterator` DCNL : param image _ service _ api : The API instance of the API . DCNL : type image _ service _ api : : class : ` ~ google.cloud.logging.client.Client` DCNL : param image _ service _ api : The HipChat API key . DCNL : type expected _ list : list of dictionaries . DCNL : param api _ stats : The scheduler structure . DCNL : type expected _ types : list of dictionaries . DCNL : param api _ stats : A dictionary of values to create . DCNL : type volume _ list : dict DCNL : param scheduler _ factory : A dictionary of dictionaries . DCNL : type volume _ pb : : class : ` ~ subliminal.language.type _ list` . DCNL : param
&apos;Decorator to ensure that the execution of the decorated function is loaded DCNL and if it is not available . DCNL This decorator is used to ensure that the execution of the execution DCNL is available , and if it is not met , then the execution DCNL will be used to ensure that the execution is loaded . &apos;
&apos;mocks all the tests in a test . DCNL This is useful when you want to test all tests in a theano function DCNL of tests . DCNL @ param test : the test suite to test . DCNL @ type functions : L { dict } DCNL @ param functions : A list of functions that should be copied . DCNL @ type funcs : L { dict } DCNL @ return : A list of all the tests in the test suite . &apos;
&apos;Close the MySQL connection&apos;
&apos; &gt; &gt; &gt; deleted ( \ &apos; a \ &apos; ) DCNL Traceback ( most recent call last ) : DCNL UnboundLocalError : local variable \ &apos; a \ &apos; referenced before assignment&apos;
&apos;Runs the given command in the following format : DCNL - command line number DCNL - command line number DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command line number DCNL - executes the following : DCNL - command : DCNL - command : DCNL - command : DCNL - command :
&apos;To make sure we can parse out how many files in the file DCNL has been processed . We don \ &apos; t know how to save the file DCNL so we don \ &apos; t know how to handle them . We don \ &apos; t know how to DCNL make sure that we don \ &apos; t know how to handle them . &apos;
&apos;Multiprocess-safe benchmark function . DCNL Arguments : DCNL path ( str ) : Path to the container . DCNL Returns : DCNL List of tuples representing the first element in the given DCNL dictionary . &apos;
&apos;Get the mac address for given IP address . DCNL Args : DCNL ip : IP address , e.g. \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \ &apos; mac \ &apos; , \
&apos;Function that returns a list of all available profiles . DCNL This function uses the system \ &apos; s home directory . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; test.proc&apos;
&apos;A decorator that checks if the user has authorization to the HTTP DCNL `login ( ) ` decorator . For example : DCNL @ app.route ( \ &apos; / errors \ &apos; ) DCNL def my _ view ( self ) : DCNL return \ &apos; Dashboard \ &apos; DCNL The return value is : const : `None` if the user is not in the DCNL `login _ required` decorator . For example : : DCNL @ app.route ( \ &apos; / foo \ &apos; ) DCNL def my _ view ( self ) : DCNL return \ &apos; Dashboard \ &apos; DCNL The return value is : const : `None` if the user is not in the DCNL `login _ required` decorator . For example : : DCNL @ app.route ( \ &apos; / foo \ &apos; ) DCNL def my _ view ( self ) : DCNL return \ &apos; Dashboard \ &apos; DCNL The return value is : const : `None` if the user is not in the DCNL `login _ required` decorator . For example : DCNL @ app.route ( \ &apos; / \ &apos; ) DCNL def my _ view ( self ) : DCNL
&apos;tests that we get a visibility filter for a previous editor DCNL If no category is found , we don \ &apos; t want to find a category . &apos;
&apos;Build the documentation for zipline \ &apos; s documentation . DCNL Parameters DCNL branch : str DCNL Path to the current working directory . &apos;
&apos; : param subsystem _ type : The subsystem _ type or subclass of : class : `pants.subsystem.subsystem.Subsystem` DCNL to create . DCNL : param options : A list of : class : `pants.subsystem.subsystem.subsystem.Subsystem` DCNL to create . DCNL : return : An instance of : class : `pants.subsystem.subsystem.subsystem.Subsystem` DCNL to create . &apos;
&apos;Check surfaces in a surface . DCNL Parameters DCNL surfs : list of dict DCNL The surface to check . DCNL Returns DCNL bem : dict DCNL The surface to be surface . &apos;
&apos;Check whether the named PID file is connected to the current process . &apos;
&apos;Lookup the default syslog configuration for the specified config . DCNL If the config is not specified , the default config will be returned . &apos;
&apos;Modify the history history DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; net.trim _ history s&apos;
&apos;Create a comment for the given thread . DCNL Args : DCNL request : The django request object . DCNL comment _ data : The id of the comment to create . DCNL Returns : DCNL The updated comment . &apos;
&apos; &lt; user &gt; -- Checks a user from &lt; user &gt; in &lt; user &gt; . &apos;
&apos;Implement the ``EMSA-PKCS1-V1 _ 5-ENCODE`` function , as defined by DCNL PKCS # 1 v2.1 ( RFC3447 , 9.2 ) . DCNL ``EMSA-PKCS1-V1 _ 5-ENCODE`` actually accepts the message ``M`` as input , and DCNL returns the hashed string . DCNL : Parameters : DCNL mhash : hash object DCNL The hash object that holds the digest of the hash . DCNL emBits : int DCNL Maximum number of iterations to use . DCNL randFunc : callable DCNL A function that accepts two parameters : func : `rsa.sign`. DCNL sLen : int DCNL Length of the hash . DCNL : Return : DCNL An ``emLen`` byte long string that encodes the hash . &apos;
&apos;Compute the L1 norm of a dataset . DCNL Parameters DCNL data : array _ like , shape ( n _ samples , n _ features ) DCNL The data to apply . DCNL info : array _ like , shape ( n _ samples , n _ features ) DCNL The number of samples to compute . DCNL tmin : float , optional DCNL The number of samples to compute . DCNL data : array-like , shape ( n _ samples , n _ features ) DCNL The number of samples to compute . DCNL data : array-like , shape ( n _ samples , n _ features ) DCNL The number of iterations . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL out : ndarray , shape ( n _ samples , n _ features ) DCNL Array of shape ( n _ samples , n _ features ) . &apos;
&apos;Compute the optimal histogram of a distribution . DCNL Parameters DCNL a : array _ like DCNL Input array . DCNL b : array _ like DCNL Input array . DCNL axis : int , optional DCNL Axis along which to compute the estimate . Default is 0 . DCNL nan _ policy : array _ like , optional DCNL Axis along which to compute the estimate . Default is False . DCNL Returns DCNL out : array , shape ( n _ float , n _ times ) DCNL The array `a` . DCNL Notes DCNL This function is jit-complied by Numba . &apos;
&apos;Creates the default GCS name for the current request . DCNL Args : DCNL deadline : Optional deadline in seconds for the operation ; the default DCNL is a system-specific deadline ( typically 5 seconds ) . DCNL Returns : DCNL The default blob name . &apos;
&apos;Decorate a function to be used in a ViewSet that should be used . &apos;
&apos;Load a conf.yaml file or YAML file . DCNL Args : DCNL app _ info : A string or file-like object containing a YAML file . DCNL Returns : DCNL A QueueInfoExternal object . &apos;
&apos;Helper function to generate tokens from a sequence of tokens . DCNL Args : DCNL lowercase : if True , only splits tokens from . DCNL Returns : DCNL A string of the tokens . &apos;
&apos;Copies document to a document _ pb.Field protocol buffer . DCNL Args : DCNL document : The document to copy . DCNL pb : The protocol buffer to copy . DCNL Returns : DCNL The entity _ pb.Field subclass . &apos;
&apos;Returns a 2-tuple of ( N , N ) -tuple with the maximum distance between 0 and 1 . &apos;
&apos;Extract the limit from request or raise if it doesn \ &apos; t exist . DCNL : param request : `wsgi.Request` possibly containing \ &apos; limit \ &apos; or \ &apos; limit \ &apos; . DCNL : return : The limit of the limit in the request . &apos;
&apos;Ensure that a snapshot is valid . DCNL name DCNL The name of the snapshot to check . DCNL snapshot _ name DCNL The name of the snapshot to check . DCNL defaults DCNL A string containing the user \ &apos; s name . DCNL .. versionadded : : 2016.11.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; zfs.validate _ snapshots &lt; name &gt; &apos;
&apos;Return the position of a font record in the data . DCNL Parameters DCNL data : dict DCNL The data to read from . DCNL extent : string DCNL The offset of the file . DCNL offset : int , optional DCNL The offset of the file to read in the file . DCNL Returns DCNL record _ data : ndarray DCNL The index of the file . DCNL Raises DCNL ValueError DCNL Raised when the data is not in the format . &apos;
&apos;Returns the version of an svn version as an svn version . DCNL Args : DCNL xml _ version ( str ) : The version of the xml version . DCNL Returns : DCNL str : The version of the svn version . &apos;
&apos;The restful handler for requests on a request . DCNL Verifies that it \ &apos; s not a valid JSON property on a request . DCNL Returns a dict with the following keys : DCNL \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , DCNL \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , DCNL \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success \ &apos; : boolean , \ &apos; success
&apos;Check a list of command-line options that can be passed to DCNL : py : class : `EMRJobRunner`&apos;
&apos;Virtual field for start date for start of the project DCNL Arguments : DCNL row ( datetime ) : the Row&apos;
&apos;Start the specified process . DCNL : param pid : process id DCNL : type pid : int DCNL : rtype : int&apos;
&apos;initialise module&apos;
&apos;Return the average of the samples based on a list of states DCNL Parameters DCNL q _ vals : list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance , or a list of : class : `Layer` instance . DCNL Returns DCNL
&apos;Render a project \ &apos; s content DCNL : param request : DCNL : param project _ id : DCNL : param response _ format : DCNL : param response _ format : DCNL : return : &apos;
&apos;Returns the rank of a collection . DCNL Args : DCNL collection _ id : str . The collection id . &apos;
&apos;Register the new registration based on the application . &apos;
&apos;Return the absolute version of a path&apos;
&apos;Get the subfolder name of the directory for the path . DCNL @ type path : str DCNL @ param path : The name of the directory to get the directory for . DCNL : type model : bool DCNL : return : The location of the directory . DCNL @ rtype : C { str } &apos;
&apos;Extract IPv4 address within 6to4 address . Passed address must be DCNL a 6to4 address . Passed address must be a 6to4 address . &apos;
&apos;Returns the mean of all the elements in the list . Missing items are DCNL removed in the order . Missing items are removed from the top . &apos;
&apos;Recursively copy a directory tree using a given directory . DCNL This function creates a new copy of the given directory and DCNL creates a new copy of the given directory . DCNL If ignore _ wrapper is True , then the given directory will be copied to DCNL the given directory . &apos;
&apos;Test reconstruction where the zeros of all zeros are equal . &apos;
&apos;Redirects to the URL that ends with a slash . DCNL : param environ : the WSGI environment to append to . DCNL : param code : the HTTP request code . &apos;
&apos;Example : DCNL http : / / www.djangoproject.com / en / latest / 2007 / en / latest / 2007 / oct / 26 / security-fix / &gt; . &apos;
&apos;Serialize a Python object into a YAML stream . DCNL If stream is None , return the produced string instead . &apos;
&apos;Return a dictionary mapping model instances to dict DCNL Parameters DCNL array : array DCNL Returns DCNL list of dicts DCNL Examples DCNL &gt; &gt; &gt; group _ list _ of _ dict ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; &apos;
&apos;log ( s ) is the last line of the file . &apos;
&apos;Bind the resources into a blaze expression . DCNL Parameters DCNL expr : Expr DCNL The expression to bind to . DCNL resources : dict DCNL The resources to bind to . DCNL Examples DCNL &gt; &gt; &gt; from blaze import bind _ expression _ to _ resources DCNL &gt; &gt; &gt; expr = bind _ expression _ to _ resources ( expr , resources ) DCNL &gt; &gt; &gt; bind _ expression _ to _ resources ( expr , resources ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; bind _ expression _ to _ resources ( expr , resources ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; bind _ expression _ to _ resources ( expr , resources ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; bind _ expression _ to _ resources ( expr , resources ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; bind _ expression _ to _ resources ( expr , resources ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; bind _ expression _ to _ resources ( expr , resources ) DCNL ( \ &apos; x \ &apos; ,
&apos;Display a list of changesets in the Markdown file . &apos;
&apos;vertical Sobel on a horizontal edge should be zero . &apos;
&apos;Return the _ _ str _ _ and _ _ ctype _ _ and _ _ ctype _ _ . &apos;
&apos;Take a sequence of integers and return a new array . DCNL Parameters DCNL ptr : str DCNL The shape of the array . DCNL shape : list DCNL The shape of the array to be returned . DCNL dtype : str DCNL The dtype to attach to . DCNL Returns DCNL obj : ndarray DCNL The shape of the array . &apos;
&apos; * musicpd.org , mounts and mounts section : * DCNL ``clear`` DCNL Clears the mounts file . &apos;
&apos; .. todo : : DCNL WRITEME&apos;
&apos;Compute the 1-norm of a random variable . DCNL Parameters DCNL epochs : instance of Epochs DCNL The Epochs instance to be computed . DCNL inverse _ operator : int DCNL Number of bins . DCNL bins : int , optional DCNL Number of bins to use . Default is None . DCNL border _ mode : int , optional DCNL The number of bins to use . Default is None . DCNL border _ mode : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL state : ndarray , shape ( n _ samples , n _ features ) DCNL Number of bins . &apos;
&apos;Use this function to get the entire metadata for a given stream . DCNL If read _ metadata is True , then the entire metadata is taken from DCNL the following : DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( ) DCNL - read _ metadata ( )
&apos;Compute a quadratic gradient DCNL ( Kondrak 2002 : 54 ) &apos;
&apos;Returns an instance of a security group . DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -f security _ info opennebula&apos;
&apos;Create a list of ( x , y ) tuples with shape ( n , p ) . DCNL The first element is a list of ( x , y ) tuples , where each element is DCNL a list of ( x , y ) where each element is a list of ( x , y ) tuple . DCNL The first element is a list of ( x , y ) where each element is a list of DCNL ( x , y ) where each element is a list of ( x , y ) where x is the number of DCNL elements in the list . If it is zero , then the first element is DCNL returned . DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; x = np.array ( &#91; &#91; 1 , 2 , 3 &#93; , &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 &#93; , DCNL &#91;
&apos;send and receive a sequence of bits . DCNL s : string to connect to DCNL p : int DCNL Number of bits to run DCNL n : int DCNL Number of bits to run DCNL n : int DCNL Number of bits to run . &apos;
&apos;A decorator that requires a test module . &apos;
&apos;This function is the same as : DCNL http : / / www.statoek.wiso.uni-goettingen.de / veranstaltungen / models / models / DCNL http : / / en.wikipedia.org / wiki / Algorithms _ for _ models DCNL http : / / www.statoek.wiso.uni-goettingen.de / veranstaltungen / models / models / models / DCNL http : / / en.wikipedia.org / wiki / Algorithms _ for _ models DCNL http : / / en.wikipedia.org / wiki / Algorithms _ for _ models DCNL http : / / www.statoek.wiso.uni-goettingen.de / veranstaltungen / models / models / models / DCNL http : / / en.wikipedia.org / wiki / Algorithms _ for _ models DCNL http : / / en.wikipedia.org / wiki / Algorithms _ for _ models DCNL http : / / www.statoek.wiso.uni-goettingen.de / veranstaltungen / models / models / models / DCNL http : / / en.wikipedia.org / wiki /
&apos;Recursively sort all the models in the given app list . DCNL This is useful for generating docstrings . DCNL : param app _ list : The list of models to sort . DCNL : type app _ list : list DCNL : return : A list of all models that match the given app _ list . DCNL : rtype : list &#91; str &#93; &apos;
&apos;Parse a signature . DCNL : param key : The name of the service . DCNL : type key : str DCNL : param date _ stamp : The name of the service . DCNL : type counter _ stamp : str DCNL : param service _ pb : The service record . DCNL : type adapter _ pb : L { str } DCNL : param service : The service record . DCNL : rtype : str DCNL : returns : The signature of the service . DCNL : rtype : dict&apos;
&apos;Validates the parameters of the provided parameters in the provided DCNL parameters . DCNL Args : DCNL parameters : A list of parameters to be checked . DCNL secret _ parameters : A list of parameters to set . DCNL Returns : DCNL A tuple of ( key , value ) pairs . &apos;
&apos;Tests that a L { libvlc _ release _ release } class can be created with DCNL L { DjangoReferenceCollection } DCNL @ since : https : / / github.com / astropy / astropy / issues / 326&apos;
&apos;Validates that \ &apos; value \ &apos; is an int or an integer . &apos;
&apos;Converts a CSS file to a Bootstrap CSS file DCNL This is useful in conjunction with `js _ links _ css ( ) ` to render the CSS to the CSS template DCNL Parameters DCNL html _ path _ css : str DCNL The CSS file to be displayed DCNL Returns DCNL html : str DCNL The CSS CSS of the css to be displayed DCNL Example : DCNL &gt; &gt; &gt; with inline _ inline _ css ( \ &apos; js / css / js \ &apos; ) DCNL &gt; &gt; &gt; with inline _ css _ css ( \ &apos; js / js \ &apos; ) DCNL &gt; &gt; &gt; with inline _ css _ css ( \ &apos; js / js \ &apos; ) DCNL &gt; &gt; &gt; with inline _ css _ css ( \ &apos; js / js \ &apos; ) DCNL &gt; &gt; &gt; with inline _ css _ css ( \ &apos; js / js \ &apos; ) DCNL &gt; &gt; &gt; with inline _ css _ css ( \ &apos; js / js \ &apos; ) DCNL &gt; &gt; &gt; with inline _ css _ css ( \ &apos; js /
&apos;Returns the album distance calculated by plugins . &apos;
&apos;Provides the user \ &apos; s uid for the given pid . DCNL : param int pid : PID of the process . DCNL : return : The user \ &apos; s uid . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; virt.start &lt; pid &gt; &apos;
&apos;Test whether the xml can be used as an xml string . DCNL This is meant to be used in PyShell.t _ to _ space ( ) . &apos;
&apos;Return a path to a PostgreSQL database . DCNL Example : : DCNL from fabtools import require DCNL require.postgres.get _ database _ password ( \ &apos; dbuser \ &apos; ) &apos;
&apos;Retrieve token for the given user . DCNL : param userid : Id of the user . DCNL : param secret : A string representing the time stamp . DCNL : return : A : class : `datetime.datetime` instance . &apos;
&apos;Test EDF with various data . DCNL Parameters DCNL data : ndarray DCNL The data to be saved . DCNL Returns DCNL data : ndarray DCNL The data array . &apos;
&apos;Sample from the global data file . DCNL This function is meant to be used in the cloud module to get the DCNL data from the file . DCNL Args : DCNL name ( str ) : The name of the file to read . DCNL Returns : DCNL None&apos;
&apos;Parse the \ &apos; 229 \ &apos; response for a EPSV request . DCNL Raises error _ proto if it \ &apos; s not a EPSV request . &apos;
&apos;Set a key / value pair . DCNL CLI Examples : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; memcached.set &lt; key &gt; &lt; value &gt; &lt; value &gt; &apos;
&apos;A simple view to check that the user is logged in . DCNL If the user is logged in , it will be used instead of a DCNL simple view . &apos;
&apos;Get a list of the lists . &apos;
&apos;Write out and return lines containing items and top items . &apos;
&apos;Fetches a tag item for the MusicBrainz album . Return a TrackInfo DCNL object , or None if no search is found . DCNL : param item : a search item DCNL : param search _ title : The search title for the item DCNL : param search _ title : The title to search for . Default is None . &apos;
&apos;Add the given settings to an existing directory for interacting with the DCNL site . DCNL Parameters DCNL settings : dict DCNL The name of the settings file to use . DCNL context _ settings : dict DCNL The name of the user to use for populating the new settings file . DCNL Returns DCNL dict : dict DCNL A dictionary with the settings for the new settings file . &apos;
&apos;Display the chamber dialog . &apos;
&apos;Return a SQLAlchemy engine for use . &apos;
&apos;Takes a dictionary like ` { 1 : 2 , 3 : 4 } ` and returns ` { 1 : 2 , 3 : 4 } ` . &apos;
&apos;Squared hinge loss . DCNL Parameters DCNL y _ true : array-like DCNL The ground truth value . DCNL y _ pred : array _ like DCNL The ground truth value . DCNL Returns DCNL loss : float DCNL The squared log loss . &apos;
&apos;Given a field number , returns a tuple of ( key , value ) tuples . DCNL The value is a tuple of ( field _ number , value ) tuples . The DCNL value is a tuple of ( field _ number , value ) tuples . The DCNL value is a tuple of ( field _ number , value ) tuples . The DCNL value is a tuple of ( field _ name , value ) tuples . The DCNL value is a tuple of ( field _ name , value ) tuples . The DCNL value is a tuple of ( field _ name , value ) tuples . The DCNL value is a tuple of ( field _ name , value ) tuples . The DCNL value is a tuple of ( field _ name , value ) tuples . The DCNL value is a tuple of ( field _ name , value ) tuples . The DCNL value is a tuple of ( field _ name , value ) tuples . The DCNL value is a tuple of ( field _ name , value ) tuples . The DCNL value is the value of the
&apos;Load network interfaces from host reference . &apos;
&apos;Get the path directory path . &apos;
&apos;data - &gt; unmarshalled data , method unmarshalled data DCNL to an unmarshalled data ( or a file-like object ) &apos;
&apos;Return the name of the string . &apos;
&apos;Converts an IRI to a string . DCNL Args : DCNL iri : a string to encode . DCNL Returns : DCNL A string containing the encoded string . &apos;
&apos;pack ( bits ) * ( int ) - &gt; int DCNL Convert a list of bits into a packed bytes DCNL &gt; &gt; &gt; pack _ bitstring ( 3 ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; pack _ bitstring ( 16 ) ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; pack _ bitstring ( 3 ) DCNL \ &apos; 0b1010 \ &apos; DCNL &gt; &gt; &gt; pack _ bitstring ( 3 ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; pack _ bitstring ( 16 ) ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; pack _ bitstring ( 3 ) DCNL \ &apos; 0xd0 \ &apos; &apos;
&apos;A generator that iterates over all the directories in the tree DCNL top-down . DCNL This is the same as for : func : `top` instead . DCNL Arguments : DCNL top ( bool ) : If True , don \ &apos; t traverse all subdirectories in the tree DCNL top-down . DCNL tree ( bool , optional ) : If True , don \ &apos; t overwrite any paths . DCNL followlinks : bool , optional DCNL Follow symbolic links DCNL followlinks : bool , optional DCNL Follow symbolic links DCNL Returns : DCNL None&apos;
&apos;Return the module of the repository \ &apos; s versions of introspection . &apos;
&apos;Args : DCNL codes ( list ) : List of strings to generate . &apos;
&apos;set a timer function . DCNL This is a wrapper around : py : func : ` ~ ckan.plugins.interfaces.IAuthenticator` objects to use the DCNL current time . DCNL Parameters DCNL * args : int DCNL The arguments to pass to the update . DCNL * * kwargs : keywords DCNL The keyword arguments passed to the update . DCNL Returns DCNL msg : callable DCNL The new statement . &apos;
&apos;Raise TypeError if x is a str or str if x is an iterable . &apos;
&apos;Test to make sure the object \ &apos; s cookiecutter ( ) throws an exception . &apos;
&apos;Run the background command DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; svn.run _ background / path / to / repo&apos;
&apos;Create a decorator that adds an action to the decorated action . DCNL : param action _ name : the name of the action to be used . DCNL : type action _ name : str DCNL : return : the decorated action . DCNL : rtype : : class : ` ~ google.cloud.logging.client.Client` DCNL : param action _ name : the name of the action to instantiate . DCNL : type action _ name : str DCNL : return : the decorated action . DCNL : rtype : : class : `.action _ class` . &apos;
&apos;Create a schema for a Postgres database . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; postgres.schema _ create dbname schemaname DCNL dbname DCNL Database name to create DCNL name DCNL Name of the database to create DCNL name DCNL Name of the database to create DCNL user DCNL Database port if different from config or default DCNL db _ user DCNL Database host if different from config or default DCNL db _ port DCNL Database port if different from config or default DCNL db _ port DCNL Database port if different from config or default DCNL db _ port DCNL Database port if different from config or default DCNL db _ port DCNL Database port if different from config or default DCNL db _ port DCNL Database port if different from config or default DCNL db _ port DCNL Database port if different from config or default DCNL db _ port DCNL Database port if different from config or default DCNL db _ port DCNL Database port if different from config or default DCNL db _ port DCNL Database port if different from config or default DCNL db
&apos;Check if a string is a valid format identifier . DCNL : param str entry : the entry to check DCNL : return : True if the entry is a valid , False otherwise&apos;
&apos;Generate a random string of cryptographically-strong random string . &apos;
&apos;Joins a list into a list if it is not a string . DCNL Returns a copy of the string if it is not a string . If the DCNL delimiter is not present , it will be used instead . DCNL Example : DCNL &gt; &gt; &gt; join _ list ( \ &apos; A \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; join _ list ( \ &apos; A \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; join _ list ( \ &apos; A \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; join _ list ( \ &apos; A \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; join _ list ( \ &apos; A \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; join _ list ( \ &apos; A \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; join _ list ( \ &apos; A \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; join _ list ( \ &apos; A \ &apos; ) DCNL \
&apos;Return a new curve object . DCNL Returns DCNL obj : instance DCNL The OpenSSL version object . DCNL Raises DCNL ImportError DCNL If the curve could not be loaded . &apos;
&apos;Upload a file-like object to a file . DCNL Usage : : DCNL import boto3 DCNL s3 = boto3.resource ( \ &apos; s3 \ &apos; ) DCNL s3.meta.client.upload _ fileobj ( \ &apos; mybucket \ &apos; , \ &apos; wb \ &apos; ) DCNL &gt; &gt; &gt; s3 = boto3.resource ( \ &apos; s3 \ &apos; ) DCNL s3.meta.client.upload _ fileobj ( \ &apos; mybucket \ &apos; , \ &apos; wb \ &apos; ) DCNL &gt; &gt; &gt; s3 = boto3.resource ( \ &apos; s3 \ &apos; ) DCNL s3.meta.client.upload _ fileobj ( \ &apos; mybucket \ &apos; , \ &apos; wb \ &apos; ) DCNL &gt; &gt; &gt; s3 = boto3.resource ( \ &apos; s3 \ &apos; ) DCNL s3.meta.client.upload _ fileobj ( \ &apos; mybucket \ &apos; , \ &apos; wb \ &apos; ) DCNL &gt; &gt; &gt; s3 = boto3.resource ( \ &apos; s3 \ &apos; ) DCNL s3.meta.client.upload _ fileobj ( \ &apos; mybucket \ &apos; , \ &apos; wb \ &apos; ) DCNL &gt; &gt; &gt; s3 = boto3.resource ( \ &apos; s3 \ &apos; ) DCNL s3.meta.client.upload _ fileobj ( \ &apos;
&apos;Reset the development server \ &apos; s Home Assistant server . &apos;
&apos;Escape an XML string to the given value of an XML string . DCNL @ type value : C { str } DCNL @ param value : The value to escape . DCNL @ type value : C { str } DCNL @ return : The escaped XML string . DCNL @ rtype : C { str } &apos;
&apos;Create an Appveyor create an application . DCNL : param global _ conf : DCNL : param script : DCNL : param script : DCNL : param path : DCNL : param include _ os _ environ : DCNL : param query _ string : DCNL : param query _ string : DCNL : return : &apos;
&apos;Return the owner of the file DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; pkg.owner / usr / bin / apachectl DCNL salt
&apos;yaml : lockters DCNL Requires the Jenkins : jenkins-wiki : `Exclusion Plugin &lt; Exclusion-Plugin &gt; ` . DCNL Example : DCNL .. literalinclude : : / .. / .. / tests / wrappers / fixtures / monitor-folders-minimal.yaml DCNL : language : yaml DCNL Full Example : DCNL .. literalinclude : : / .. / .. / tests / wrappers / fixtures / monitor-folders-minimal.yaml DCNL : language : yaml DCNL Full Example : DCNL .. literalinclude : : / .. / .. / tests / wrappers / fixtures / monitor-folders-full.yaml DCNL : language : yaml&apos;
&apos;Given an XML string , returns the unicode object that can be converted DCNL into an unicode string . DCNL @ param match : The string to convert . DCNL @ type match : L { str } DCNL @ param exceptions : Objects to convert to unicode . DCNL @ type encoding : str DCNL @ param encoding : AMF encoding . DCNL @ type encoding _ exceptions : str DCNL @ param encoding _ exceptions : ( Optional ) The encoding errors . DCNL @ type result _ exceptions : str DCNL @ return : The unicode object , or None if unknown . DCNL @ rtype : str&apos;
&apos;timeit ( e , x ) - &gt; ( x , y ) - &gt; ( x , y ) &apos;
&apos;Login callback which invokes the &quot; foo &quot; method on the perspective . &apos;
&apos;Return a range of date _ date based on the start date and end _ date . DCNL If start _ date is not specified , start _ date and end _ date will be ignored . DCNL If start _ date is not specified , the start date is assumed to be the start date DCNL of the start date . DCNL If num _ date is not specified , the start date is assumed to be the start date DCNL of the start date . DCNL If num _ date is None , the start date will be appended to the end date . DCNL If num _ date is None , the start date will be appended to the end date . DCNL If num _ date is None , the start date will be appended to the end date . DCNL If num _ date is None , the start date will be appended to the end date . DCNL If num _ date is None , the start date will be appended to the end date . DCNL If num _ date is None , the start date will be appended to the end date
&apos;Sets the default encoding of the underlying Python object . &apos;
&apos;Create a merge queue and create a new one . DCNL This function is meant to be used in two ways : DCNL https : / / github.com / andresriancho / w3af / issues / 3294 DCNL : param cluster : The cluster to create . DCNL : type cluster : str DCNL : param session : The cluster session . DCNL : type session : ``dict`` DCNL : return : The updated queue . DCNL : rtype : list&apos;
&apos;Find the first element of an iterator ( PRIVATE ) . DCNL Return a tuple of ( path , line ) tuples , where each element is a DCNL tuple of ( filename , value ) tuples . DCNL Returns a tuple of ( path , line ) tuples . &apos;
&apos;Returns whether the given prefix is a root file . &apos;
&apos;Find all tables in the given expression using the given DCNL * exclude _ columns * . DCNL If include _ columns is True , then only the \ &apos; include _ columns \ &apos; parameter will be DCNL used . &apos;
&apos;additive _ expression : additive _ expression&apos;
&apos; : param f : File-like object to be tested . DCNL : param n : Number of bytes to skip . &apos;
&apos;Given a path or a path to an object , find the path to the object . &apos;
&apos;Parameters DCNL symbol : str DCNL Name of the comparison DCNL start _ date : pd.Timestamp DCNL The start date . DCNL end _ date : pd.Timestamp DCNL The end date for which to compute the benchmark DCNL end _ date : pd.Timestamp DCNL The end date for which to calculate the output date . DCNL Returns DCNL output : pd.DataFrame DCNL The estimate of the output of the outputs . DCNL Examples DCNL &gt; &gt; &gt; from Bio import Entrez DCNL &gt; &gt; &gt; x = { \ &apos; x \ &apos; : 5 , \ &apos; z \ &apos; : 5 , \ &apos; z \ &apos; : 5 } DCNL &gt; &gt; &gt; get _ candlestick ( \ &apos; a \ &apos; , end _ date = \ &apos; \ &apos; ) DCNL &gt; &gt; &gt; get _ candlestick ( \ &apos; a \ &apos; , end _ date = \ &apos; red \ &apos; , start _ date = True ) DCNL &gt; &gt; &gt; get _ candlestick _ data ( \ &apos; red \ &apos; , end _ date = \ &apos; red \ &apos; , start _ date = True ) DCNL &gt; &gt;
&apos;Create an array of values in the returned array . DCNL Takes an optional list of filters and outputs the results in DCNL the returned array . By default , the values are the same as DCNL the same arguments as : func : ` ~ matplotlib.pyplot.plot` . &apos;
&apos;Set virtual machine driver name DCNL : param hypervisor _ version : DCNL : param is _ block _ device : DCNL : return : &apos;
&apos;Exercise exception handling from https : / / github.com / astropy / astropy / issues / 322&apos;
&apos;Sets the values in a dictionary . DCNL : param dict dictionary : DCNL : param keys : DCNL : type keys : DCNL : param value : DCNL : type value : DCNL : param value : DCNL : type value : DCNL : return : DCNL : rtype : &apos;
&apos;Create a new instance type . DCNL : param values : list of values to create . DCNL : type values : dict DCNL : return : A list of instance types . DCNL : rtype : dict DCNL : raises : NotFound if instance type does not exist . &apos;
&apos;Test EDF with various sampling types . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 3713&apos;
&apos;Helper function to execute the command \ &apos; s command and return the DCNL output of the command . &apos;
&apos;Remove search options . DCNL : param context : Rendering context DCNL : type context : jinja2.runtime.Context DCNL : param search _ options : search options DCNL : type search _ options : dict DCNL : param allowed _ search _ options : options to include in the config file DCNL : type allowed _ search _ options : dict DCNL : return : Success flag DCNL : rtype : dict&apos;
&apos;Set the date for the specified date . See man chage . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; timezone.set _ date \ &apos; 03-28-13 \ &apos; &apos;
&apos;Return the current platform vendor . DCNL .. versionadded : : 2016.11.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; system.get _ os _ vendor DCNL salt \ &apos; * \ &apos; system.get _ os _ db&apos;
&apos;Left-aligns the value in a field of a given width . DCNL Argument : field size . &apos;
&apos;Find and return an image label for the named image DCNL Parameters DCNL name : str DCNL Name of the image DCNL default : bool , optional DCNL If True , return the label for the named image DCNL Returns DCNL label : int DCNL Name of the image for the named image DCNL Examples DCNL &gt; &gt; &gt; from skimage.data import image DCNL &gt; &gt; &gt; G = nx.Graph ( ) DCNL &gt; &gt; &gt; get _ image _ label ( \ &apos; red \ &apos; , default = True ) DCNL \ &apos; red \ &apos; DCNL &gt; &gt; &gt; get _ image _ label ( \ &apos; red \ &apos; , default = True ) DCNL \ &apos; red \ &apos; DCNL &gt; &gt; &gt; get _ image _ label ( \ &apos; red \ &apos; , default = True ) DCNL \ &apos; red \ &apos; DCNL &gt; &gt; &gt; get _ image _ label ( \ &apos; red \ &apos; , default = True ) DCNL \ &apos; red \ &apos; &apos;
&apos;Convert path relative to local file path . &apos;
&apos;Given an attribute list , return a single element list . DCNL @ param environment : The environment list . DCNL @ type env : L { dict } DCNL @ param node _ list : A list of node names . DCNL @ type node _ list : list DCNL @ param node _ list : A list of node names . DCNL @ type node _ list : L { str } DCNL @ return : The first element list . DCNL @ rtype : L { str } &apos;
&apos;Creates a Subsystem for test . DCNL : param subsystem _ type : The subclass of : class : `pants.subsystem.subsystem.Subsystem` DCNL to create . DCNL : param scope : The scope of the subsystem to use . DCNL : param options : Keyword arguments to be passed to the subsystem . DCNL : returns : An instance of : class : `pants.subsystem.subsystem.Subsystem` DCNL to create . DCNL : returns : An instance of : class : `pants.subsystem.subsystem.Subsystem` DCNL to create . DCNL : returns : An instance of : class : `pants.subsystem.subsystem.Subsystem` DCNL to create . &apos;
&apos;count ( s , sub &#91; , start &#91; , end &#93; &#93; ) - &gt; string DCNL Return the number of characters in s . &apos;
&apos;Moves an item into a string . DCNL The result is a string with the following keys : DCNL - \ &apos; success \ &apos; , \ &apos; a \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; , \ &apos; success \ &apos; &#93; &apos;
&apos;Set the specified set of ipset sets . DCNL name DCNL The name of the set to set . DCNL set _ type DCNL The type of set to set . DCNL family DCNL The type of set to set . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; ipset.set _ present vm _ family = ipv6&apos;
&apos;Remove all contributors for the given Keyword arguments . DCNL Requires the : ref : `reviews / contributors for more information . DCNL : type auth : django.http.HttpRequest DCNL : param Node : Node to be checked for . DCNL : type node : str DCNL : param auth _ ids : List of contributors to be removed . DCNL : type auth _ ids : Iterable &#91; str &#93; DCNL : param auth _ ids : List of contributors to be removed . DCNL : type auth _ ids : list DCNL : return : List of contributors to be removed . &apos;
&apos;Find a controller that is defined in the controller DCNL : param controller : the system context DCNL : type controller : module DCNL : return : a controller class DCNL : rtype : controller DCNL : returns : a controller object&apos;
&apos;Verify that a port exists . DCNL Returns True on success , False otherwise . DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; openvswitch.port _ create _ ip br0 8080&apos;
&apos;Returns a redis connection pool for redis DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; redis.start&apos;
&apos;Logs calls to the caller \ &apos; s methods . DCNL Args : DCNL fname : the name of the file to log . DCNL params _ class : the name of the function to call . DCNL prefix : The prefix to use when we \ &apos; re on the test . &apos;
&apos; &lt; part &gt; -- give a part \ &apos; s part . Returns an item . DCNL : param text : Text to select from . DCNL : type text : str&apos;
&apos;Create the config file for the specified watch file . DCNL Args : DCNL watch : A str , the name of the server . DCNL start _ cmd : A string , the name of the server to use . DCNL stop _ cmd : A string , the name of the server to use . DCNL env _ dict : A dictionary of strings that will be used to determine the DCNL server . DCNL Returns : DCNL A tuple of ( host , port , port ) tuple . DCNL Raises : DCNL ValueError : if the config file is not a valid config file . &apos;
&apos;Save all categories values to a shop&apos;
&apos;Try to retrieve the WSGI server to use for HTTPS . DCNL If the scheme is not set , it will be used to retrieve the DCNL connection to the server \ &apos; s default protocol . &apos;
&apos;Return text as a string or a string or list of strings . DCNL Example : : DCNL &gt; &gt; &gt; str ( &#91; \ &apos; foo \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; DCNL &gt; &gt; &gt; str ( \ &apos; x \ &apos; ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; b \ &apos; &#93; DCNL &gt; &gt; &gt; str ( \ &apos; x \ &apos; ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; b \ &apos; &#93; DCNL &gt; &gt; &gt; str ( \ &apos; foo \ &apos; ) DCNL ( \ &apos; x \ &apos; , \ &apos; b \ &apos; ) DCNL &gt; &gt; &gt; str ( \ &apos; foo \ &apos; ) DCNL ( \ &apos; x \ &apos; , \ &apos; b \ &apos; ) DCNL &gt; &gt; &gt; str ( \ &apos; foo \ &apos; ) DCNL ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) &apos;
&apos;Set the attribute dictionary to the arguments . &apos;
&apos;Given a dictionary of dictionaries , returns a dictionary that can be DCNL converted to a dictionary that can be used as a dictionary . &apos;
&apos;Provides a generic variable \ &apos; s variable context variable . DCNL : param context : Rendering context DCNL : type context : jinja2.runtime.Context DCNL : param parent : parent context of the comment DCNL : type parent : str DCNL : param parent : the parent context of the comment DCNL : type parent _ context : str DCNL : return : tuple of ( user _ id , user _ id ) &apos;
&apos;Examples : DCNL &gt; &gt; &gt; listify ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; ) ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; , \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; listify ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; ) ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; , \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; listify ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; )
&apos;Logs a failure , if it doesn \ &apos; t exist , raise an exception . &apos;
&apos;Return a list of JSON objects for the given query . DCNL If query is None , the model is returned . DCNL : param model : model object DCNL : param query : query string DCNL : param query : query string DCNL : param increment : list of documents DCNL : return : dict&apos;
&apos;Compute the stable power of a function . DCNL Parameters DCNL f _ obs : array _ like DCNL An array of observations . DCNL f _ exp : int or int , optional DCNL Axis along which to compute the divergence . DCNL axis : int , optional DCNL Axis along which to compute the statistic . Default is 0 . DCNL Returns DCNL kl _ divergence : float DCNL Kullback-Leibler divergence of f _ t . DCNL Notes DCNL This function is jit-complied by Numba . DCNL Examples DCNL &gt; &gt; &gt; from scipy import exp DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; power _ divergence ( f , f ) DCNL array ( &#91; &#91; 1 . , 1 . , 1 . &#93; , DCNL &#91; 0 , 1 , 2 &#93; , DCNL &#91; 0 , 1 , 2 &#93; , DCNL &#91; 0 , 1 , 2 &#93; , DCNL &#91; 0 , 1 , 2 &#93; , DCNL &#91; 0 , 1 , 2 &#93; , DCNL &#91; 0 , 1 , 2 &#93; , DCNL &#91; 0 , 1 , 2 &#93; , DCNL &#91; 0 ,
&apos;Returns a version string for the current version . &apos;
&apos;Convert a sequence of sequences to a dict . DCNL For example : : DCNL &gt; &gt; &gt; ids = { \ &apos; foo \ &apos; : \ &apos; bar \ &apos; } DCNL &gt; &gt; &gt; to _ dict ( &#91; \ &apos; a \ &apos; , \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; to _ dict ( &#91; \ &apos; a \ &apos; , \ &apos; bar \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; bar \ &apos; &#93; DCNL &gt; &gt; &gt; to _ dict ( &#91; \ &apos; a \ &apos; , \ &apos; bar \ &apos; &#93; , key = \ &apos; foo \ &apos; ) DCNL \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; to _ dict ( &#91; \ &apos; a \ &apos; , \ &apos; bar \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; bar \ &apos; &#93; DCNL &gt; &gt; &gt; to _ dict ( &#91; \ &apos; a \ &apos; , \ &apos; bar \
&apos;Given the allowed language codes , return the best language . &apos;
&apos;RESTful CRUD controller DCNL - used for Searching for people by Skill DCNL - used for Adding / Editing on Profile page&apos;
&apos;Return a diff for the specified packages and return it as a string . DCNL : param path : Path to the package DCNL : return : Difference string or None if it does not exist . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.diff / etc / apache2 / httpd.conf / etc / sudoers&apos;
&apos;Decodes the input string input , returning a tuple ( output DCNL object , length consumed ) . DCNL input is the string to decode . DCNL errors defines the error handling to apply . It defaults to DCNL \ &apos; strict \ &apos; handling which is the only currently supported DCNL error handling for this codec . &apos;
&apos;Cleanup post-unit tests . &apos;
&apos;Checks if the given request is available or not . &apos;
&apos;Opens a configuration file and load it . &apos;
&apos;quote ( \ &apos; abc % 20def \ &apos; ) - &gt; \ &apos; \ &apos; \ &apos; &apos;
&apos;Create a Gaussian kernel based on a Gaussian kernel . DCNL Parameters DCNL data : array _ like DCNL The data to be computed . DCNL eps : float DCNL Relative tolerance . DCNL power : float DCNL Relative tolerance . DCNL min _ min : float , optional DCNL Maximum number of iterations to be used . DCNL min _ size : float , optional DCNL Maximum number of iterations to be used . DCNL min _ percent : float , optional DCNL Maximum number of iterations to be used . DCNL min _ percent : float , optional DCNL Maximum number of iterations to be used . DCNL min _ percent : float , optional DCNL Maximum number of iterations to be used . DCNL min _ percent : float , optional DCNL Maximum number of iterations to be used . DCNL min _ percent : float , optional DCNL Maximum number of iterations to be used . DCNL min _ percent : float , optional DCNL Maximum number of iterations to be used . DCNL min _ percent : float , optional DCNL Maximum number of iterations to be used . DCNL max _ percent : float
&apos;Return list of user permissions for the given user , as defined by DCNL : func : `role _ permissions _ list` . DCNL : param meta : User object DCNL : param user : user user DCNL : param verbose : if True , return the list of user permissions DCNL : return : list of ( user , user , user ) DCNL : rtype : list &#91; str &#93; &apos;
&apos;Parameters DCNL y _ test : array-like , shape ( n _ samples , n _ features ) DCNL y _ test : array-like , shape ( n _ samples , n _ features ) DCNL y _ classes : int , optional DCNL The number of classes to draw . DCNL n _ classes : int , optional DCNL The number of classes to use . DCNL Returns DCNL out : float DCNL The transformed data . &apos;
&apos;Returns the value of a resource . DCNL .. versionadded : : 2016.3.0 DCNL : param resource : the resource to query . DCNL : return : the value of the resource . DCNL .. versionadded : : 0.4&apos;
&apos;Ensure that a setuptools version is installed . DCNL If download _ base is True , try to download a setuptools version . DCNL If download _ base is True , use the setuptools version . &apos;
&apos;Configures and disable setup for tests . DCNL This is useful for unit tests . DCNL : param attrs : List of variables to be tested . DCNL : type attrs : list of : class : ` ~ google.cloud.logging.logger.Logger` DCNL : param attrs : List of variables to be tested . DCNL : type attrs : list of : class : ` ~ google.cloud.logging.logger.Logger` DCNL : param options : A list of variables to run . DCNL : rtype : : class : ` ~ google.cloud.logging.logger.Logger` DCNL : param attrs : A set of attributes to run on the test . DCNL : return : An instance of : class : `CategoryDescription` DCNL for a test . DCNL .. seealso : : DCNL https : / / github.com / pytest-dev / pytest / issues / 381&apos;
&apos;Returns the user \ &apos; s messages based on the request \ &apos; s session . DCNL : param request : The request object . DCNL : type request : django.http.HttpRequest DCNL : return : The user \ &apos; s messages . DCNL : rtype : dict&apos;
&apos;Only work on POSIX-like systems . &apos;
&apos;Documents a batch action action DCNL : param section : The section to write to DCNL : param resource _ name : The name of the resource DCNL : param event _ emitter : The event emitter to use to emit events DCNL : param batch _ action _ model : The model of the service DCNL : param batch _ model _ model : The model of the service DCNL : param service _ model : The model of the service DCNL : param include _ signature : Whether to include the signature DCNL : param include _ signature : Whether to include the signature DCNL : param include _ signature : Whether to include the signature DCNL : param include _ signature : Whether to include the signature DCNL : param include _ signature : Whether to include the signature DCNL : param include _ signature : Whether to include the signature DCNL : param include _ signature : Whether to include the signature DCNL : param include _ signature : Whether to include the signature DCNL : param include _ signature : Whether to include the signature DCNL : param include _ signature : Whether to include
&apos;Given a tagged string , return a list of the form \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , DCNL \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; , \ &apos;
&apos;Close every component in the database . &apos;
&apos;Returns the ID value for a given email address . DCNL Args : DCNL email : The email address . DCNL Returns : DCNL A string containing the corresponding IP address . &apos;
&apos;Returns cache url for a given cache object . DCNL : rtype : str&apos;
&apos;Sets an instance of : class : `SessionStore` in the app registry . DCNL : param store : DCNL An instance of : class : `SessionStore` . DCNL : param key : DCNL The key used to retrieve the instance if it is not set . DCNL : param app : DCNL A : class : `webapp2.WSGIApplication` instance used to retrieve the DCNL instance . The active app is used if it is not set . &apos;
&apos;Return a dictionary with information about the capabilities DCNL and the capabilities dictionary and their name . DCNL : param request : Request object DCNL : type request : django.http.HttpRequest DCNL : return : Dictionary with information about the capabilities DCNL : rtype : dict &#91; str &#93; &apos;
&apos;Loops through the images , collapsing concurrent calls . DCNL Parameters DCNL data : pd.DataFrame DCNL The data in which to calculate the image . DCNL cover _ entries : list of str , optional DCNL The index of the image in which to calculate the ordering . DCNL short _ units : str , optional DCNL The name of the image in which to calculate the ordering . DCNL volume _ multiple : bool , optional DCNL If True , don \ &apos; t need to do this . DCNL volume _ multiple : bool , optional DCNL If True , don \ &apos; t need to do this . DCNL Returns DCNL projs : list DCNL A list of tuples , where each element is the same as the DCNL ordering of the image . DCNL Examples DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; print ( record.id ) DCNL array ( &#91; &#91; 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0
&apos;Flattens a tensor into a list of integers . DCNL Args : DCNL x ( ~ chainer.Variable ) : Input variable . DCNL dim ( int ) : Number of dimensions of x . DCNL Returns : DCNL ~ chainer.Variable : Output variable . &apos;
&apos;Return a distribution object or source distribution object for filename or filename . &apos;
&apos;A shortcut for L { serverFromString } and L { IReactorTCP.listenTCP } } . DCNL @ param factory : A protocol factory method . DCNL @ type factory : L { IProtocolFactory } or L { IProtocolFactory } or L { bytes } DCNL @ param port : The port number to bind to . DCNL @ type port : C { str } DCNL @ param port : The port number of the interfaces to bind to . DCNL @ type backlog : C { str } DCNL @ param backlog : the port number of the interface . DCNL @ type backlog : C { str } DCNL @ param backlog : the port number of the interface . DCNL @ rtype : L { IProtocolFactory } or L { None } &apos;
&apos;Show the details of an existing snapshot . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -f show _ snapshot gce name = mysnapshot name&apos;
&apos;Return the diff information for the specified job id . DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; snapper.diff _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; snapper.diff _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; snapper.diff _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; snapper.diff _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; snapper.diff _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; snapper.diff _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; snapper.diff _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; snapper.diff _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; snapper.diff _ jid jid = 20160503150049487736 DCNL salt \ &apos;
&apos;Return true if the given host is a host . &apos;
&apos;Get all static files for all static files in the given directory . DCNL This function will restore the contents of all static files to each DCNL directory in the current directory . DCNL : param app _ name : The name of the file to get static files for . DCNL : type module _ name : str DCNL : param template _ config : A list of linting objects . DCNL : returns : A list of all static files that were created during the DCNL application . DCNL : rtype : list &#91; str &#93; &apos;
&apos;Return a dict with a subset of keys that are subset of the keys . DCNL Parameters DCNL d : dict DCNL Dictionary mapping keys to dict . DCNL keys : dict DCNL Dictionary mapping keys to keys in dictionary keys . DCNL Returns DCNL d : dict DCNL Dictionary mapping keys to keys in dictionary keys . &apos;
&apos;Generate an unambiguous representation for instance _ instance and ordered dict . &apos;
&apos;Ensure the user is absent . DCNL name DCNL The name of the user to remove . DCNL profile DCNL The name of the profile configuration to use . Defaults to ``github`` . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; win _ iis.remove _ absent name = \ &apos; team _ name \ &apos; &apos;
&apos;Count the number of objects in the given object \ &apos; s type . DCNL Example : DCNL &gt; &gt; &gt; count ( \ &apos; MyClass \ &apos; ) DCNL Traceback ( most recent call last ) : DCNL ValueError : opcode LOAD _ ATTR not allowed&apos;
&apos;Splits a pandas DataFrame into a list of integers , returning DCNL a list of integers . DCNL Parameters DCNL df : pd.DataFrame DCNL A pandas DataFrame representing a list of integers , a list of DCNL integers , a list of integers , a list of integers , a list of DCNL integers , a list of integers , a list of integers , a list of DCNL integers , a list of integers , a list of integers . DCNL Returns DCNL a list of integers , a list of integers . &apos;
&apos;Sets the cache key for the provided key `setting` of the destination.settings dict . DCNL : param destination : DCNL An object to be set DCNL : param setting : DCNL The value to set DCNL : param key _ prefix : DCNL The prefix to set the cache key DCNL : param key _ prefix : DCNL The value to set to `setting` to make the cache key DCNL : param value : DCNL The value to use when pushing the value into the cache key DCNL : param list : DCNL The value to use when pushing the value into the cache key DCNL : param list _ : DCNL The value to use when pushing the value into the cache key DCNL : return : True if the cache was set , False otherwise . &apos;
&apos;Build a OS X version string . DCNL @ param dist : A distribution instance . DCNL @ type dist : L { bytes } DCNL @ return : A string containing the correct version number . DCNL @ rtype : C { int } &apos;
&apos;Publish a message to the Pub / Sub topic . &apos;
&apos;Simulates a HEAD request to a WSGI application . DCNL Equivalent to : : DCNL simulate _ request ( app , * * kwargs ) DCNL Args : DCNL app ( str ) : The application path . DCNL path ( str ) : The path to the request . DCNL kwargs ( dict ) : The keyword arguments to pass to the request DCNL ( e.g. , \ &apos; thing = 1,2,3 \ &apos; ) . DCNL Returns : DCNL A tuple of ( key , value ) pairs . &apos;
&apos;Extract a list of problems in a problem . Raise an exception if DCNL the problem is found . &apos;
&apos;Assert that cons gets tokenized correctly . &apos;
&apos;Recursively remove a file . DCNL : param source : The source file or directory to remove . DCNL : return : True if the file exists , False otherwise . &apos;
&apos;Check if the element is an operator in the form : : DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is _ operator ( &quot; Hello &quot; , &quot; Hello &quot; ) DCNL is
&apos;Decide whether a template should be rendered as rendered . DCNL : param doc : DCNL : param params : DCNL : param html : DCNL : type html : str DCNL : param html : DCNL : type html : str DCNL : param html : DCNL : type html : str &#124; str DCNL : return : True if the template is rendered , `False` otherwise . DCNL : rtype : bool&apos;
&apos;Regression test for https : / / github.com / jkbrzt / issues / 248 , DCNL https : / / github.com / jkbrzt / issues / 248 , DCNL https : / / github.com / The-Compiler / qutebrowser / issues / 248 ) &apos;
&apos;Return a list of ( name , namespace ) pairs from the given namespace . DCNL If no namespace is found , it will be searched for the given namespace . DCNL Otherwise , return the full namespace name . DCNL .. versionadded : : 2015.5.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.version &lt; name &gt; DCNL salt \ &apos; * \ &apos; pkg.version &lt; name &gt; &lt; name &gt; &lt; name &gt; &apos;
&apos;Expands dimensions along a given axis . DCNL Args : DCNL a ( cupy.ndarray ) : Input array . DCNL axis ( int ) : Axis along which to expand the dimensions . DCNL Returns : DCNL ~ chainer.Variable : Output variable . &apos;
&apos;Delete a gluster volume . DCNL target DCNL Name of the volume DCNL stop DCNL Force stop volume DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; glusterfs.delete _ volume mycluster&apos;
&apos; &gt; &gt; &gt; simple _ seq ( &#91; 1 , 2 , 3 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; simple _ seq ( &#91; 1 , 2 , 3 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos;Make a tree tree of * node * . DCNL For example : DCNL &gt; &gt; &gt; tree ( &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; tree \ &apos; &#93; DCNL &gt; &gt; &gt; tree ( &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; ) ,
&apos;join ( ) - &gt; join ( ) &apos;
&apos;Run a transaction running on a transaction . DCNL Args : DCNL retries : Number of retries to run . DCNL function : callable to run on the transaction . DCNL * args : positional arguments to pass to the function . DCNL * * kwargs : keyword arguments passed to the function . DCNL Returns : DCNL A dictionary with the same arguments as the decorated function . DCNL Raises : DCNL TransactionFailedError , if the transaction is committed . &apos;
&apos; @ param realm : DCNL @ type realm : string DCNL @ param algorithm : The algorithm to use . DCNL @ type algorithm : L { bytes } DCNL @ param algorithm : The algorithm to use . &apos;
&apos;Decide whether a question should be sent to a question . DCNL : param question : Question to question DCNL : param error _ response : error response to check DCNL : return : True if success , False otherwise . &apos;
&apos;Try to determine the name of the application . DCNL This is useful when you want to replace the \ &apos; text \ &apos; and \ &apos; extraction _ name \ &apos; DCNL and then it will replace the \ &apos; text \ &apos; and \ &apos; extraction _ name \ &apos; . DCNL This is useful if you want to replace the \ &apos; text \ &apos; and \ &apos; extraction _ name \ &apos; . DCNL This is useful if you want to replace the input , and we don \ &apos; t want to DCNL specify the output . &apos;
&apos;Return a list of ( packages , package ) pairs for the given packages . DCNL For example , the package \ &apos; package \ &apos; is the global package DCNL ( \ &apos; / \ &apos; , \ &apos; package \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , DCNL \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; foo \ &apos; , \ &apos; bar \ &apos; , \ &apos; baz \ &apos; , DCNL \ &apos; package \ &apos; , \ &apos; package \ &apos; , \ &apos; package \ &apos; , \ &apos; package \ &apos; , \ &apos; package \ &apos; , \ &apos; package \
&apos;Restores a file from a file with a temporary file name DCNL : param archive : The file name of the archive DCNL : param archive : The file name for the archive DCNL : return : A list of ( filename , name ) tuples&apos;
&apos;Load a module name from a config string . DCNL : param config _ string : name of the config file DCNL : type config _ string : str DCNL : param default _ name : default name of the module DCNL : type default _ name : str DCNL : return : the module name DCNL : rtype : module&apos;
&apos;Calculate the gamma function . DCNL Parameters DCNL evoked : instance of Evoked DCNL The evoked instance . DCNL forward : instance of Covariance DCNL The noise covariance . DCNL noise _ cov : float , optional DCNL The noise covariance of the noise . DCNL alpha : float DCNL The probability of the noise . DCNL verbose : bool , optional DCNL If True , then the covariance matrix will be used . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL sol : ndarray , shape ( n _ samples , n _ features ) DCNL The result of the noise . &apos;
&apos;Sets the hostname for the current server . DCNL Usage : DCNL .. code-block : : bash DCNL salt \ &apos; device _ name \ &apos; junos.set _ hostname hostname = True&apos;
&apos;A decorator that ensures that a method can be called with a DCNL backing lock of a method . &apos;
&apos;Create a function that takes a function name and keyword arguments . DCNL If * default * is passed , it will be passed to the wrapped function DCNL as a function . &apos;
&apos;Hex encodes characters for use in JavaScript strings . &apos;
&apos;Reset all locale extensions for all languages . DCNL This will reset all locale extensions for all languages . DCNL For example : DCNL &gt; &gt; &gt; reset _ extensions _ locales ( \ &apos; en _ US \ &apos; ) DCNL \ &apos; en _ US \ &apos; DCNL &gt; &gt; &gt; reset _ extensions _ locales ( \ &apos; en _ US \ &apos; ) DCNL \ &apos; en _ US \ &apos; DCNL &gt; &gt; &gt; reset _ extensions _ locales ( \ &apos; en _ US \ &apos; ) DCNL \ &apos; en _ US \ &apos; DCNL &gt; &gt; &gt; reset _ extensions _ locales ( \ &apos; en _ US \ &apos; ) DCNL \ &apos; en _ US \ &apos; DCNL &gt; &gt; &gt; reset _ extensions _ locales ( \ &apos; en _ US \ &apos; ) DCNL \ &apos; en _ US \ &apos; DCNL &gt; &gt; &gt; reset _ extensions _ locales ( \ &apos; en _ US \ &apos; ) DCNL \ &apos; en _ US \ &apos; DCNL &gt; &gt; &gt; reset _ extensions _ locales ( \ &apos; en _ US \ &apos; ) DCNL \ &apos;
&apos;Listen for a description from a description . DCNL @ param description : The description of the plugin . DCNL @ type description : L { twisted.internet.interfaces.IProtocolFactory } DCNL @ type factory : L { twisted.internet.interfaces.IProtocolFactory } DCNL @ type default : L { twisted.internet.interfaces.IProtocolFactory } DCNL @ rtype : L { twisted.internet.interfaces.IProtocolFactory } DCNL @ rtype : L { twisted.internet.interfaces.IProtocolFactory } DCNL @ rtype : L { twisted.internet.interfaces.IListeningPort } DCNL @ raises : L { twisted.internet.endpoints.serverFromString } &apos;
&apos;Test either if an error is raised when sample is correct . DCNL Regression test for https : / / github.com / astropy / astropy / pull / 3713&apos;
&apos;Check that get _ release _ definitions is available . &apos;
&apos;Get the help command to run the script . DCNL : rtype : str DCNL : return : The help command to run the script . &apos;
&apos;Return the list of Christoffel symbols for the given metric . DCNL Examples DCNL &gt; &gt; &gt; from sympy.diffgeom.rn import R2 DCNL &gt; &gt; &gt; from sympy.diffgeom.rn import R2 DCNL &gt; &gt; &gt; from sympy.diffgeom.rn import R2 DCNL &gt; &gt; &gt; from sympy.diffgeom.rn import R2 DCNL &gt; &gt; &gt; from sympy.diffgeom.rn import R2 DCNL &gt; &gt; &gt; from sympy.diffgeom.rn import R2 DCNL &gt; &gt; &gt; from sympy.diffgeom.rn import R2 DCNL &gt; &gt; &gt; from sympy.diffgeom.rn import R2 DCNL &gt; &gt; &gt; from sympy.diffgeom.rn import R2 DCNL &gt; &gt; &gt; from sympy.diffgeom.rn import R2 DCNL &gt; &gt; &gt; from sympy.diffgeom import metric _ to _ Christoffel _ 1st , TensorProduct DCNL &gt; &gt; &gt; metric _ to _ Christoffel _ 1st ( R2.x * TP ( R2.dx , R2.dx ) + TP ( R2.dy , R2.dy ) ) DCNL &#91; ( 1 , 2 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , (
&apos;Recursive helper for : func : `parse _ factor _ list` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; _ _ _ _ _ factor _ list ( x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * *
&apos;Move the line in the current line . If the input is not DCNL read , it will return the next line . &apos;
&apos;Compute squared log loss for ``y _ true`` . DCNL Parameters DCNL y _ true : tf.Tensor DCNL Tensor of 0s and 1s . DCNL y _ prob : array-like , shape ( n _ samples , n _ features ) DCNL The ground truth value . DCNL Returns DCNL loss : float DCNL The log loss . &apos;
&apos;Start the server and connect it to the server \ &apos; s configuration . DCNL If the server is not found , it will be created to the end DCNL of the server . &apos;
&apos;Generate a export file from the given exploration _ id . DCNL Args : DCNL exploration _ id : str . The exploration id . DCNL version : str . The version of the exploration . DCNL Returns : DCNL A string containing the contents of the exploration . &apos;
&apos;Hilbert transform for a single axis . DCNL # Arguments DCNL x : input tensor . DCNL W : A tensor . DCNL b : A tensor . &apos;
&apos;Replacement for os.path.normpath with some enhancements . DCNL &gt; &gt; &gt; Normalize ( \ &apos; / foo / bar / baz \ &apos; ) DCNL \ &apos; / foo / bar / baz \ &apos; DCNL &gt; &gt; &gt; Normalize ( \ &apos; / foo / bar / baz \ &apos; ) DCNL \ &apos; / foo / bar / baz \ &apos; DCNL &gt; &gt; &gt; Normalize ( \ &apos; / foo / bar / baz \ &apos; ) DCNL \ &apos; / foo / bar / baz \ &apos; DCNL &gt; &gt; &gt; Normalize ( \ &apos; / foo / bar / baz \ &apos; ) DCNL \ &apos; / foo / bar / baz \ &apos; DCNL &gt; &gt; &gt; Normalize ( \ &apos; / foo / bar / baz \ &apos; ) DCNL \ &apos; / foo / bar / baz \ &apos; DCNL &gt; &gt; &gt; Normalize ( \ &apos; / foo / bar / baz \ &apos; ) DCNL \ &apos; / foo / bar / baz \ &apos; DCNL &gt; &gt; &gt; Normalize ( \ &apos; / foo / bar / baz \ &apos; ) DCNL \ &apos; / foo / bar /
&apos;Select the \ &apos; start \ &apos; starting at \ &apos; end \ &apos; . DCNL Parameters DCNL start : int DCNL The start of the partition . DCNL end : int DCNL The end of the partition . &apos;
&apos;Calculates the log sum of a Gaussian distribution . DCNL Parameters DCNL a : Theano tensor DCNL A theano shared variable . DCNL Returns DCNL log _ mean : float DCNL The log sum of the log probability of a model . &apos;
&apos;Try to apply the pattern , return the match object , or None if no DCNL match was found . &apos;
&apos;Create a symbolic variable with weight decay . DCNL Arguments : DCNL name : Name of the variable . DCNL shape : list of `int` . DCNL stddev : `float` . DCNL wd : `float` . The decay . DCNL Returns : DCNL Variable Tensor&apos;
&apos;Perform a PTR record lookup . DCNL @ type name : C { str } DCNL @ param name : DNS name to resolve . DCNL @ type timeout : Sequence of C { int } DCNL @ param timeout : Number of seconds after which to reissue the query . DCNL When the last timeout expires , the query is considered failed . DCNL @ rtype : C { Deferred } &apos;
&apos;Check if a database exists . DCNL name DCNL Name of the database to check . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; influxdb08.db _ exists &lt; name &gt; &apos;
&apos;Generate a new graph connectivity graph . DCNL Parameters DCNL G : NetworkX graph DCNL An undirected graph . DCNL Returns DCNL G : NetworkX graph DCNL A NetworkX graph . DCNL See Also DCNL generate _ edge _ connectivity DCNL References DCNL .. &#91; 1 &#93; P. L. Krapivsky and S. Redner , DCNL Organization of Growing Random Networks , DCNL http : / / arxiv.org / abs / 0906.0612 &gt; &apos;
&apos;Build node tree from git _ dir . DCNL Parameters DCNL git _ dir : str DCNL Path to the git repository . DCNL roles _ dirs : list DCNL List of roles to run . DCNL aws _ parent _ dirs : list of str , optional DCNL The list of roles to run . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; snapper.build _ graph &lt; git _ dir &gt; &apos;
&apos;Switches the user \ &apos; s status , if any . DCNL : param api _ url : http : / / tools.ietf.org / html / rfc5849 # section-3.6&apos;
&apos;Make sure a class is compatible with `support _ data` . DCNL This is done by the test _ as _ data flag . &apos;
&apos;Extract the status code from a requirements.txt file , returning DCNL the status code . DCNL If status is not specified , it will return the correct error message . DCNL If the status code is not a valid error code , it will return the DCNL appropriate error message . &apos;
&apos;Runs the contents of a markdown file to a HTML file . DCNL Args : DCNL output _ dir : Path to the output directory . DCNL Returns : DCNL An HTML file containing the contents of the Markdown file . &apos;
&apos;Write a chunk to file and update the progress bar . &apos;
&apos;Get the list of available features . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; makeconf.get _ features \ &apos; Local Area Connection \ &apos; &apos;
&apos;Plot a topomap plot for a given axis . DCNL Parameters DCNL data : array _ like DCNL The data to plot . DCNL pos : array _ like DCNL The position in the image . DCNL title : int &#124; None DCNL The width of the image . DCNL default : float , optional DCNL The default multiplier to use for the image . DCNL cmap : str &#124; None DCNL The default multiplier to use for the image . DCNL cmap : str &#124; None DCNL The default value to use . Defaults to None . DCNL Returns DCNL fig : instance of matplotlib.figure.Figure DCNL The figure . &apos;
&apos;Returns a rectangle with the given width and height . DCNL Parameters DCNL width : int DCNL The width of the rectangle . DCNL height : int DCNL The height of the rectangle . DCNL dtype : data-type DCNL The data type of the rectangle . DCNL Returns DCNL selem : ndarray DCNL The neighborhood expressed as a 2-D array of 0 and 1 . &apos;
&apos;Return the tokens of the given doc and returns the tokens DCNL of the tokens . &apos;
&apos;Check if a sequence is a T.nnet.Softmax op , False otherwise . &apos;
&apos;Retrieve all available events DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; redis.start&apos;
&apos;Format column index from a column string . DCNL Parameters DCNL column : str DCNL The column column . DCNL decimal : bool DCNL If True , the column name will be appended to the column DCNL of the column . DCNL Returns DCNL column _ index : str DCNL The column index of the column . &apos;
&apos;Return the output of a subshell , return stdout . &apos;
&apos;Generate a random integer in ``K &#91; x &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.domains import ZZ DCNL &gt; &gt; &gt; from sympy.polys.densebasic import dup _ random DCNL &gt; &gt; &gt; R , x = ring ( &quot; x &quot; , ZZ ) DCNL &gt; &gt; &gt; R.dup _ random ( x * * 2 + 2 * x + 2 ) DCNL 3&apos;
&apos;Reconstruct skeleton matrix by ID . DCNL : param idx : DCNL Column index array . DCNL : type idx : : class : `numpy.ndarray` DCNL : param proj : DCNL Interpolation coefficients . DCNL : type proj : : class : `numpy.ndarray` DCNL : return : DCNL Interpolation matrix . DCNL : rtype : : class : `numpy.ndarray`&apos;
&apos;Return a function that raises an exception if f is not visible . DCNL : param f : a function to check DCNL : return : a tuple of ( name , value ) pairs DCNL : raises : * * ValueError * * if the function does not exist or not within * * False * * otherwise&apos;
&apos;Determine if ethernet device exists . DCNL : param device _ name : The name of the device to check for . DCNL : param ip _ name : The IP address of the device to check . DCNL : param mac : The MAC address to check for . DCNL : param namespace : The namespace to check for . DCNL : return : True if the device exists , otherwise False . &apos;
&apos;Module homepage for non-Admin users when no CMS content found&apos;
&apos;Return the indices of an expression . Returns the indices . DCNL Examples DCNL &gt; &gt; &gt; from sympy.tensor.index import get _ indices DCNL &gt; &gt; &gt; from sympy.tensor.index import get _ indices DCNL &gt; &gt; &gt; from sympy.tensor.index import get _ indices DCNL &gt; &gt; &gt; from sympy.tensor.index import get _ indices DCNL &gt; &gt; &gt; from sympy.tensor.index import get _ indices DCNL &gt; &gt; &gt; get _ indices ( &#91; \ &apos; x \ &apos; , \ &apos; y \ &apos; , \ &apos; y \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; get _ indices ( &#91; \ &apos; x \ &apos; , \ &apos; y \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; get _ indices ( &#91; \ &apos; x \ &apos; , \ &apos; y \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; get _ indices ( &#91; \ &apos; x \ &apos; , \ &apos; y \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; get _ indices ( &#91; \ &apos; x \ &apos; , \ &apos; y \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; get _
&apos;Writes the content to the XML file and write it to the file . DCNL Args : DCNL content : The content to write . DCNL path : The path to the XML file . DCNL encoding : The encoding to use when decoding the file . DCNL pretty : if True , the encoding will be written to the file . DCNL indent : if True , defaults to the beginning of the file . &apos;
&apos;Convert a flat filter dict to a boto3 dict whose keys \ &apos; key _ dict \ &apos; keys are DCNL converted to a dict of key / value pairs . DCNL Example : DCNL &gt; &gt; &gt; filter _ dict _ to _ boto3 _ list ( filters = &#91; \ &apos; MyTagKey \ &apos; , \ &apos; MyTagValue \ &apos; &#93; ) DCNL &gt; &gt; &gt; filter _ dict _ to _ boto3 _ list ( filters = &#91; \ &apos; MyTagKey \ &apos; , \ &apos; MyTagValue \ &apos; ) &#93; DCNL &gt; &gt; &gt; filter _ dict _ to _ boto3 _ list ( filters = &#91; \ &apos; MyTagKey \ &apos; , \ &apos; MyTagValue \ &apos; ) &#93; DCNL &gt; &gt; &gt; filter _ dict _ to _ boto3 _ list ( filters = &#91; \ &apos; MyTagKey \ &apos; , \ &apos; MyTagValue \ &apos; ) &#93; DCNL &gt; &gt; &gt; filter _ dict _ to _ boto3 _ list ( filters = &#91; \ &apos; MyTagKey \ &apos; , \ &apos; MyTagValue \ &apos; ) &#93; DCNL &gt; &gt; &gt; filter _ dict _ to _ boto3 _ list ( filters =
&apos;Check if the matplotlib frame is installed . DCNL Parameters DCNL ax : matplotlib Axes instance DCNL The Axes to which to get the frame . &apos;
&apos;Try to get a certificate from the given domains and a renewal DCNL certificate . DCNL : param dict config : The HTTP request . DCNL : param dict config : A list of domains to check . DCNL : param str domains : The domain name to validate . DCNL : param cert : A certificate which will be used to identify the DCNL certificate . DCNL : returns : A tuple of ( key , port ) tuple . DCNL : rtype : tuple ( str , str ) &apos;
&apos;This calculates the entropy of the given distribution . DCNL Parameters DCNL px : scalar or array-like DCNL The probability distribution . DCNL alpha : float , optional DCNL The Null hypothesis of the probability distribution . DCNL beta : float , optional DCNL The Null hypothesis . DCNL beta : float DCNL Degrees of freedom of freedom . DCNL Returns DCNL M : ndarray , shape ( n _ samples , n _ features ) DCNL The p-value for the given distribution . DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . ISBN : 978-0716724117&apos;
&apos;Like test _ model _ with _ model _ 1d , but creates a new model instance with DCNL one model class with a new model class . &apos;
&apos;Converts a static file into a temporary directory factory . &apos;
&apos; .. versionadded : : 2015.8.0 DCNL Return the existence of a chain DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; iptables.check _ chain filter INPUT DCNL IPv6 : DCNL salt \ &apos; * \ &apos; iptables.check _ chain filter INPUT family = ipv6&apos;
&apos;Parse an iterator of tuples and return a list of tuples . DCNL If format _ string is None , the iterator will be returned . DCNL Args : DCNL format _ string : A string containing a single format string . DCNL Returns : DCNL A list of tuples containing the same format , as a list of DCNL integers . &apos;
&apos;Returns a `500 Internal Server` error . &apos;
&apos;Try to determine if we \ &apos; re running a file or not&apos;
&apos;Perform a chisquare test for proportions for tests . DCNL Parameters DCNL count : int , optional DCNL The number of successes in nobs trials . DCNL nobs : int , optional DCNL The number of successes in the filter . DCNL value : float , optional DCNL The value for which the test will be calculated . DCNL prop : float , optional DCNL The value for which the test statistic is calculated . DCNL alternative : float , optional DCNL The p-value for the test statistic . Default is None . DCNL alternative : float , optional DCNL The p-value for the test statistic . Default is None . DCNL Returns DCNL statistic : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the test . &apos;
&apos;Get all available regions for the AWS CloudTrail . DCNL : rtype : list DCNL : return : A list of : class : `boto.regioninfo.RegionInfo`&apos;
&apos;2D Pooling . DCNL Arguments : DCNL incoming : `Tensor` . The incoming tensor . DCNL kernel _ size : The size of the batch . DCNL name : The name of the batch . DCNL Returns : DCNL A preprocessed image . &apos;
&apos;Method to return a list of directories in the given path . DCNL @ param path : path to the file DCNL @ type path : string DCNL @ param filename : name of the file DCNL @ type filename : string DCNL @ param paths : list of directories to search for DCNL @ rtype : L { list } &apos;
&apos;Plots a matplotlib figure . DCNL Parameters DCNL fig : matplotlib.figure.Figure DCNL The figure to plot . DCNL y : float DCNL The axis to plot to . DCNL y : int DCNL Number of points to plot . DCNL Returns DCNL fig : matplotlib.Figure&apos;
&apos;Get the path to the directory that owns the file . DCNL If the file is not logged in , then the file will be run . DCNL Returns True if the file has been detected , False otherwise . DCNL Before the file has been set , then this function returns True . DCNL Otherwise , it will never be used . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; apache.directives&apos;
&apos;http : / / code.google.com / p / opendatakit / DCNL From http : / / code.google.com / p / opendatakit / &apos;
&apos;Listens to the : py : func : `admin _ group _ list` . DCNL : param request : HTTP request DCNL : type request : django.http.HttpRequest DCNL : return : list of dictionaries&apos;
&apos;Read `count` booleans using the plain encoding . DCNL Takes care of the byte order . &apos;
&apos;Create an ElastiCache subnet group . DCNL CLI example : : DCNL salt myminion boto _ kms.create _ subnet _ group name = \ &apos; alias / mykey \ &apos; &apos;
&apos;Update global state , including obsoletes . DCNL Exclude * kernel * upgrades by default . &apos;
&apos;Return the default locale for the given category . DCNL If no locale is found , the default locale will be returned . DCNL : param category : the name of the locale , e.g. \ &apos; en _ US \ &apos; DCNL : param aliases : the list of aliases for the locale , e.g. \ &apos; en _ US \ &apos; DCNL : return : the default locale or None if no locale is found . &apos;
&apos;Get the open _ datastore _ key for the given course _ id and xblock _ state . &apos;
&apos;Fast code to python code . DCNL : param code : code to be written . DCNL : type code : str DCNL : param indent : Name of the code to be written . DCNL : type filename : str DCNL : param formatter : File formatter . DCNL : type formatter : str DCNL : param encoding : File to write to . DCNL : type encoding : string DCNL : param outfile : File-like object to write to . If not given , the file will be DCNL written to the file . &apos;
&apos;Helper function to write a list of relation to the spreadsheet . DCNL Args : DCNL xml : string DCNL The xml element to write to . DCNL comments _ id : str DCNL The ID of the xml file to write . DCNL ds _ id : str DCNL The ID of the source file to write . &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / pull / 160&apos;
&apos;Plot the kernal density of the specified axes . DCNL Parameters DCNL img : ndarray DCNL Image data . DCNL axes : array-like , shape ( n _ channels , 3 ) DCNL Axes to plot to . DCNL bins : int , optional DCNL Number of bins to use . Default is None . DCNL Returns DCNL fig : ndarray DCNL Figure out of the image . &apos;
&apos;Loads the file named \ &apos; file \ &apos; from the config file and load it . DCNL If loaded _ config is True , the file will be loaded from the config file . &apos;
&apos;Sets the user preference for a user preference . DCNL Args : DCNL requesting _ user ( User ) : The user of the user . DCNL preference _ key ( str ) : The key of the user preference . DCNL preference _ value ( str ) : The username of the user preference . DCNL username ( str ) : The username of the user preference . &apos;
&apos;Processes a given node in the given list of components . DCNL If there is no such node in the given list , then it \ &apos; s DCNL returned . DCNL : param node : DCNL : param aliases : DCNL : type aliases : DCNL : param aliases : DCNL : type aliases : DCNL : param duplicates : DCNL : type duplicates : DCNL : return : DCNL : rtype : &apos;
&apos;Given an integer , return a boolean indicating whether the value DCNL can \ &apos; t exist . DCNL Argument Outputs DCNL ``True`` `` &quot; yeah , no , maybe &quot; `` ``yeah`` DCNL ``False`` `` &quot; yeah , no , maybe &quot; `` ``no`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; `` ``maybe`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; `` ``maybe`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; `` ``maybe`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; `` ``maybe`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; `` ``maybe`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; `` ``maybe`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; `` ``maybe`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; `` ``maybe`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; `` ``maybe`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; `` ``maybe`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; `` ``maybe`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; `` ``maybe`` DCNL ``None`` `` &quot; yeah , no , maybe &quot; ``
&apos;Get the reference of a test pool based on the cluster . &apos;
&apos;Verify that the user is valid . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; influxdb08.verify &lt; user &gt; &lt; password &gt; DCNL salt \ &apos; * \ &apos; influxdb08.verify &lt; user &gt; &lt; password &gt; &lt; password &gt; &lt; password &gt; &apos;
&apos;If auth fails , raise 401 with a basic authentication header . DCNL realm DCNL A string containing the authentication realm . DCNL users DCNL A dict of the form { username : password } or a callable returning a dict . DCNL encrypt DCNL callable returning a dict containing the authentication header . &apos;
&apos;Replace a URL into a URL . DCNL : param url : DCNL : param name : DCNL : param name : DCNL : param value : DCNL : return : &apos;
&apos;Returns True if the given expression is not a scalar . &apos;
&apos;Get the current version of LibVLC , or None if it is unavailable . &apos;
&apos;Module homepage for non-Admin users when no CMS content found&apos;
&apos;Render an OpenID request . DCNL If openid _ url is not specified , it will be redirected to the user . DCNL If the user is not logged in , it will be redirected to the user . DCNL If redirect _ to is True , the openid request will be rendered . If the DCNL user is not logged in , it will be redirected to the user . &apos;
&apos; : param uri : uri of the file DCNL : type uri : string DCNL : param timeout : Timeout in seconds DCNL : type config : dict DCNL : param conn _ session : Object from which to parse the connection DCNL : type conn _ session : str DCNL : param requests _ session : Object from which to write the connection DCNL : type requests _ session : str DCNL : return : Tuple of ( filename , message , message ) tuples DCNL : rtype : dict&apos;
&apos;Read ch info file from a FIF file . DCNL Parameters DCNL fid : file DCNL The file structure . DCNL tag : str DCNL The tag of the FIF file . DCNL shape : list DCNL Tag of the FIF file . DCNL Returns DCNL info : dict DCNL The file info . &apos;
&apos;Show all permissions for a given resource . DCNL Templates : ``groups / approve.html` , DCNL Context : DCNL request DCNL The request to send in the request DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion stormpath.request _ permissions &lt; request &gt; &apos;
&apos;Called when the editor saves its contents&apos;
&apos;Return the redirects to the user \ &apos; s redirects to the source . DCNL This is done by the \ &apos; redirects \ &apos; to the \ &apos; redirects \ &apos; to the \ &apos; redirects \ &apos; DCNL and returns the user \ &apos; s redirects . DCNL Parameters DCNL redirect _ filename : str DCNL The name of the redirect to get the redirects to . DCNL Returns DCNL redirect _ url : str DCNL The redirects to the next redirect . &apos;
&apos;Check if a file exists and checks that it contains a specific DCNL types . DCNL : param path : the path to check for . DCNL : type path : string DCNL : param check _ names : A list of extensions that should be checked . DCNL : type enable _ beta _ formats : bool DCNL : param enable _ beta _ formats : boolean indicating whether we want to check for DCNL this file . DCNL : type enable _ beta _ formats : bool DCNL : return : True if the file is missing or False otherwise . &apos;
&apos;For GEOS binary predicate functions . &apos;
&apos;Display the URL that links to the URL . DCNL This is similar to : py : func : ` ~ ckan.logic.action.get.dashboard _ url _ url ( ) ` . DCNL If the URL is not a URL , it will be appended to the URL to DCNL the URL . DCNL Example : : DCNL from fabtools import require DCNL # Open a URL that links to the URL . DCNL &gt; &gt; &gt; command ( \ &apos; http : / / example.com / foo / bar / pages / html \ &apos; ) DCNL \ &apos; / path / to / pages / pages / repo \ &apos; &apos;
&apos;Given a list of Items and returns a list of dicts . DCNL Each element in the list is a list of dicts , each item in the DCNL list is a list of dicts . The second element is a list of DCNL ( key , value ) pairs . The second element is a list of DCNL ( key , value ) pairs . The second element is a list of DCNL ( key , value ) pairs . The second element is a list of DCNL ( key , value ) pairs . The second element is a list of DCNL ( key , value ) pairs . The second element is a list of DCNL ( key , value ) pairs . The second element is a list of DCNL ( key , value ) pairs . The second element is a list of DCNL ( key , value ) pairs . The second element is a list of DCNL ( key , value ) pairs . The second element is a list of DCNL ( key , value ) pairs . The second element is a list of DCNL ( key , value ) pairs
&apos;Return a list of interesting properties for the given VPC ID . DCNL Returns { updated : true } if the VPC ID does not exist . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ vpc.describe _ vpc _ name vpc _ name = us-east-1 DCNL salt myminion boto _ vpc.describe _ vpc _ name vpc _ name = us-east-1 --output yaml&apos;
&apos;Returns True if the given degree sequence is a threshold sequence . &apos;
&apos;Yields the bounding boxes with the given inputs . DCNL Args : DCNL inputs : the input tensor . DCNL num _ classes : number of classes to use . DCNL is _ training : boolean , if true , then the training set will be used . DCNL max _ training _ prob : the maximum number of training data to create . DCNL max _ depth : maximum depth of the training set , defaults to 1 . DCNL Returns : DCNL A preprocessed image . DCNL Raises : DCNL ValueError : if `dim _ ordering` is neither `tf` or `th` . &apos;
&apos;CM SERVICE ABORT Section 9.2.7&apos;
&apos;Yield all existing functions that are listed in \ &apos; restricted \ &apos; DCNL with all of the fields listed in \ &apos; count \ &apos; . &apos;
&apos;Issue a query of database records to a database . DCNL : param task _ id : Name of task to query DCNL : type task : ``str`` DCNL : param base : The task to refresh DCNL : type base : ``str`` DCNL : rtype : ``list`` of : py : class : ` ~ elasticsearch.Elasticsearch.bulk` api . &apos;
&apos;Loads the config file from a config file . &apos;
&apos;Provide the first line of a line DCNL &gt; &gt; &gt; path _ tail ( \ &apos; http : / / localhost / \ &apos; ) DCNL ( \ &apos; x \ &apos; , \ &apos; PATH \ &apos; ) DCNL &gt; &gt; &gt; path _ tail ( path ) DCNL \ &apos; / home / b \ &apos; DCNL &gt; &gt; &gt; path _ tail ( path ) DCNL \ &apos; / home / b \ &apos; DCNL &gt; &gt; &gt; path _ tail ( path ) DCNL \ &apos; / home / b \ &apos; DCNL &gt; &gt; &gt; path _ tail ( path ) DCNL \ &apos; / home / b \ &apos; DCNL &gt; &gt; &gt; path _ tail ( path ) DCNL \ &apos; / home / b \ &apos; DCNL &gt; &gt; &gt; path _ tail ( path ) DCNL \ &apos; / home / b \ &apos; DCNL &gt; &gt; &gt; path _ tail ( path ) DCNL \ &apos; / home / b \ &apos; DCNL &gt; &gt; &gt; path _ tail ( path ) DCNL \ &apos; / home / b \ &apos; DCNL &gt; &gt; &gt; path _ tail (
&apos;Return the regular expression for the given prefix for the given prefix . DCNL : param prefix : the prefix for the regex DCNL : type prefix : str DCNL : return : the compiled regex for the regex DCNL : rtype : str&apos;
&apos;Check if a user is a named group . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; group.chgid foo 4376&apos;
&apos;Recursively remove a directory from the given path . DCNL Parameters DCNL path : str DCNL Path to the file to delete . DCNL ignore _ errors : bool , optional DCNL If True , ignore the error handling to the function . DCNL error : str , optional DCNL If True , ignore the error handling to the function . DCNL Returns DCNL filename : str DCNL Path to the file . DCNL Raises DCNL ValueError DCNL If the file does not exist . &apos;
&apos;Decorator that adds the given keyword arguments to the given DCNL arguments . DCNL Usage : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; test.debug DCNL salt \ &apos; * \ &apos; puppet.noop debug DCNL salt \ &apos; * \ &apos; puppet.noop debug DCNL salt \ &apos; * \ &apos; puppet.noop debug DCNL salt \ &apos; * \ &apos; django.debug &lt; args &gt; &apos;
&apos;Frame the given message with the given payload . DCNL If raw _ body is True , don \ &apos; t need to use the default . &apos;
&apos;Update secret from a namespace DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; k8.update _ secret namespace _ name DCNL salt \ &apos; * \ &apos; k8s.delete _ secret namespace _ name http : / / kube-master.cluster.local&apos;
&apos;Return the maximum number of all elements in a tensor . &apos;
&apos;RESTful CRUD controller DCNL - used for Imports &amp; Reports&apos;
&apos;Perform chisquare goodness-of-fit test DCNL Parameters DCNL args : array _ like DCNL Input array . DCNL Returns DCNL statistic : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test . DCNL pvalue : float DCNL The p-value for the chisquare test
&apos;Return a list of TableReference objects DCNL : param results : Results to be queried DCNL : param start : Start results DCNL : param start : Start results of results DCNL : type start : int DCNL : return : list of strings DCNL : rtype : list ( str ) &apos;
&apos;Accepts a json string and returns a Python data structure&apos;
&apos;Create a Cassandra cluster using the given port and port . DCNL : param contact _ points : The Cassandra cluster port , defaults to None . DCNL : type contact _ points : str &#124; None DCNL : param cql _ user : The Cassandra user port if authentication is turned on . DCNL : type cql _ user : str DCNL : param cql _ user : The Cassandra user port if authentication is turned on . DCNL : type cql _ pass : str DCNL : param cql _ user : The Cassandra user port if authentication is turned on . DCNL : type cql _ pass : str DCNL : param cql _ pass : The Cassandra user port if authentication is turned on . DCNL : type cql _ pass : str DCNL : param cql _ pass : The Cassandra user port if authentication is turned on . DCNL : type cql _ pass : str DCNL : param cql _ pass : The Cassandra user port if authentication is turned on . DCNL : type cql _ pass : str DCNL : param cql _ pass : The Cassandra user port if authentication
&apos;Generate a period for a given period . DCNL Parameters DCNL code : str DCNL The code that corresponds to . DCNL period : str DCNL The period of the period . DCNL start : int DCNL The end end of the period . DCNL end : str DCNL The end end of the period . DCNL Returns DCNL DataFrame DCNL A list of datetime.date objects . DCNL Raises DCNL ValueError DCNL Raised when the given period is invalid . &apos;
&apos;Test simple helper function . &apos;
&apos;Makes a sample name for the individual DCNL : param name : the name of the module DCNL : type name : string DCNL : param expr : the expression DCNL : type expr : string DCNL : param argument _ sequence : the function name for the function DCNL : type default _ vars : list DCNL : param language : the `Locale` object , or a string DCNL : param language : the language for this test DCNL : type language : string DCNL : param language : the language for this test DCNL : type language : string DCNL : param language : the language for this test DCNL : type language : string DCNL : param language : the language for this test DCNL : type language : string DCNL : param language : the language for this test DCNL : type language : string DCNL : param language : the language for this test DCNL : type language : string DCNL : param language : the language for this test DCNL : type language : string DCNL : param language : the `Locale` object , or a description DCNL : param language : the language
&apos;Context manager to create a temporary folder . &apos;
&apos;Determine what \ &apos; s \ &apos; is in the following format : DCNL - \ &apos; YYYY-MM-DD \ &apos; - &gt; \ &apos; YYYY-MM-DD HH : 00 : 00 \ &apos; DCNL - \ &apos; YYYY-MM-DD \ &apos; - &gt; \ &apos; YYYY-MM-DD \ &apos; DCNL - \ &apos; YYYY-MM-DD \ &apos; - &gt; \ &apos; YYYY-MM-DD \ &apos; DCNL - \ &apos; YYYY-MM-DD \ &apos; - &gt; \ &apos; YYYY-MM-DD \ &apos; &apos;
&apos;Fetches the next page for each page in the given list . DCNL Args : DCNL page _ size : str . The page size . DCNL max _ start _ cursor : int . DCNL Returns : DCNL list &#91; str &#93; : A list of FeedbackMessage . &apos;
&apos;Perform any notes associated with the given document . DCNL If the input document is an empty string , it will be added to the DCNL parent document . DCNL If the input document is an empty string , it will be added to the DCNL parent document . DCNL If the input document is an empty string , it returns None . &apos;
&apos;Main method to run a `main` function , returning a string DCNL with the following parameters : DCNL argv &#91; &#93; &#93; DCNL The arguments passed to the function . DCNL Returns : DCNL A list of : py : class : ` ~ exceptions.ValueError` if the command is not DCNL in a consistent manner . DCNL : rtype : : class : `EMRJobRunner`&apos;
&apos;Removes a group from the Postgres server . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; postgres.group _ remove \ &apos; group \ &apos; &apos;
&apos;Calculates the standard error of the given axis . DCNL Parameters DCNL a : array _ like DCNL Input array . DCNL axis : int , optional DCNL Axis along which to operate . Default is 0 . Default is 0 . DCNL ddof : int , optional DCNL Axis along which to compute the error . Default is 0 . DCNL nan _ policy : float , optional DCNL Axis along which to compute the error . Default is 0 . DCNL Returns DCNL out : ndarray DCNL Array of error values . &apos;
&apos;Open the directory that doesn \ &apos; t exist yet . DCNL If the path is not a directory , it will be created if it doesn \ &apos; t exist . DCNL Args : DCNL path : The path to the file to open . DCNL Returns : DCNL True if the file is open , False otherwise . &apos;
&apos;Return the volume ( s ) for the specified VM . DCNL vm \ _ DCNL The VM to get the volume from . &apos;
&apos;Encode a list of tokens . DCNL : param tokens : A list of tokens . DCNL : type tokens : list ( str ) DCNL : param sent : DCNL : type sent : DCNL : return : DCNL : rtype : &apos;
&apos;Install or upgrade setuptools and EasyInstall&apos;
&apos;Change a dictionary of files to a file DCNL Parameters DCNL fname : str DCNL Absolute path to the file / directory DCNL prefix : string DCNL Characters to prepend to the file DCNL suffix : string DCNL Characters to prepend to the file DCNL use _ ext : boolean , optional DCNL Whether to replace the file name or not . Default is False . DCNL use _ ext : bool , optional DCNL If True , use the absolute path to the file path . DCNL use _ ext : bool , optional DCNL If True , then the file will be added to the file . DCNL use _ ext : bool , optional DCNL If True , then the file will be added to the file . DCNL use _ ext : bool DCNL If True , use the absolute path to the output directory . &apos;
&apos;given a course , create a new dashboard on the course . DCNL Arguments : DCNL request ( HttpRequest ) DCNL course ( CourseDescriptor ) : the course to create . DCNL course ( User ) : The course to check for . DCNL coach ( bool ) : If true , the course will be deleted from the course . DCNL Returns : DCNL None&apos;
&apos;Publish a progress bar . DCNL : param * * args : * * kwargs to send in the task DCNL : param kwargs : keyword arguments to send in the scheduler DCNL : returns : None&apos;
&apos;If the URL is a string , return the URL as a string DCNL : param url : URL to query DCNL : type url : str DCNL : return : The URL as string DCNL : rtype : str&apos;
&apos;Removes the files needed for this system DCNL Args : DCNL - ( str ) : the directory to remove DCNL Returns : DCNL str : the path to the directory if it isn \ &apos; t going to be used&apos;
&apos;Returns a boolean indicating whether the descriptor is ready to be read . DCNL This function is meant to be used in a separate thread. it reads from DCNL the file descriptor . DCNL Args : DCNL fd : file descriptor to read from . DCNL readable : File-like object to write to . DCNL error : File-like object to write to . DCNL timeout : int , number of seconds to wait for . &apos;
&apos; .. todo : : DCNL WRITEME properly DCNL Parameters DCNL num _ threads : int DCNL Number of threads to use . DCNL num _ epochs : int DCNL Number of threads to use . DCNL Returns DCNL data : float DCNL The total size of the disk . &apos;
&apos;Test whether a network is available&apos;
&apos;Return async version of grains from the minion datastore DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.get _ pillar&apos;
&apos;Only work on Mac OS&apos;
&apos;Generate a map from existing config objects based on the name of the pool . DCNL If there is no existing config , it will be created . &apos;
&apos;Helper function to retrieve objtype from pillars if objname DCNL is string _ types , used for SupportedLoginProviders and DCNL OpenIdConnectProviderARNs . &apos;
&apos;Strip leading characters in string format . &apos;
&apos;Creates and creates a new index in topological order . This is DCNL used by create _ index and create _ index ( ) . &apos;
&apos;Create a copy of an instance in the specified instance . DCNL If the user does not exist , it will be deleted . &apos;
&apos;Read a line of a file in a ``Valuation`` . DCNL : param s : string to read from DCNL : type s : str DCNL : param encoding : Encoding for the file DCNL : type encoding : int DCNL : param encoding : Encoding for the file DCNL : type encoding : str DCNL : return : list of matching file DCNL : rtype : list ( Concept ) &apos;
&apos;Removes a new list of all defined settings for the given user . &apos;
&apos;Add an element to the pixel . &apos;
&apos;Convert an IPv4 address to an IPv4 address . DCNL : param address : IPv4 address to be converted DCNL : return : IPv4 address as IPv4 or IPv6 address DCNL : rtype : str&apos;
&apos;Check if an interface is enabled . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt -G \ &apos; os _ family : Windows \ &apos; ip.is _ enabled eth0&apos;
&apos;Return adjacency representation of graph . DCNL Parameters DCNL G : graph DCNL A NetworkX graph DCNL attrs : dict , optional DCNL A dictionary of attributes keyed by attribute names . DCNL Returns DCNL G : NetworkX graph DCNL A dictionary keyed by attribute names . DCNL Examples DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; G = nx.Graph ( ) DCNL &gt; &gt; &gt; G.add _ data ( u ) DCNL &gt; &gt; &gt; G = nx.Graph ( ) DCNL &gt; &gt; &gt; G.add _ data ( 2 ) DCNL &gt; &gt; &gt; G.add _ data ( u ) DCNL &gt; &gt; &gt; G = nx.Graph ( ) DCNL &gt; &gt; &gt; G.add _ data ( u ) DCNL &gt; &gt; &gt; G.add _ data ( u ) DCNL &gt; &gt; &gt; G = nx.Graph ( ) DCNL &gt; &gt; &gt; G.add _ data ( u ) DCNL &gt; &gt; &gt; G.add _ data ( u ) DCNL &gt; &gt; &gt; G = nx.Graph ( ) DCNL &gt; &gt; &gt; G.add _ data ( u ) DCNL &gt; &gt; &gt; G.add _ data ( u ) DCNL &gt; &gt; &gt;
&apos;Delete a network or raise if it does not exist . &apos;
&apos;Check the existence of a cron job and check if it \ &apos; s not valid&apos;
&apos;Check that we are frozen based on py2exe&apos;
&apos;Renders the queue for all the tests in the current thread . DCNL This decorator is meant to be used in cron jobs in a separate thread . &apos;
&apos;Return a shallow copy of the API filter for a given volume . DCNL This is used to ensure that the same volume does not exist in DCNL the same volume . &apos;
&apos;Decorator that checks the NumPy array of NumPy arrays . DCNL Args : DCNL err _ msg ( str ) : The error message to check . DCNL verbose ( bool ) : If ``True`` , the conflicting values will DCNL be ignored . DCNL name _ check ( bool , optional ) : If ``True`` , the conflicting values DCNL will be ignored . DCNL accept _ error ( bool , optional ) : If ``True`` , the error is raised . DCNL accept _ error ( bool , optional ) : If ``True`` , the error is raised . DCNL accept _ error ( bool ) : If ``True`` , raises the error if ``xp`` is ``numpy`` or ``cupy`` . DCNL .. seealso : : : func : `cupy.testing.assert _ array _ less`&apos;
&apos;dump当前状态到文件 DCNL : param cert _ verify _ cookie : Response object DCNL : param flask _ request : Response object DCNL : param flask _ request : Response object DCNL : return : dict&apos;
&apos;Get a set of fake operations used by the tests . DCNL This function is meant to be used in combination with a DCNL different set of combinations of Review Board . For example , DCNL if you need to generate a reference for a different location of DCNL the model class . DCNL For example , if you want to generate a set of combinations of DCNL combinations of interacting with a different location . This function is DCNL used to make sure that the reference point is used . DCNL For now , we need to set the reference to a factor of the DCNL parameters used by the tests . DCNL For example , you need to generate a set of combinations of the DCNL combinations ( in seconds ) of the model defined by the DCNL : class : `User Guide &lt; univariate _ feature &gt; ` . DCNL Arguments : DCNL - parameters : the number of iterations to use . Defaults to 1 . DCNL - parameters : the number of iterations to use . Defaults to 1 . DCNL - ``exclude _ millis : How many times to set the number of times
&apos;Format a message string and print a traceback object . &apos;
&apos;Given a set of names , returns a list of ( name , data ) tuples DCNL that can be used to make sure that all combinations of DCNL objects are mapped to the given number of objects . DCNL Returns a list of ( name , column _ idx ) pairs . DCNL Notes DCNL This function is used to make sure that all combinations of DCNL objects are mapped to a specific set of types ( see DCNL https : / / github.com / astropy / astropy / issues / issues / 1312.1476935 . DCNL Parameters DCNL closed : list of numpy arrays DCNL a list of ( name , column ) pairs DCNL density : instance of ( name , column ) pairs DCNL density : instance of ( name , column ) pairs DCNL random _ state _ names : bool , optional ( default = None ) DCNL Column name for the type of frame objects . DCNL r _ idx _ names : int , optional DCNL Column name for the type of frame objects . DCNL r _ idx _ names : int , optional DCNL Column index
&apos;Check if the review type is approved . DCNL If there is no review type , then attempt to find the review type . &apos;
&apos;postreleaser.middle _ version to set the timezone from the package _ version string . &apos;
&apos;Run the idle time until the current greenlet is running . DCNL : param priority : Priority of this function . DCNL : return : True if successful , otherwise False . DCNL : rtype : bool DCNL : raises : * * IOError * * if the current greenlet is not met . &apos;
&apos;Inject Subreddits by name into the index&apos;
&apos;Documents the custom method to create a custom method DCNL : param section : The section to write to . DCNL : param method _ name : The name of the method to write . DCNL : param method : The method to write the method to . &apos;
&apos;Create a random seed for the given number or seed . DCNL Parameters DCNL rng _ or _ seed : ``numpy.random`` or a : class : `numpy.random.RandomState` instance DCNL The RNG object to use for the rng or seed . DCNL default _ seed : int , optional DCNL The default seed for which to seed the rng or seed . DCNL default _ method : callable , optional DCNL A constructor for which to seed the RNG object . DCNL constructor : bool , optional DCNL If True , the default method will be used to seed the RNG . DCNL constructor : bool , optional ( default = None ) DCNL If not None , the default method will be used to seed the RNG . DCNL Returns DCNL rng : RNG object or None DCNL A random seed for the rng or seed . DCNL Examples DCNL &gt; &gt; &gt; rng _ or _ seed ( \ &apos; random _ seed \ &apos; , default _ seed = \ &apos; random _ seed \ &apos; ) DCNL \ &apos; rng _ or _ seed \ &apos; DCNL &gt; &gt; &gt; make _ rng ( rng _
&apos;Inverts a dictionary . DCNL : param d : The dictionary to invert . DCNL : type d : dict DCNL : return : The original dictionary . &apos;
&apos;Generator that yields a list of matching pattern from a pattern . DCNL : param pattern : Glob pattern with wildcards . DCNL : type pattern : ``str`` DCNL : rtype : Iterator over tokens . &apos;
&apos;Return a list of all tags for the given tag . DCNL This is a convenience method for doing a delete of the given group . DCNL : param cls : The SQLAlchemy model for which to get the tags for . DCNL : param instance : The model that will be used for the user . DCNL : param instance : The instance of the model . DCNL : param extra _ filters : A list of filters to pass to the action . DCNL : returns : A list of ( user , tag ) for the given tag . &apos;
&apos;Return the Mandelbrot set of a given app . DCNL : param app : The application to register . DCNL : type app : str DCNL : return : The currency code . DCNL : rtype : babel.Locale&apos;
&apos;Attempts to add a constant mode , returning the appropriate mode . DCNL For example , if mode = \ &apos; alpha \ &apos; , \ &apos; constant \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , DCNL \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , DCNL \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , DCNL \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \
&apos;Create an array of the given * objects * of the given * ptr * . DCNL If an array is passed , an array is returned . DCNL Parameters DCNL arr : array _ like DCNL The data to be converted to a NumPy array . DCNL Returns DCNL obj : array DCNL An array of shape ( n _ samples , n _ times ) . DCNL Raises DCNL TypeError DCNL If an array is not an array of shape ( N , N ) where an array DCNL is an array of the same shape as an array . &apos;
&apos;Return a simple version of the JavaScript i18n functions . &apos;
&apos;Convert an absolute path to an absolute path to its canonical path DCNL ( e.g. , \ &apos; / \ &apos; , \ &apos; D \ &apos; , \ &apos; D \ &apos; , \ &apos; / path / \ &apos; ) . Returns an empty string if DCNL the path is not found . &apos;
&apos;Test either if an error is raised with wrong NN object&apos;
&apos;Show the details of a given virtual machine . DCNL The action is created by the `monitor _ id`` argument . &apos;
&apos; .. versionadded : : 2015.8.0 DCNL Attempt to retrieve the value from the named key . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; environ.get foo DCNL salt \ &apos; * \ &apos; pillar.get pkg : apache&apos;
&apos;Get Header Byte 2 ( HDB2 ) &apos;
&apos;Renders the comment in the current context DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL { % comment % } DCNL
&apos;Returns the list of field names for the given parameters . DCNL : param data : DCNL : param param : DCNL : param list : DCNL : param list _ start : DCNL : param sep : DCNL : param sep : DCNL : return : &apos;
&apos;Gets the version of the SDK . DCNL Args : DCNL version : The version of the SDK . DCNL Returns : DCNL The version of the VERSION file . &apos;
&apos;Configures logging to the log file in debug mode . DCNL Args : DCNL use _ syslog ( bool ) : If True , use the default logging config DCNL ( default : False ) . &apos;
&apos;If s is a string , raises a ValueError if the string is not valid . DCNL : param s : DCNL : return : DCNL : rtype : &apos;
&apos;Format an error message from an error message . DCNL : param errors : The error message . DCNL : param index : The index of the error message . DCNL : return : A dictionary containing the information about the error . &apos;
&apos;Perform a debug message if it doesn \ &apos; t exist . DCNL Attempts to parse the result as a dictionary with the following keys : DCNL argv = &#91; DCNL \ &apos; DEBUG \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , DCNL \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , DCNL \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , DCNL \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , DCNL \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR \ &apos; , \ &apos; ERROR
&apos;Create a zipfile in a zip file to the zip archive . DCNL : param zip _ filename : The name of the zip file to be written to . DCNL : type zip _ filename : str DCNL : param base _ dir : The path to the zip file to be written to . DCNL : type base _ dir : str DCNL : param base _ dir : The base directory to write to . DCNL : type base _ dir : str DCNL : param dry _ run : Whether to write the file to the zip file . DCNL : type dry _ run : bool DCNL : return : A path to the zip file . &apos;
&apos;Returns the number of seconds for a client . DCNL Args : DCNL maxint ( int ) : The maximum number of seconds to use . DCNL maxtime ( float ) : The maximum number of seconds to use . DCNL Returns : DCNL An integer . &apos;
&apos;Updates the hash of the named file DCNL : param infile : the name of the file to be updated DCNL : param filename : the name of the file DCNL : return : the updated hash DCNL : rtype : dict&apos;
&apos;Retrieve the user \ &apos; s tenant from the database . DCNL : param entity : DNS name to query . &apos;
&apos;Args : DCNL left ( str ) : The name of the new column . DCNL right ( str ) : The name of the new column . DCNL keys ( str , optional ) : The name of the column to be converted . DCNL join _ column _ name ( str , optional ) : The name of the column to be converted . DCNL col _ name _ name : The name of the column \ &apos; s column name . DCNL col _ name _ map : A dictionary mapping column names to column names . DCNL column _ name _ map : A dictionary mapping column names to column names . DCNL column _ name _ map : A dictionary mapping column names to column names . DCNL column _ name _ map : A dictionary mapping column names to column names . DCNL column _ name _ map : A dictionary mapping column names to column names . DCNL column _ name _ map : A dictionary mapping column names to column names . DCNL column _ name _ map : A dictionary mapping column names to column names . DCNL column _ name
&apos;Elemwise { sub } ( inplace = False ) - &gt; GpuSparseBlockOuter ( inplace = True ) - &gt; SparseBlockOuter ( inplace = True ) &apos;
&apos;Scans the given entry , returns a list of lines . DCNL Args : DCNL entry : a list of ( offset , height ) pairs . DCNL max _ depth : maximum depth of depth DCNL depth : maximum depth of depth ( optional ) DCNL depth : maximum depth of depth ( optional ) DCNL depth : maximum depth of depth ( optional ) DCNL depth : maximum depth of depth ( optional ) DCNL depth : maximum depth of depth ( optional ) DCNL depth : maximum depth of depth ( optional ) DCNL Returns : DCNL A list of tuples containing the results . &apos;
&apos;This is a convenience wrapper for testing . DCNL Parameters DCNL inputs : numpy array DCNL The input data . DCNL num _ classes : int , optional DCNL The number of memory classes to use . Default is 0 . DCNL is _ training : boolean , default True DCNL If True , then the tests will be written to False . DCNL output _ pool : bool , optional DCNL If True , then this will return the default ResNet unit data . DCNL scope : bool , optional DCNL If True , then this function returns True ( default = False ) . DCNL scope : bool , optional DCNL If True , then this function returns True ( default ) . DCNL Defaults to False ( default = False ) . DCNL scope : bool , optional ( default = False ) DCNL If True , then this function returns True ( default = False ) . DCNL scope : bool , optional DCNL If True , then this function returns True ( default = False ) . DCNL Defaults to False ( default = False ) . DCNL Returns DCNL out : float DCNL The
&apos;Create a list of option names to Option instances . &apos;
&apos;Returns True if language is an active language . DCNL If language is not found , return True . DCNL &gt; &gt; &gt; is _ primary _ language ( \ &apos; en _ US \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ primary _ language ( \ &apos; en _ US \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ primary _ language ( \ &apos; en _ US \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ primary _ language ( \ &apos; en _ US \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ primary _ language ( \ &apos; en _ US \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ primary _ language ( \ &apos; en _ US \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ primary _ language ( \ &apos; en _ US \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ primary _ language ( \ &apos; en _ US \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ primary _ language ( \ &apos; en _ US \ &apos; ) DCNL True DCNL
&apos;Create a new filter for a given property . DCNL Args : DCNL name : The name of the property . DCNL op : The property that the property should be created . DCNL values : The values of the property . DCNL Returns : DCNL The new property . &apos;
&apos;Return the effective host to use for the request . &apos;
&apos;Enable firewall profile : : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.enabled &lt; service name &gt; DCNL salt \ &apos; * \ &apos; service.enabled &lt; service name &gt; &apos;
&apos;Step that always fails , mostly needed in examples . &apos;
&apos;Downloads an application file with the given path . DCNL Args : DCNL app _ file ( str ) : Path to the application file path to the application DCNL path ( str ) : The path to the application file DCNL path _ path ( str ) : Path to the application path DCNL Returns : DCNL str : Path to the application file DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; tomcat.deploy _ application / tmp / app _ path&apos;
&apos;Directive option utility function . DCNL Return a tuple consisting of ( x1 , y1 , x2 , y2 ) . DCNL Parameters DCNL source : str DCNL The source of the keyword . DCNL start : str DCNL The start of the keyword . DCNL keyword : str , optional DCNL The keyword arguments to use for the keyword argument . &apos;
&apos;Tries to resolve a name \ &apos; s name . &apos;
&apos; .. todo : : DCNL WRITEME properly DCNL Parameters DCNL unique _ rate : int , optional DCNL The size of the table . DCNL fp _ rate : str , optional DCNL The rate of the table . DCNL Returns DCNL size : int DCNL The total size of the table . DCNL Notes DCNL This function is meant to be consistent with the total size of the DCNL individual parameters . &apos;
&apos;Compute the GCD of two univariate polynomials in ` \ mathbb Q ( x ) ` . &apos;
&apos;Write a message to the log file and log it to the current line . &apos;
&apos;Draws a set of epochs ( input _ idx ) from numpy array DCNL Parameters DCNL epoch _ idx : int , optional DCNL Number of epochs to plot DCNL bins _ idx _ idx : int , optional DCNL Number of lines to plot DCNL bins : int , optional DCNL Number of lines to plot DCNL bins : int , optional DCNL Number of lines to plot DCNL bins _ str : int , optional DCNL Number of times to plot DCNL Returns DCNL x : array , shape ( n _ channels , n _ channels , n _ channels , n _ channels ) DCNL To-be-fitted model . DCNL bins : array , shape = ( n _ channels , n _ channels , n _ channels , n _ channels ) DCNL bins : list of ( x , y ) pairs DCNL bins : array , shape ( n _ channels , n _ channels , n _ channels ) DCNL bins : list of tuples , ( n _ channels , n _ channels , n _ channels , n _ channels , n _ channels ) DCNL labels : list of (
&apos;Check that the CUDA driver is consistent with the given name . DCNL Parameters DCNL feature _ name : str DCNL Name of the feature to check . DCNL Returns DCNL bool DCNL Whether or not the CUDA driver is available . &apos;
&apos;Install one or more packages . DCNL Extra * options * may be passed to ``apt-get`` if necessary . &apos;
&apos;Get a specific token DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; keystone.token _ get c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.token _ get profile = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.token _ get profile = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.token _ get profile = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.token _ get profile = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.token _ get profile = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.token _ get profile = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.token _ get profile = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.token _ get profile = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.token _ get profile = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.token _ get profile = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.token _ get profile = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.token _ get profile = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \
&apos;Adds &quot; Vary &quot; header in the given HttpResponse object . DCNL newheaders is a list of header names that should be in &quot; Vary &quot; . Existing DCNL headers in &quot; Vary &quot; aren \ &apos; t removed . &apos;
&apos;Flip the image horizontally . DCNL Args : DCNL image _ data : string , the image data . DCNL output _ encoding : a value from OUTPUT _ ENCODING _ TYPES . DCNL quality : A value from OUTPUT _ ENCODING _ TYPES . DCNL quality : A value from OUTPUT _ ENCODING _ TYPES . DCNL rpc : An optional UserRPC object . DCNL transparent _ substition _ rgb : When transparent pixels are not support in the DCNL destination image , then transparent pixels will be substituted DCNL for the specified color . DCNL transparent _ substition _ rgb : When transparent pixels are not support in the DCNL destination image , then transparent pixels will be substituted DCNL for the specified color . DCNL transparent _ substition _ rgb : When transparent pixels are not support in the DCNL destination image , then transparent pixels will be substituted DCNL for the specified color . DCNL transparent _ substition _ rgb : When transparent pixels are not support in the DCNL destination image , then transparent pixels will be substituted DCNL for the specified color . DCNL transparent _ substition _ rgb : When transparent pixels are
&apos;Signal that the post update is saved or not . &apos;
&apos;Compare the code in the module \ &apos; s code . DCNL : param bytecode _ filename : the name of the code being run . DCNL : type src _ filename : str DCNL : param src _ filename : The filename of the code . DCNL : type src _ filename : str DCNL : rtype : None&apos;
&apos;Plots a configuration file . DCNL Args : DCNL plot _ options _ from _ call _ from _ call : dict , a dict of options . DCNL Returns : DCNL A list of ( channel _ options , option _ options ) . &apos;
&apos;Converts a single dimension into a list of integers . DCNL # Arguments DCNL dim : the dimension of the dimension . DCNL Returns : DCNL A list of shape ( dim , dim ) where each dimension is a single dimension DCNL of the dimension dim &#91; 0 &#93; . DCNL Raises : DCNL ValueError : if `dim _ ordering` is neither `tf` or `th` . &apos;
&apos;Create the version of the LTI launch . DCNL If the addon is not specified , it will create the new version DCNL for the LTI launch . &apos;
&apos; &gt; &gt; &gt; list _ list _ removed ( &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL \ &apos; \ &apos; DCNL &gt; &gt; &gt; list _ list _ removed ( &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL \ &apos; \ &apos; DCNL &gt; &gt; &gt; list _ list _ removed ( &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL \ &apos; \ &apos; DCNL &gt; &gt; &gt; list _ list _ removed ( &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL \ &apos; \ &apos; DCNL &gt; &gt; &gt; list _ list _ removed ( &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL \ &apos; \ &apos; DCNL &gt; &gt; &gt; list _ list _ removed ( &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL \ &apos; \ &apos; DCNL &gt; &gt; &gt; list _ list _ removed ( &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL \
&apos;Return the workspace name for the workspace . DCNL : param bool verbose : If True , only workspaces to be shown . DCNL : param bool strip : DCNL If True , only workspaces to be shown . Default is False . DCNL : param bool strip : DCNL If True , only workspaces to be shown . Default is False . DCNL Highlight groups used : ``workspace`` or ``workspace _ visible`` , ``workspace`` or ``workspace _ focused`` , ``workspace`` or ``workspace _ focused`` , ``workspace`` or ``workspace _ focused`` , ``workspace`` or ``workspace _ focused`` , ``workspace`` or ``Highlight groups used : ``workspace`` or ``Highlight groups used : ``workspace`` or ``Highlight groups : ``builder`` . DCNL : param bool strip : DCNL If True , only workspaces to be shown . Default is False . DCNL : param bool strip : DCNL If True , then all workspaces to be shown . Default is False . DCNL Highlight groups used : ``workspace`` or ``workspace _ visible`` , ``workspace`` or ``workspace _ focused`` , ``workspace`` or ``focused`` ,
&apos;Writes the list of Feed objects to a Bokeh feed . DCNL Args : DCNL file _ obj : The object to write to . DCNL Returns : DCNL A list of lists of newly created feed objects . &apos;
&apos;Compute the factorial of an integer . DCNL Examples DCNL &gt; &gt; &gt; from sympy import Symbol DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; factorial ( 0.1 ) DCNL Traceback ( most recent call last ) : DCNL ExactQuotientFailed : &#91; 0 , 0 , 0 &#93; does not divide &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
&apos;Writes the fasta file for each file in fasta file . DCNL mapping _ file : list of fasta file objects DCNL fasta _ files : list of fasta file objects DCNL fasta _ files : list of fasta files to write to DCNL output _ dir : file name of fasta file to write to DCNL keep _ bc _ errors : if True , write corrected barcode files in fasta file DCNL write _ bc _ errors : if True , write corrected barcode files in fasta file DCNL write _ bc _ errors : if True , write corrected barcode files in fasta file DCNL write _ bc _ errors : if True , write corrected barcode files in fasta file DCNL write _ bc _ errors : if True , write corrected barcode files in fasta file DCNL write _ bc _ errors : if True , write corrected barcode files in fasta file DCNL write _ bc _ errors : if True , write corrected barcode files in fasta file DCNL write _ bc _ errors : if True , write corrected barcode files in fasta file DCNL write _ bc _ errors : if
&apos;Prompts the password for a password . &apos;
&apos;Make a network network with ip addresses . DCNL : param port : Port to convert DCNL : param network : network network ( ipv4 or ipv6 ) DCNL : return : ip of ip in network ( ipv4 or ipv6 ) DCNL : rtype : str&apos;
&apos;Convert text to a unicode string . If `text` is a Unicode string , DCNL it will be converted to unicode . DCNL &gt; &gt; &gt; makeUnicode ( u \ &apos; abc \ 0d \ &apos; ) DCNL u \ &apos; abc \ 0d \ &apos; DCNL &gt; &gt; &gt; makeUnicode ( u \ &apos; abc \ 0d \ &apos; ) DCNL u \ &apos; abc \ 0d \ &apos; DCNL &gt; &gt; &gt; makeUnicode ( u \ &apos; abc \ 0d \ &apos; ) DCNL u \ &apos; abc \ 0d \ &apos; DCNL &gt; &gt; &gt; makeUnicode ( u \ &apos; abc \ 0d \ &apos; ) DCNL u \ &apos; abc \ 0d \ &apos; DCNL &gt; &gt; &gt; makeUnicode ( u \ &apos; abc \ 0d \ &apos; ) DCNL u \ &apos; abc \ 0d \ &apos; DCNL &gt; &gt; &gt; makeUnicode ( u \ &apos; abc \ 0d \ &apos; ) DCNL u \ &apos; abc \ 0d \ &apos; DCNL &gt; &gt; &gt; makeUnicode ( u \ &apos; abc \ 0d \ &apos; ) DCNL u \ &apos; abc \ 0d \ &apos; DCNL &gt; &gt;
&apos;Monitor the connection to the server . DCNL This function will be called when the connection is exceeded . DCNL .. code-block : : yaml DCNL beacons : DCNL journald : DCNL junos : DCNL - zsh DCNL - priv _ ip DCNL .. code-block : : yaml DCNL beacons : DCNL junos : DCNL - zsh DCNL - priv _ uuid DCNL .. code-block : : yaml DCNL beacons : DCNL junos : DCNL - zsh DCNL - priv _ ip DCNL .. code-block : : yaml DCNL beacons : DCNL journald : DCNL junos : DCNL - zsh DCNL - priv _ ip DCNL .. code-block : : yaml DCNL beacons : DCNL junos : DCNL - zsh DCNL - priv _ ip DCNL .. code-block : : yaml DCNL beacons : DCNL junos : DCNL - zsh DCNL - priv _ ip DCNL .. code-block : : yaml DCNL beacons : DCNL junos : DCNL - zsh DCNL - priv _ uuid DCNL .. code-block : : yaml DCNL beacons : DCNL journald : DCNL junos : DCNL - zsh DCNL - priv _ ip DCNL .. code-block : : yaml DCNL beacons : DCNL diskusage :
&apos;Detects the URL of the current file . If the URL is not a file , DCNL then the entire file will be searched . &apos;
&apos;Wait for a connection to the server . DCNL : param client : The client to wait for . DCNL : type client : str DCNL : param host : Port to connect to DCNL : type host : str DCNL : param port : Port to connect to DCNL : type port : int DCNL : param password : Password for the server DCNL : type password : str DCNL : param timeout : Timeout in seconds DCNL : type timeout : int DCNL : param timeout : Timeout in seconds DCNL : type timeout : int DCNL : param timeout : Timeout in seconds DCNL : type timeout : int DCNL : param timeout : Timeout in seconds DCNL : type timeout : int DCNL : param timeout : Timeout in seconds DCNL : type timeout : int DCNL : param timeout : Timeout in seconds DCNL : type timeout : int DCNL : param timeout : Timeout in seconds DCNL : type timeout : int DCNL : param timeout : Timeout in seconds DCNL : type timeout : int DCNL : param timeout : Timeout in seconds DCNL : type timeout : int DCNL : param timeout
&apos;Sample from a large HDF5 file DCNL Parameters DCNL file : instance of numpy array DCNL The file to load data from . DCNL type : str , optional DCNL The type of data to load data from . See the DCNL documentation for more information for more information . &apos;
&apos;Get the SendGrid notification service . &apos;
&apos;Given a package list , return the data for the package . &apos;
&apos;copy data from file-like object fsrc to file-like object fdst&apos;
&apos;Training Controller - unfiltered version&apos;
&apos;This function is used to download a model class . DCNL This method is meant to be used in a web layer , but it \ &apos; s not particularly DCNL needed because we don \ &apos; t need to do this one . DCNL : param request : request context DCNL : type request : django.http.request.HttpRequest &#124; None DCNL : param model : Request model DCNL : type model : dict DCNL : param template : Model instance DCNL : type template : dict DCNL : param template : Model instance DCNL : type template : dict DCNL : return : Tuple of ( model , model , context ) DCNL : rtype : dict&apos;
&apos;Execute command in a subshell , return stdout . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; nxos.cmd run _ cmd cmd = \ &apos; ls -l / etc \ &apos; &apos;
&apos;Make sure a test is used for testing . DCNL https : / / github.com / astropy / astropy / issues / 2346 DCNL https : / / github.com / astropy / astropy / issues / 2346 . &apos;
&apos;Fetch data from a URL . DCNL @ param url : URL to attempt to open DCNL @ type url : basestring DCNL @ param config : SSL context DCNL @ type config : basestring DCNL @ param output _ file : file config file DCNL @ type output _ file : str DCNL @ param data : file data DCNL @ type output _ file : str DCNL @ return : data retrieved from a file DCNL @ rtype : L { str } &apos;
&apos; : param func : the function to decorate DCNL : type func : function DCNL : return : the decorated function DCNL : rtype : C { func } &apos;
&apos;Computes the softmax . DCNL Parameters DCNL X : array _ like , shape ( n _ samples , n _ features ) DCNL Array of shape ( n _ samples , n _ features ) . DCNL copy : bool , optional DCNL Whether to copy the output of X. DCNL Returns DCNL rval : array , shape ( n _ samples , n _ features ) DCNL The transformed data . &apos;
&apos;Make sure text is scratch . &apos;
&apos;Balance Of Power&apos;
&apos;Returns a iso8601 formated date from a timestamp . &apos;
&apos;Execute the given array and return the results . DCNL Parameters DCNL args : list DCNL The arguments to diff . DCNL kwargs : dict DCNL Additional keyword arguments to pass to the results . DCNL Returns DCNL results : dict DCNL A list of lists of the following parameters . DCNL Examples DCNL &gt; &gt; &gt; from Bio import diff DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; diff = diff ( \ &apos; \ &apos; ) DCNL &gt; &gt; &gt; diff ( \ &apos; abcd \ &apos; ) DCNL \ &apos; two \ &apos; DCNL &gt; &gt; &gt; diff ( \ &apos; abcd \ &apos; ) DCNL \ &apos; two \ &apos; DCNL &gt; &gt; &gt; diff ( \ &apos; abcd \ &apos; ) DCNL \ &apos; two \ &apos; DCNL &gt; &gt; &gt; diff ( \ &apos; abcd \ &apos; ) DCNL \ &apos; \ &apos; DCNL &gt; &gt; &gt; diff ( \ &apos; abcd \ &apos; ) DCNL \ &apos; two \ &apos; DCNL &gt; &gt; &gt; diff ( \ &apos; abcd \ &apos; ) DCNL \ &apos; \ &apos; DCNL &gt; &gt; &gt; diff ( \ &apos; \ &apos; .join (
&apos;Args : DCNL diffs ( list ) : DCNL The list of lines to exclude . DCNL lines _ data ( list ) : The list of lines to exclude . DCNL combinations _ data ( list ) : The data to be included in the diff . DCNL Returns : DCNL A list of ( lineno , count _ chunks ) tuples . Each element in the DCNL &#91; i &#93; is a list of ( new _ chunks , * * kw ) . DCNL Examples : DCNL &gt; &gt; &gt; from jinja2 import Add _ fragments _ &quot; DCNL &gt; &gt; &gt; s = &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; next _ bc = &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; next
&apos;Send a &quot; Magic Packet &quot; to wake up a Minion DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.wol 08-00-27-13-69-77 DCNL salt-run network.@@
&apos;Replaces special characters in the command with the given command name . DCNL Example : DCNL &gt; &gt; &gt; _ escape _ command ( &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; &#93; ) DCNL \ &apos; / foo / bar \ &apos; DCNL &gt; &gt; &gt; _ escape _ command ( \ &apos; / foo / bar \ &apos; ) DCNL \ &apos; / foo / bar \ &apos; DCNL &gt; &gt; &gt; _ escape _ command ( \ &apos; / foo / bar \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ escape _ command ( \ &apos; / foo / bar \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ escape _ command ( \ &apos; / foo / bar \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ escape _ command ( &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; &#93; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ escape _ command ( \ &apos; / foo / bar \ &apos; ) DCNL \ &apos; a \ &apos; DCNL
&apos;Convert a string to an integer . DCNL Parameters DCNL s : str DCNL The string to convert . DCNL Returns DCNL int DCNL The integer . &apos;
&apos;Build a list of information about the files in the given DCNL distribution . DCNL This is useful for unit tests . DCNL : param FilePath path : The path to the Java source file . DCNL : param list _ paths : The list of paths to be parsed . DCNL : param clean _ build : A list of paths containing the files in the DCNL configuration file . DCNL : return : A tuple of ( path , path , path ) where each of the DCNL Distribution is installed in the test . DCNL : raises : * * IOError * * if the file could not be found . &apos;
&apos;Return the location of the image in the given image . DCNL : param context : The context DCNL : param image _ id : The id of the image DCNL : return : the location of the image DCNL : rtype : Boolean&apos;
&apos;Parameters DCNL fname _ data : string DCNL The data to be tested . DCNL Returns DCNL statistic : float DCNL The test statistic . DCNL pval : float DCNL The data matrix . &apos;
&apos;Create a list of TrackInfo objects for a given track ID . DCNL : param track _ id : ID of the track . DCNL : type track _ id : int DCNL : param values : the track ID ( optional ) DCNL : type values : int DCNL : return : a list of TrackInfo objects DCNL : rtype : dictionary&apos;
&apos;Take a ``K &#91; X &#93; `` polynomial in ``K &#91; X &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys import ring , ZZ DCNL &gt; &gt; &gt; R , x , y = ring ( &quot; x , y &quot; , ZZ ) DCNL &gt; &gt; &gt; dmp _ swap ( f , 1 , ZZ ) DCNL &#91; &#91; 1 , 2 &#93; , &#91; 2 , 2 &#93; &#93; &apos;
&apos;Generate a dataset . DCNL Parameters DCNL filename : str DCNL Name of the file to generate . DCNL numSequences : how many sequences to generate DCNL elementsPerSeq : length of each sequence DCNL numRepeats : how many times to repeat each sequence in each sequence DCNL numRepeats : how many times to repeat each sequence in each sequence DCNL numRepeats : how many times to repeat each sequence in each sequence DCNL numRepeats : how many times to repeat each sequence in each sequence DCNL numRepeats : how many times to repeat each sequence in each sequence DCNL numRepeats : how many times to repeat each sequence in each sequence&apos;
&apos;Return package version as listed in ` _ _ version _ _ ` in ` _ _ init _ _ .py` . &apos;
&apos;Given a valid region name , return a DCNL : class : `boto.sdb.connection.SDBConnection`. DCNL : type : str DCNL : param region _ name : The name of the region to connect to . DCNL : rtype : : class : `boto.ec2.autoscale.AutoScaleConnection` DCNL : return : A connection to the given region , or None if an invalid region DCNL name is given&apos;
&apos;Get the set of columns from table to the given table . DCNL Parameters DCNL table : instance of : class : ` ~ tensor.TensorVariable` DCNL The table to be converted to . DCNL labels : dict DCNL A list of ( name , value ) pairs for each column variable . DCNL Examples DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; s = &#91; ( \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) , ( \ &apos; x \ &apos; , \ &apos; d \ &apos; ) , ( \ &apos; x \ &apos; , \ &apos; d \ &apos; ) , ( \ &apos; x \ &apos; , \ &apos; d \ &apos; ) , ( \ &apos; x \ &apos; , \ &apos; d \ &apos; ) , ( \ &apos; x \ &apos; , \ &apos; d \ &apos; ) ) DCNL &gt; &gt; &gt; print
&apos;Create a new resource name based on the creation _ name . DCNL The callback will be used to ensure that the capacity may be created DCNL in the fly . DCNL : param prefix : name prefix for the resource being created DCNL : type prefix : str DCNL : param creation _ func : callback function to create the property on DCNL : type creation _ func : callable DCNL : param kwargs : additional keyword arguments to be used DCNL : param kwargs : keyword arguments passed to this method DCNL : param kwargs : keyword arguments passed to this method DCNL : param kwargs : keyword arguments passed to this method DCNL : param kwargs : keyword arguments passed to this method DCNL : param kwargs : keyword arguments passed to this method DCNL : param kwargs : keyword arguments passed to this method DCNL : param kwargs : keyword arguments passed to this method DCNL : param kwargs : keyword arguments passed to this method DCNL : param kwargs : keyword arguments passed to this method DCNL : param kwargs : keyword arguments passed to this method DCNL : param kwargs : keyword arguments passed
&apos;Test that data data is a numpy array . DCNL Regression test for https : / / github.com / astropy / astropy / pull / 160&apos;
&apos;Generate a list of all available images . &apos;
&apos;Return ceil ( n * * n + 1 ) / 2 * * n + 1 / 2 * b ( n * * 2 * * 2 ) . DCNL If b is a positive integer , it \ &apos; s guaranteed to be zero . &apos;
&apos;The restful handler for a service . DCNL Templates : ``groups / service _ form.html`` DCNL Context : DCNL service _ id DCNL Group object DCNL response _ format DCNL List of resource form ( e.g. \ &apos; Hello _ World \ &apos; , \ &apos; html \ &apos; ) &apos;
&apos;Adds a \ &apos; send _ send \ &apos; task into the task queue . DCNL Args : DCNL user _ id : str . The user id . DCNL reference : FeedbackMessageReference . The exploration to be notified . DCNL new _ status : str . The new status . &apos;
&apos;Test that we can \ &apos; t crash when any socket objects are closed . DCNL This ensures that things like : class : ` ~ chainer.Variable` objects are DCNL used by `close _ connections ( ) ` . &apos;
&apos;Error checking if expression is an integer expression . DCNL Args : DCNL expression : The expression to check . &apos;
&apos;gethostbyname ( host ) - &gt; ( host , aliaslist , addresslist ) DCNL Return the host name , a list of aliases , and a list of IP addresses , DCNL and a list of IP addresses . The host is a string giving a host name , DCNL or a list of IP addresses . The host is a string giving a host name , DCNL or a string . The host is a string giving the IP address and a string . The DCNL host is a string giving a host name , or a list of IP addresses . DCNL The host is a string giving the IP address , or a list of IP addresses , DCNL or a list of IP addresses . The host is a string giving a host name , DCNL or a list of IP addresses . The host is a string giving a host name , DCNL or a list of IP addresses . The host is a string giving a host name , DCNL or a string . The host is a string giving the name of the host . The DCNL host is a string giving
&apos;Yield successive n-sized chunks from start , end . DCNL @ param space : the address space DCNL @ param start : Start address DCNL @ param length : length&apos;
&apos;Ensure that path is relative to the operating system . DCNL If the path is not already a relative path , it will be converted to DCNL a relative path . &apos;
&apos;Add the x element for the loops . &apos;
&apos;Returns a ``NodeSize`` object for a given cache key . DCNL : param cache _ key : The cache key DCNL : type cache _ key : ``str`` DCNL : rtype : Bytestrings&apos;
&apos;A synonym for : func : `joinedload _ load ( ) `&apos;
&apos;List all environment modules from a master DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; cp.list _ env DCNL salt \ &apos; * \ &apos; cp.list _ environment&apos;
&apos;Read a reflog line . DCNL : param f : File-like object to read DCNL : return : Tuple of ( old , new ) &apos;
&apos;Check for \ &apos; \ &apos; in \ &apos; \ &apos; in \ &apos; \ &apos; . &apos;
&apos;Translate a sequence of strings into a double quotation mark . DCNL A literal string is interpreted as a double quotation mark . DCNL ( Directive option conversion function . DCNL Example DCNL &gt; &gt; &gt; from sympy.abc import A , b DCNL &gt; &gt; &gt; env ( &#91; 1 , 2 , 3 &#93; ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; print ( 1 ) DCNL 1 DCNL &gt;
&apos;Helper for quickly adding a StreamHandler to the logger . Useful for DCNL debugging . &apos;
&apos;Checks if two URLs are the same as the same \ &apos; same-origin \ &apos; &apos;
&apos;Generate a random threshold from a Gaussian distribution . DCNL Parameters DCNL a : array-like , shape ( n _ samples , n _ features ) DCNL The sampling frequency . DCNL bins : int , optional DCNL The number of bins to use . Default is None . DCNL Returns DCNL out : ndarray , shape ( n _ samples , n _ features ) DCNL The input data . DCNL pvalue : float DCNL The number of bins in the test . DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . DCNL Examples DCNL &gt; &gt; &gt; from scipy import test DCNL &gt; &gt; &gt; from scipy import test DCNL &gt; &gt; &gt; from scipy import test DCNL &gt; &gt; &gt; from scipy import test DCNL &gt; &gt; &gt; from scipy import test DCNL &gt; &gt; &gt; from scipy import test DCNL &gt; &gt; &gt; from scipy import test DCNL &gt; &gt; &gt; from scipy import test DCNL &gt; &gt; &gt; from scipy import test _ filters DCNL &gt; &gt; &gt; from scipy import test _ filters DCNL &gt; &gt; &gt;
&apos;Checks if the given plugin is a valid plugin name and returns the DCNL names of the objects for the given name . DCNL Parameters DCNL name : string DCNL The name of the plugin to register . DCNL name : string , optional DCNL The name of the plugin to register . DCNL Returns DCNL name : str DCNL The name of the plugin that will be loaded from the module . &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 326&apos;
&apos;Return the filename of the file based on the filename of the file . &apos;
&apos;OSX uses a command in a subprocess , return a list of ( cmd , cmd ) DCNL for the given command . &apos;
&apos;Make sure a text is a JSON response . &apos;
&apos;Execute a function with arguments and return the results DCNL USAGE : DCNL .. code-block : : yaml DCNL run _ fun : DCNL local.cmd : DCNL - tgt : \ &apos; * \ &apos; DCNL - func : test.ping DCNL - require : DCNL - require : DCNL - run : True&apos;
&apos;Format a list of entries from a list of entries . DCNL Depending on the format , the prefix is a string , or a dictionary of DCNL entries that contain a colon separated string or a string . If the DCNL entry is a string , a dictionary will be returned . If the key is not a DCNL string , a dictionary will be returned . &apos;
&apos;Base64 encodes a string . DCNL &gt; &gt; &gt; b64d ( \ &apos; a / b \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; b64d ( \ &apos; a / b \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; b64d ( \ &apos; a / b \ &apos; ) DCNL \ &apos; a \ &apos; &apos;
&apos;Gets the column name for a given column . DCNL Arguments : DCNL parent ( str ) : The parent model to use . DCNL col ( str ) : The name of the column to be converted . DCNL col _ col _ name : The column name to use for the columns . DCNL Returns : DCNL The column name of the column . &apos;
&apos;Evaluates the CDF of the normal distribution . DCNL Parameters DCNL cdf : float DCNL The CDF of the normal distribution . DCNL prototype : bool , optional DCNL If True , then the normal distribution will be evaluated . DCNL transform : bool , optional DCNL If True , use the standard deviation for the normal distribution . DCNL options : dict , optional DCNL Extra options to pass to the normal distribution . DCNL options : dict , optional DCNL Extra options to pass to the function . DCNL Returns DCNL float : float DCNL The CDF of the normal distribution . &apos;
&apos;Fix the tables for all tables . This is used to make sure that DCNL the database doesn \ &apos; t exist . &apos;
&apos;Parse a query given as a string argument . If keep _ blank _ values is True , DCNL the default value indicates that blanks should be retained as DCNL blank strings . If keep _ blank _ values is True , the default value is DCNL ignored . &apos;
&apos;Dispatches the given object and returns the response as a JSON string . DCNL If no request is given , the message will be updated with the same DCNL endpoint as well . DCNL Args : DCNL input _ path ( str ) : Path to the request DCNL input _ path ( str ) : Path to the request DCNL method ( str ) : The response to send in the request DCNL Returns : DCNL A Response object with the updated content and returns the response . &apos;
&apos;Recursively check sequences of fasta labels . DCNL fasta _ out : list of fasta labels DCNL fasta _ files : list of fasta labels DCNL fasta _ files : list of fasta labels DCNL barcode _ len : list of sequences DCNL barcode _ len : list of barcode sequences DCNL keep _ primer _ lens : list of barcode sequences DCNL max _ primer _ mismatches : Number of mismatches allowed in reverse primer sequences DCNL max _ primer _ mismatches : Number of mismatches allowed in reverse primer sequences DCNL max _ primer _ mismatches : Number of mismatches allowed in barcode . DCNL max _ primer _ scores : Number of mismatches allowed in barcode . DCNL max _ primer _ scores : Number of mismatches allowed in barcode . DCNL max _ primer _ scores : Number of mismatches allowed in barcode . DCNL max _ primer _ scores : Number of mismatches allowed in barcode . DCNL max _ primer _ scores : Number of mismatches allowed in barcode . DCNL max _ primer _ scores : Number of mismatches allowed in barcode . DCNL max _ primer _ scores : Number of mismatches
&apos;Test that join _ groups can be submitted by the right DCNL part of the right tables . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 326&apos;
&apos;efficient function to uniquify a list preserving item order&apos;
&apos;Return a list of all ESXi machines available in the given request . DCNL This function checks whether all the services are configured to be used DCNL in the vCenter server to use for the ESXi host . &apos;
&apos;Test the object properties on an existing object . &apos;
&apos;A helper function to make sure that the user has a custom user \ &apos; s DCNL filesystem . DCNL This function is used to simplify tests that don \ &apos; t have the same DCNL functionality of this function . It is meant to be used in combination with DCNL the following : DCNL https : / / github.com / andresriancho / w3af / issues / 322346614&apos;
&apos;Given a module path and a module name , return a list of all the DCNL modules found in the module . DCNL If the module is not a module or a module name , then it is DCNL returned . DCNL : param path : the path to a Python module . DCNL : return : a list of ( module , module ) where each module is a DCNL module name and a module name . &apos;
&apos;Convert a bunch of numbers into &#91; 0,1 &#93; to &#91; 0,1 &#93; . DCNL Parameters DCNL proto : list DCNL A list of numbers . DCNL Returns DCNL product : list DCNL A list of numbers . DCNL Examples DCNL &gt; &gt; &gt; from sympy.matrices import daily _ product DCNL &gt; &gt; &gt; m = &#91; &#91; 1 , 2 , 3 &#93; &#93; DCNL &gt; &gt; &gt; max _ return = &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; numpy.allclose ( 10 , &#91; 7 , 7 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; numpy.allclose ( 10 , &#91; 7 , 7 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos;Returns True if the tree is in a tree . DCNL Arguments : DCNL course ( CourseDescriptor ) : a course . DCNL Returns : DCNL True if the tree is in the tree . &apos;
&apos;Return a string with the arguments , \ &apos; text \ &apos; , or an empty string . &apos;
&apos;Returns a group detail page . DCNL Templates : ``groups / topics / topic _ detail.html`` DCNL Context : DCNL group DCNL Group object DCNL topic DCNL GroupTopic object&apos;
&apos;Delete all files and all files in a list of files . DCNL : param clean _ run : If True , all files will be cleaned up . DCNL : param dry _ run : If True , all files will be removed upon exit . &apos;
&apos; : param response : The response to retrieve CORS headers from DCNL : param key : The header key to retrieve DCNL : return : A tuple of ( key , value ) tuple with the header names removed&apos;
&apos;Check that the file does not contain the filename to the upload . &apos;
&apos;Test if a plugin is saved . DCNL This is used to test the test if the plugin is not in the DCNL plugin . DCNL : param name : The name of the plugin to check DCNL : param tests : A list of test names DCNL : param test _ plugin : A function that takes a list of plugin names and DCNL will be saved to the test . DCNL : param fail _ missing _ meta : If true , the plugin will be deleted when DCNL the plugin should be deleted . &apos;
&apos;Calculate the logging configuration of a normal distribution . DCNL This function should not be used to create a simple operation . DCNL : return : The variance of the normal distribution . &apos;
&apos;Compile a function of a function , returning a list of compiled patterns . &apos;
&apos;Distance from line to point DCNL line is a tuple of ( x1 , y1 , x2 , y2 ) DCNL line _ list is a tuple of points ( x1 , y1 , x2 , y2 ) &apos;
&apos;Validate the configuration and return a DD-WRT scanner . &apos;
&apos;Return the Windows NIC based on Windows DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; timezone.get _ conf DCNL salt \ &apos; * \ &apos; timezone.get _ conf family = ipv6&apos;
&apos;Compute a general Hankel transform DCNL &gt; &gt; &gt; fourier _ transform ( cos ( x ) * * 2 , x , k ) DCNL ( x * * 2 + 1 ) DCNL &gt; &gt; &gt; fourier _ transform ( exp ( cos ( x * * 2 ) ) DCNL ( x * * 2 + exp ( x * * 2 ) ) DCNL &gt; &gt; &gt; fourier _ transform ( cos ( x * * 2 + sqrt ( x * * 2 ) ) DCNL ( x * * 2 + exp ( x * * 2 ) ) DCNL &gt; &gt; &gt; fourier _ transform ( cos ( x * * 2 + sqrt ( x * * 2 ) ) DCNL ( x * * 2 + exp ( x * * 2 ) ) DCNL &gt; &gt; &gt; fourier _ transform ( cos ( x * * 2 + sqrt ( x * * 2 ) ) DCNL ( x * * 2 + exp ( x * * 2 ) ) DCNL &gt; &gt; &gt; fourier _ transform ( cos ( x * * 2 , x * * 2
&apos;Generate a dict describing a set of configuration fields . DCNL Parameters DCNL model : dict DCNL A dictionary mapping field names to values . DCNL fields : dict DCNL A dictionary mapping field names to a set of field names . DCNL Returns DCNL out : dict DCNL A dictionary mapping field names to a set of field names . &apos;
&apos;Add a bridge to the interface DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; bridge.add br0&apos;
&apos;Extract RNN embeddings from the input options . DCNL Parameters DCNL options : dict DCNL The options dictionary . DCNL word _ row : string DCNL The label of the word . DCNL f _ training : bool , optional DCNL If True , use the cutoff frequency for each row . DCNL use _ norm : bool , optional DCNL If True , then use the cutoff frequency to be used . DCNL Returns DCNL fig : instance of : class : `numpy.ndarray` DCNL The transformed data . &apos;
&apos;Converts a bcd value to a decimal value DCNL : param decimal : The value to convert DCNL : return : The value in decimal form&apos;
&apos;Try to call a function and return the result of a callable . DCNL If the function raises an exception , raises an exception if it is not DCNL reached . DCNL : param func : function to pass to the function DCNL : param str name : the name of the function DCNL : param args : keyword arguments passed to the function DCNL : param kwargs : keyword arguments passed to the function DCNL : param kwargs : keyword arguments passed to the function DCNL : return : True if the function succeeds , False otherwise . &apos;
&apos;Run a virtual IP address for a specified device . DCNL : param src _ addr : The source of the MAC address . DCNL : type src _ address : ``str`` DCNL : param src : The address of the MAC address . DCNL : type src : ``str`` DCNL : param src : The source address . DCNL : type target : ``str`` DCNL : param target : The target address to use . Default is \ &apos; \ &apos; . DCNL : type target : str DCNL : param target : The target address to use . Default is \ &apos; \ &apos; . DCNL : type target : str DCNL : param target : The target address to use . Default is \ &apos; \ &apos; . DCNL : type target : str&apos;
&apos;Replace tan with sin / cos . DCNL Examples DCNL &gt; &gt; &gt; from sympy.simplify.fu import TR1 DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt;
&apos;Returns the value of a label . DCNL Args : DCNL node : A tensor . DCNL Returns : DCNL ~ chainer.Variable : Output variable . &apos;
&apos;Adds a response to a ViewSet that should be used . &apos;
&apos;-- Returns current bitcoin value&apos;
&apos;Convert a Numpy array into a Numpy array . DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL
&apos;Parameters DCNL dim _ cols : int DCNL Number of columns to be used for the aggregation pipeline . DCNL agg _ col : int , optional ( default = None ) DCNL Number of columns to be used for observations&apos;
&apos;Evaluates the value of a function and returns the value . DCNL Parameters DCNL x : str DCNL The expression to evaluate DCNL y : str DCNL The expression to evaluate DCNL expr : Expr DCNL The expression to evaluate DCNL x _ value : int DCNL The value of the expression DCNL y _ value : int DCNL The value to evaluate DCNL Returns DCNL expr : LinOp DCNL The expression representing the expression . &apos;
&apos;Convert an item to a client . DCNL : type iterator : : class : ` ~ google.cloud.iterator.Iterator` DCNL : param iterator : The iterator that is currently in use . DCNL : type sub _ pb : : class : ` ~ google.cloud.iterator.Iterator` DCNL : param iterator : The iterator that is currently in . DCNL : type sub _ pb : : class : ` ~ google.cloud.pubsub.subscription.Subscription` DCNL : param topics : A list of topics to use for the API . DCNL : rtype : : class : ` ~ google.cloud.pubsub.subscription.Subscription` DCNL : returns : The next topic in the page . &apos;
&apos;Return JSON representation of a given object . DCNL If an error occurs , it will return a JSON representation of the DCNL given type . DCNL : param cls : DCNL The class to export . DCNL : type cls : str DCNL : param instance _ or _ dict : DCNL The object to export . DCNL : type instance _ or _ dict&apos;
&apos;Assert that the TPOT score function raises a ValueError when no optimized pipeline exists&apos;
&apos;fill _ fill ( v , X ) - &gt; ( fs _ size , fs ) - &gt; ( fs _ id , fs ) - &gt; ( fs _ id , fs ) - &gt; ( fs _ id , fs ) - &gt; ( fs _ id ) - &gt; ( fs _ id ) - &gt; fs ( s ) - &gt; fs ( s ) - &gt; fs ( s ) - &gt; fs ( s ) - &gt; fs ( s ) - &gt; fs ( s ) - &gt; fs ( s ) - &gt; fs ( s ) - &gt; fs ( s ) - &gt; fs ( s ) - &gt; fs ( s ) - &gt; fs ( s ) - &gt; ( X , X ) &apos;
&apos;Return a list of all help texts of all configured validators . &apos;
&apos;Checks if a forum is unread . DCNL : param guest : DCNL : param user : DCNL : param topic : DCNL : param topic : DCNL : param topic : DCNL : return : &apos;
&apos;List the flavor access for a flavor . DCNL If no tenant _ id is specified , the default instance will be DCNL assigned to the existing instance . &apos;
&apos;Do a great job of assigning data to servers using a given word . &apos;
&apos;Compute assortativity for attribute attribute values . DCNL Parameters DCNL G : graph DCNL An undirected graph . DCNL attribute : string DCNL The attribute of the attribute . DCNL nodes : list or iterable , optional ( default = None ) DCNL The number of nodes in the graph . DCNL Returns DCNL evals : NetworkX MultiGraph or MultiDiGraph . DCNL References DCNL .. &#91; 1 &#93; M. E. J. Newman , Mixing patterns in networks , DCNL Physical Review E , 67 026126 , 2003&apos;
&apos;Sends an HTTP request to the given request . DCNL Returns : DCNL A tuple with the form \ &apos; http : / / github.com / andresriancho / w3af / issues / 40123 \ &apos; DCNL or \ &apos; https : / / github.com / andresriancho / w3af / issues / 4048&apos;
&apos;Directory tree walk with callback function . DCNL dirname is the name of the directory , and fnames a list of the names of DCNL the files and subdirectories in dirname ( excluding \ &apos; . \ &apos; and \ &apos; .. \ &apos; ) . DCNL dirname is the name of the directory , and fnames a list of the names of DCNL the files and subdirectories in dirname ( excluding \ &apos; . \ &apos; and \ &apos; .. \ &apos; ) . DCNL dirname is the name of the directory , and fnames a list of the names of DCNL the files and subdirectories in dirname ( excluding \ &apos; . \ &apos; and \ &apos; .. \ &apos; ) . DCNL dirname is the name of the directory , and fnames a list of the names of DCNL the files and subdirectories in dirname ( excluding \ &apos; . \ &apos; and \ &apos; .. \ &apos; ) . DCNL dirname is the name of the directory , and fnames a list of the names of DCNL the subdirectories in dirname ( excluding \ &apos; . \ &apos; and \ &apos; .. \ &apos; ) .
&apos;Tests that the mixin table is deletion of a table that do not DCNL exist in the test suite . &apos;
&apos;True if key is a special key for key . &apos;
&apos;Replace the new string from a new string with a single symbol . DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy.abc import a , b DCNL &gt; &gt; &gt; from sympy import
&apos;Get the minimum representation of the given script . DCNL For example : DCNL &gt; &gt; &gt; text = &#91; \ &apos; text / plain \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; &#93; DCNL &gt; &gt; &gt;
&apos;A decorator that prints all dependencies of an existing dependencies . DCNL This function raises an exception if there is no such dependencies . DCNL Parameters DCNL dependencies : list of str DCNL The source of the dependencies . DCNL Returns DCNL obj : callable DCNL A callable that raises an exception with the given DCNL dependencies . &apos;
&apos;Create a Network instance . DCNL Parameters DCNL dataSource : a RecordStream instance to read data from DCNL Returns DCNL fs : float DCNL The Network instance . &apos;
&apos;Converts a list of strings into a string representation of the string . DCNL This is useful for converting strings into a string representation . &apos;
&apos;Reload the named service . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.reload &lt; service name &gt; &apos;
&apos;Context manager to submit a single source file . DCNL Parameters DCNL filenames : list DCNL List of filenames to be executed . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL stdout : str&apos;
&apos;Tests that syncing two contacts with uids that don \ &apos; t cause an error . DCNL @ param r : a model instance DCNL @ param attr : the name of the user . DCNL @ return : an empty dict if any errors are reported . &apos;
&apos;Generates a 1D convolution . DCNL # Arguments DCNL input : input tensor . DCNL filters : input tensor . DCNL image _ shape : ( optional ) The shape of the input image . DCNL border _ mode : integer , the stride of the image . DCNL filter _ mode : integer , the stride of the convolution . DCNL filter _ mode : boolean , whether to use the output . DCNL Returns : DCNL ~ chainer.Variable : Output variable . &apos;
&apos;Add a site-packages directory or a site-packages directory . DCNL The site-packages directory will be a list containing the site-packages DCNL directory . &apos;
&apos;Listens to the : py : class : ` ~ sqlalchemy.orm.aliased` method . DCNL : param r : DCNL : param tab : DCNL : param tab : DCNL : param profile : DCNL : return : &apos;
&apos;If there is any errors , return the result . DCNL Args : DCNL ocr _ text : Text to check . DCNL truth _ text : str . DCNL Returns : DCNL A list of errors . &apos;
&apos;Convert an integer value to a byte string . DCNL This function is almost equivalent to : func : `numpy.byte _ string` . DCNL : param value : The value to convert . DCNL : type value : int DCNL : param num _ bits : The number of bits to convert . DCNL : type num _ bits : int DCNL : return : The byte string . DCNL : rtype : int&apos;
&apos;Run : py : func : `cmd.run &lt; script &gt; ` inside a container DCNL name DCNL Container name or ID DCNL source DCNL The source of the source DCNL saltenv : base DCNL The fileserver environment from which to run the command . Defaults to ``quiet`` to DCNL suppress logging . DCNL use _ vt : False DCNL Use SaltStack \ &apos; s utils.vt to stream output to console . DCNL keep _ env : None DCNL Use SaltStack \ &apos; s utils.vt to stream output to console . DCNL keep _ env : None DCNL Use SaltStack \ &apos; s utils.vt to stream output to console . DCNL keep _ env : None DCNL Use SaltStack \ &apos; s utils.vt to stream output to console . DCNL keep _ env : None DCNL Use SaltStack \ &apos; s utils.vt to stream output to console . DCNL keep _ env : None DCNL Use SaltStack \ &apos; s utils.vt to stream output to console . DCNL keep _ env : None DCNL Use SaltStack \ &apos; s utils.vt to stream output to console . DCNL keep _ env : None DCNL Use SaltStack \ &apos; s utils.vt to stream
&apos;Context manager that creates a temporary file with a temporary DCNL temporary file , and return it as a temporary file . &apos;
&apos;Ask a yes / no question . DCNL : param question : Question to query DCNL : param default : default \ &apos; yes \ &apos; or \ &apos; yes \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos; , \ &apos; no \ &apos;
&apos;Replace a HyExpression type with a Python value&apos;
&apos;init _ network ( net , params , params ) - &gt; array of ints DCNL Parameters DCNL options : dict , shape = ( n , ) , shape = ( n , ) , ndim = 2 ) DCNL Array of options . DCNL params : array , shape = ( n , ) DCNL Size of parameters . DCNL prefix : int , optional DCNL The prefix to attach to the layer . Default is None . DCNL scale : boolean , optional DCNL If True , use ortho instead&apos;
&apos;Create a new cipher object `PSS _ SigScheme` that DCNL can be used to perform PKCS # 1 PSS signature or verification . DCNL : Parameters : DCNL key : RSA key object DCNL The key to create . Must be a string or a string . If not specified , DCNL `Crypto.Hash.SHA1` is used . DCNL randfunc : callable DCNL A callable object to use for decryption . DCNL : Return : A new RSA key object . &apos;
&apos;Return the cached value of the given request or response object . &apos;
&apos;L2 norm of two values DCNL &gt; &gt; &gt; x = &#91; 1 , 2 , 3 , 4 , 6 &#93; DCNL &gt; &gt; &gt; x = 1 DCNL &gt; &gt; &gt; x = 1 DCNL &gt; &gt; &gt; x = 1 DCNL &gt; &gt; &gt; x = 1 DCNL &gt; &gt; &gt; x = 1 DCNL &gt; &gt; &gt; x = 1 DCNL &gt; &gt; &gt; x = 1 DCNL &gt; &gt; &gt; x = 1 DCNL &gt; &gt; &gt; x = 1 DCNL &gt; &gt; &gt; x = 1 DCNL &gt; &gt; &gt; x = 1 DCNL &gt; &gt; &gt; numpy.allclose ( k , k ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; numpy.allclose ( x , k , v ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; v0 = &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; numpy.allclose ( k , k ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; v0 = &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; numpy.allclose ( k , k ) DCNL &#91; 1 , 2 , 3 ,
&apos;Construct an email address for an OpenID identity . DCNL : param scope : The email address to use DCNL : type scope : str DCNL : param scope : The email address to use DCNL : type scope : str DCNL : return : A dictionary containing the IP address as a string DCNL : rtype : dict&apos;
&apos;Get the version of pyzmq as a git version . DCNL This is a convenience wrapper for https : / / github.com / pypa / pip / issues / 1548 DCNL Args : DCNL version ( str ) : The path to the version . DCNL Returns : DCNL string : The version of the version . &apos;
&apos;Returns the expected text of &lt; td &gt; and &lt; td &gt; and &lt; td &gt; . DCNL This method returns a string with the following keys : DCNL \ &apos; text \ &apos; : \ &apos; &lt; question &gt; \ &apos; , DCNL \ &apos; count \ &apos; : \ &apos; &lt; question &gt; \ &apos; , DCNL \ &apos; count \ &apos; : 3 , DCNL \ &apos; count \ &apos; : 4 , DCNL \ &apos; count \ &apos; : 5 , DCNL \ &apos; count \ &apos; : 4 , DCNL \ &apos; offset \ &apos; : 5 , DCNL \ &apos; offset \ &apos; : 5 , DCNL \ &apos; offset \ &apos; : 5 , DCNL \ &apos; offset \ &apos; : 5 , DCNL \ &apos; offset \ &apos; : 5 , DCNL \ &apos; offset \ &apos; : \ &apos; &lt; question &gt; \ &apos; , DCNL \ &apos; count \ &apos; : 5 , DCNL \ &apos; offset \ &apos; : 5 , DCNL \ &apos; offset \ &apos; : 5 , DCNL \ &apos; offset \ &apos; : 5 , DCNL \ &apos; offset \ &apos; : 5 , DCNL
&apos; &gt; &gt; reset _ output DCNL Reset twill output output to the screen . &apos;
&apos;A decorator that adds a python version to the given version . &apos;
&apos;Test that we can \ &apos; t reset out ( ) length&apos;
&apos;Check that the actions are expected in the target file . DCNL : param actions : the class to check . DCNL : param request : request request object . DCNL : param target : target target dictionary . DCNL : return : True if the action is valid , otherwise False . &apos;
&apos;Compute the comparator for a regular expression based on a regular expression DCNL : param match : DCNL : type match : DCNL : return : DCNL : rtype : &apos;
&apos;Given a list of systems that will be used by the controller . DCNL : param devices : A list of device names to be used . DCNL : return : A tuple containing the information for the controller . &apos;
&apos;YIQ color space conversion . DCNL Parameters DCNL lab : str DCNL The image to transform . DCNL illuminant : string DCNL The aperture angle of the observer . DCNL observer : str , optional DCNL The aperture angle of the observer . DCNL Returns DCNL out : ndarray DCNL The image in RGB format . DCNL Raises DCNL ValueError DCNL If `rgb` is not a 3-D or 4-D array of shape `` ( M , N , &#91; P , &#93; ) `` . DCNL Examples DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img =
&apos;Compute the weighted Minkowski distance between two 1-D arrays . DCNL Parameters DCNL u : ( N , ) array _ like DCNL Input array . DCNL v : ( N , ) array _ like DCNL Input array . DCNL p : ( N , ) array _ like DCNL Input array . DCNL Returns DCNL v : ( N , ) array _ like DCNL Input array . &apos;
&apos;Delete all volumes on a node . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -a vol _ volume _ on _ destroy mymachine&apos;
&apos;Utility method to create a new assessment . DCNL This is the same as : DCNL https : / / github.com / astropy / astropy / issues / 935 DCNL # Arguments DCNL parent : the parent object to be converted DCNL child : An integer , the value of the item to be converted to DCNL Returns : DCNL A dictionary with the following keys : DCNL - \ &apos; s \ &apos; , \ &apos; int \ &apos; , \ &apos; ctrl \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; green \ &apos; , \ &apos; green \ &apos; , \ &apos; yellow \ &apos; , \ &apos; green \ &apos; , \ &apos; yellow \ &apos; , \ &apos; green \ &apos; , \ &apos; yellow \ &apos; , \ &apos; green \ &apos; , \ &apos; yellow \ &apos; , \ &apos; green \ &apos; , \ &apos; yellow \ &apos; , \ &apos; green \ &apos; , \ &apos; yellow \ &apos; , \ &apos; green \ &apos; , \ &apos; yellow \ &apos; , \ &apos; green \
&apos;Returns the path component of a given filepath DCNL Parameters DCNL filepath : str DCNL Path to the directory path DCNL Returns DCNL path : str&apos;
&apos;This function is a VERY DUMB hack for more DCNL sequences . DCNL &gt; &gt; &gt; splitQuoted ( \ &apos; &quot; hairy monkey &quot; likes pie \ &apos; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; hairy monkey \ &apos; , \ &apos; likes \ &apos; , \ &apos; hairy monkey \ &apos; , \ &apos; likes \ &apos; &#93; DCNL &gt; &gt; &gt; splitQuoted ( \ &apos; &quot; hairy monkey &quot; likes pie \ &apos; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; hairy monkey \ &apos; , \ &apos; likes \ &apos; , \ &apos; hairy monkey \ &apos; , \ &apos; likes \ &apos; &#93; DCNL &gt; &gt; &gt; splitQuoted ( \ &apos; &quot; hairy monkey &quot; likes pie \ &apos; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; hairy monkey \ &apos; , \ &apos; likes \ &apos; , \ &apos; hairy monkey \ &apos; , \ &apos; likes \ &apos; &#93; DCNL &gt; &gt; &gt; splitQuoted ( \ &apos; &quot; hairy monkey &quot; likes pie \ &apos; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; hairy monkey \ &apos; , \ &apos;
&apos;Returns the number of unread messages in a response . DCNL : param request : DCNL : param response _ format : DCNL : param response _ format : DCNL : return : &apos;
&apos;Returns a form field for a ``db.FloatProperty`` . &apos;
&apos;Try to decode the cookie to unicode . DCNL Args : DCNL value : the unicode string to encode . DCNL Returns : DCNL unicode or unicode . &apos;
&apos;Return detailed information about a specific server DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; nova.server _ list&apos;
&apos;Assert that the left column was added with the right axis DCNL Parameters DCNL left : WRITEME DCNL right : WRITEME DCNL axis : WRITEME&apos;
&apos;Parameters DCNL df : DataFrame DCNL divisions : int DCNL number of divisions DCNL Returns DCNL df : DataFrame DCNL Series / Index of divisions DCNL Examples DCNL &gt; &gt; &gt; df = pd.DataFrame _ df _ on _ index ( df , &#91; 1 , 2 , 3 , 4 , 5 &#93; ) DCNL &gt; &gt; &gt; print _ df _ on _ index ( df , &#91; 1 , 2 , 3 &#93; ) DCNL &#91; 1 , 2 , 3 , 4 , 5 &#93; DCNL &gt; &gt; &gt; freq _ df _ on _ index ( df , &#91; 1 , 2 , 3 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; print _ df _ on _ index ( df , &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 , 4 &#93; DCNL &gt; &gt; &gt; freq _ df _ on _ index ( df , &#91; 1 , 2 , 3 , 4 , 5 , 5 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; freq _ df _ on _ index
&apos;Helper function to convert the data into a string DCNL Args : DCNL data ( dict ) : data to convert to string DCNL Returns : DCNL string : A string containing the keys in data DCNL Raises : DCNL TypeError : if data is not a string&apos;
&apos;Test that threading is not used in test case . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 4098&apos;
&apos;Return the status of a git diff on the current diff . DCNL Args : DCNL left : The left of the git diff . DCNL right : The full path to the git diff . DCNL diff _ filter : A filter to check for diff lines . &apos;
&apos;Generate a file that can be used to create a file . &apos;
&apos;RESTful CRUD controller&apos;
&apos;Return \ &apos; x \ &apos; and \ &apos; x \ &apos; . &apos;
&apos;Converts URLs in plain text into clickable links . DCNL @ param text : The text to convert to URLs . DCNL @ type text : C { str } DCNL @ param content _ url _ limit : The maximum number of characters in the text . DCNL @ type blank : L { str } DCNL @ return : A list of URLs . DCNL @ rtype : C { str } &apos;
&apos;Return the docstring \ &apos; s docstring . DCNL @ param docstring : the docstring DCNL @ type docstring : str DCNL @ return : string DCNL @ rtype : string&apos;
&apos;Interpret a string as a boolean and if it \ &apos; s a boolean . DCNL If it \ &apos; s a boolean , it will return True if it \ &apos; s a boolean , DCNL otherwise False . DCNL Args : DCNL subject ( str ) : The subject string . DCNL Returns : DCNL bool : True if the subject is a boolean , False otherwise . &apos;
&apos;Delete an ELB policy . DCNL CLI example : DCNL .. code-block : : bash DCNL salt myminion boto _ elb.delete _ policy myelb mypolicy LBCookieStickinessPolicyType \ &apos; { &quot; CookieExpirationPeriod &quot; : 3600 } \ &apos; &apos;
&apos;Tries to find the user \ &apos; s home directory , if available . DCNL Otherwise , returns None . &apos;
&apos;Logs out the lines of a file . DCNL Args : DCNL filename : The name of the file to check . DCNL clean _ lines : A CleansedLines instance containing the file . DCNL include _ state : The state of the file . DCNL error : The io to use for the file . DCNL io : The io for the file . &apos;
&apos;Convert an attribute name to a standard value . DCNL : param attr : The attribute name to convert . DCNL : return : The converted attribute value . &apos;
&apos;Return a boolean value representing a value \ &apos; s value . DCNL &gt; &gt; &gt; true ( \ &apos; 1 \ &apos; , \ &apos; 1 \ &apos; ) DCNL True DCNL &gt; &gt; &gt; true ( \ &apos; 1 \ &apos; , \ &apos; 1 \ &apos; ) DCNL True DCNL &gt; &gt; &gt; true ( \ &apos; 1 \ &apos; , \ &apos; 1 \ &apos; ) DCNL True DCNL &gt; &gt; &gt; true ( \ &apos; 1 \ &apos; , \ &apos; 1 \ &apos; ) DCNL True DCNL &gt; &gt; &gt; true ( \ &apos; 1 \ &apos; , \ &apos; 1 \ &apos; ) DCNL True DCNL &gt; &gt; &gt; true ( \ &apos; 1 \ &apos; , \ &apos; 1 \ &apos; ) DCNL True DCNL &gt; &gt; &gt; true ( \ &apos; 1 \ &apos; , \ &apos; 1 \ &apos; ) DCNL True DCNL &gt; &gt; &gt; true ( \ &apos; 1 \ &apos; , \ &apos; 1 \ &apos; ) DCNL True DCNL &gt; &gt; &gt; true ( \ &apos; 1 \ &apos; , \ &apos; 1 \ &apos; ) DCNL True DCNL &gt; &gt; &gt; true ( \ &apos;
&apos;Sends a signal to an error . DCNL : param Process : Process instance . &apos;
&apos;Add a neighbour entry . DCNL : param ip _ address : IP address of entry to add DCNL : param mac _ address : MAC address of entry to add DCNL : param namespace : Device name to use in dumping entries DCNL : param namespace : The name of the namespace in which to add the entry&apos;
&apos; : param migrate _ engine : database engine to be used DCNL : param table : SQL table DCNL : return : a tuple of ( image _ id , context ) &apos;
&apos;Writes the data to a DataFrame DCNL Parameters DCNL request : ` ~ astropy.time.Time` DCNL The request to query . DCNL Returns DCNL data : pd.DataFrame DCNL A dictionary of data to be used to update the data in the DCNL dataframe . DCNL Notes DCNL This function is meant to be used by examining the data of the DCNL activity stream , but it \ &apos; s not guaranteed to be used . &apos;
&apos;Get extrude output for a rack . &apos;
&apos;Decorator that calls urlresolvers.reverse ( ) to return a permalink . DCNL This should be used as follows : DCNL * viewname , viewargs ) DCNL ( viewname , viewargs ) DCNL ( viewname , viewargs ) DCNL ( viewname , viewargs ) DCNL ( viewname , viewargs , viewkwargs ) &apos;
&apos;Get a service notification service . DCNL : param config : Path to the service . DCNL : type config : Configuration DCNL : param config : Configuration configuration for the service . DCNL : type config : dict DCNL : param discovery _ info : Path to the discovery service . DCNL : type discovery _ info : str DCNL : return : Path to the notification service . DCNL : rtype : dict DCNL : returns : The service instance . &apos;
&apos;helper function to check the port of an existing port . DCNL @ param switch : switch port to check . DCNL @ type switch : int DCNL @ param interface : Port to connect to . DCNL @ type interface : int DCNL @ return : True on success , False on failure . DCNL @ raise ValueError : if port is invalid . &apos;
&apos;N-dimensional Laplace filter using grayscale . DCNL Parameters DCNL input : array _ like DCNL Input array . DCNL weights : array _ like DCNL One-dimensional sequence of 2-tuples . DCNL output : array _ like DCNL Output array . DCNL mode : { \ &apos; constant \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; , \ &apos; reflect \ &apos; ,
&apos;Takes a list of HTML and converts it to a list of tags . DCNL : param html : A list of HTML tags . DCNL : type html : str DCNL : return : A list of ( tags , text ) tuples . DCNL : rtype : tuple ( str , str ) &apos;
&apos;Analysis of a sound using the sinusoidal plus residual model DCNL x : input sound , fs : sampling rate DCNL w : sampling rate , w : analysis window , N : FFT size , N : FFT size , H : hop size DCNL maxnSines : maximum number of parallel sinusoids DCNL freqDevOffset : frequency deviation of the sinusoids from frame to frame at frequency size DCNL freqDevSlope : slope of the frequency deviation , higher frequencies are bigger than frequencies DCNL returns hfreq , hmag , hphase : harmonic frequencies , magnitude and phases ; xr : residual signal&apos;
&apos;Returns the product of the constraint . DCNL Parameters DCNL lh _ op : LinOp DCNL The left-hand operator in the product . DCNL rh _ op : LinOp DCNL The right-hand operator in the product . DCNL constr _ id : int DCNL The id of the constraint . &apos;
&apos; : return : The name of the current module . DCNL : rtype : str DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.get _ current _ module _ name&apos;
&apos;A wrapper around the file \ &apos; s file and if it doesn \ &apos; t exist . DCNL If the file is not a file , it will not be changed . &apos;
&apos;Given a list of floats , return a tuple containing the DCNL total _ units , log _ units , time _ units , time _ units , log _ units , time _ units ) , DCNL where each line is the number of seconds since the epoch . &apos;
&apos;Plot the fit edge of x and y . DCNL Parameters DCNL x : array _ like DCNL Input array . DCNL window _ start : int , optional DCNL The window of the window . DCNL window _ start : int , optional DCNL Axis along which the axis is computed . Default is 0 . DCNL axis : int , optional DCNL Axis along which the axis is computed . Default is 0 . DCNL axis : int , optional DCNL Axis along which to compute the axis . Default is 0 . DCNL axis : int , optional DCNL Axis along which to compute the axis . Default is 0 . DCNL axis : int , optional DCNL Axis along which to compute the axis . Default is 0 . DCNL axis : int , optional DCNL Axis along which to compute the axis . Default is 0 . DCNL axis : int , optional DCNL Axis along which to compute the axis . Default is 0 . DCNL axis : int , optional DCNL Axis along which to compute the axis . Default is 0 . DCNL y : int , optional DCNL Axis along which
&apos;Return the date format based on a locale . DCNL &gt; &gt; &gt; get _ datetime _ format ( \ &apos; en _ US \ &apos; , locale = \ &apos; en _ US \ &apos; ) DCNL u \ &apos; en _ US \ &apos; DCNL &gt; &gt; &gt; get _ datetime _ format ( \ &apos; en _ US \ &apos; , locale = \ &apos; en _ US \ &apos; ) DCNL u \ &apos; en _ US \ &apos; DCNL &gt; &gt; &gt; get _ datetime _ format ( \ &apos; en _ US \ &apos; , locale = \ &apos; en _ US \ &apos; ) DCNL u \ &apos; en _ US \ &apos; DCNL &gt; &gt; &gt; get _ datetime _ format ( \ &apos; en _ US \ &apos; , locale = \ &apos; en _ US \ &apos; ) DCNL u \ &apos; en _ US \ &apos; DCNL &gt; &gt; &gt; get _ datetime _ format ( \ &apos; en _ US \ &apos; , locale = \ &apos; en _ US \ &apos; ) DCNL u \ &apos; en _ US \ &apos; DCNL &gt; &gt; &gt; get _
&apos;Encrypts data using AES encryption key \ &apos; s secret key . DCNL : param data : data to encrypt DCNL : param key : AES key key DCNL : returns : signature&apos;
&apos;Apply a function \ &apos; s offset into the stack offset DCNL &gt; &gt; &gt; foo ( \ &apos; hello \ &apos; ) DCNL \ &apos; x \ &apos; DCNL &gt; &gt; &gt; offset _ func ( \ &apos; hello \ &apos; ) DCNL \ &apos; x \ &apos; DCNL &gt; &gt; &gt; offset _ func ( \ &apos; hello \ &apos; ) DCNL \ &apos; x \ &apos; DCNL &gt; &gt; &gt; offset _ func ( \ &apos; hello \ &apos; ) DCNL \ &apos; x \ &apos; DCNL &gt; &gt; &gt; offset _ func ( \ &apos; hello \ &apos; ) DCNL \ &apos; x \ &apos; DCNL &gt; &gt; &gt; offset _ func ( \ &apos; x \ &apos; , offset = 1 ) DCNL \ &apos; x \ &apos; DCNL &gt; &gt; &gt; offset _ func ( \ &apos; hello \ &apos; ) DCNL \ &apos; x \ &apos; &apos;
&apos;Return the list of elements in the list \ &apos; s items&apos;
&apos;Update a key / value pair in the function&apos;
&apos;Connect to VLANName can be used as a script&apos;
&apos;Convert columns to the larger set of columns ( e.g. , \ &apos; auto \ &apos; , \ &apos; auto \ &apos; ) . &apos;
&apos;unique _ everseen ( iterable , key = \ &apos; ABBCcAD \ &apos; , str.lower ) -- &gt; unique DCNL unique _ everseen ( \ &apos; AAAABBBCCDAABBB \ &apos; ) -- &gt; \ &apos; ABCD \ &apos; DCNL &gt; &gt; &gt; list ( unique _ everseen ( \ &apos; ABBCcAD \ &apos; , str.lower ) ) DCNL &#91; \ &apos; A \ &apos; , \ &apos; D \ &apos; , \ &apos; D \ &apos; &#93; &apos;
&apos;Return an instance of the data , based on the data . DCNL : param data : data to describe . DCNL : type data : Orange.data.Table DCNL : rtype : OrderedDict&apos;
&apos;Find a sample from a file in a given file . DCNL Parameters DCNL file _ in : file DCNL The file to read from . DCNL start : int DCNL The start of the file . DCNL stop : int or None , optional DCNL The stop of the sample in the file . DCNL Returns DCNL data : array DCNL The data in the file , or None if no data was found . DCNL Notes DCNL This function is meant to be used in the wrong format . DCNL Examples DCNL &gt; &gt; &gt; sample _ from _ file ( file , start = 0 , stop = 0 ) DCNL &gt; &gt; &gt; sample _ from _ file ( file , start = 0 ) DCNL &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
&apos;contrast or restriction matrix for all precision matrices DCNL Parameters DCNL nm : int DCNL Returns DCNL contr : ndarray , 2d , ( nm-1 , nm ) DCNL contrast matrix for all pairwise comparisons&apos;
&apos;Write all the js files to the list of JS files . DCNL : param output _ root : The top-level of the files to write to . DCNL : type output _ root : str DCNL : param classes : The list of plugin classes to write . DCNL : type classes : list DCNL : return : The list of script classes . &apos;
&apos;Test with initial text with initial and invalid text with initial DCNL tags . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 1951 DCNL : param initial _ text : The initial text to test . DCNL : param initial _ text : The initial text to test . DCNL : param extra _ text : The initial text of the message to test . DCNL : return : The initial text with initial text . &apos;
&apos;Sets the stylesheet attributes for an object . DCNL Args : DCNL obj ( str ) : The object to set the stylesheet for . &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / pull / 326&apos;
&apos;Return a set of all blocks in a given block tree . DCNL : param start _ block : The starting block of the tree . DCNL : param exit _ block : The starting block of the tree . DCNL : return : The list of all blocks in the tree . &apos;
&apos;ContextManager to register an evaluation function . DCNL This function is intended to be used as a wrapper around : func : `safe` . &apos;
&apos;Change the MD5 hash of a file . DCNL : param filename : The name of the file to hash . DCNL : param str name : The name of the file to hash . DCNL : return : The hash value . &apos;
&apos;Check the shape of ch _ type . DCNL Parameters DCNL ch : str DCNL The name of the file . DCNL projs : list DCNL The list of channels to check . DCNL ch _ type : str DCNL The type of the FIF file . DCNL Returns DCNL X : pd.DataFrame DCNL The measurement info . DCNL ch _ type : str DCNL Name of the new file . &apos;
&apos;Scenario description takes filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename , filename ,
&apos;Return the integer value corresponding to a given label label . DCNL &gt; &gt; &gt; keras.backend.get _ shift _ value ( \ &apos; Create Directory \ &apos; ) DCNL &gt; &gt; &gt; get _ crop _ value ( \ &apos; ABC \ &apos; ) DCNL \ &apos; aa \ &apos; DCNL &gt; &gt; &gt; get _ crop _ value ( \ &apos; int64 \ &apos; ) DCNL False&apos;
&apos;Finds the difference in two functions in order in descending DCNL order . For example : DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; find _ diff ( StringIO.StringIO ( &quot; x &quot; ) ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) : DCNL StopIteration DCNL &gt; &gt; &gt; find _ diff ( &quot; x &quot; ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) : DCNL StopIteration DCNL &gt; &gt; &gt; find _ diff ( &quot; x &quot; ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) : DCNL StopIteration DCNL &gt; &gt; &gt; find _ diff ( &quot; x &quot; ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) : DCNL StopIteration DCNL &gt; &gt; &gt; find _ diff ( &quot; x &quot; ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) : DCNL StopIteration DCNL &gt; &gt; &gt; find _ diff ( \ &apos; / proc / y \ &apos; ) # doctest : + NORMALIZE _ WHITESPACE DCNL
&apos;Sends an email notifications into the user \ &apos; s email . DCNL : param context : the request context DCNL : param id : the id of the email DCNL : type id : string DCNL : rtype : dictionary&apos;
&apos;Draw a 2D image . DCNL Parameters DCNL input : array _ like DCNL Input array . DCNL size : int , optional DCNL The size of the array . DCNL footprint : ndarray , optional DCNL The neighborhood expressed as a 2-D array of shape `` ( 0 , 1 , 2 ) `` . DCNL footprint : ndarray , optional DCNL The neighborhood expressed as a 2-D array of shape `` ( 0 , 1 , 2 ) `` . DCNL output : ndarray , optional DCNL Structuring element used for the filter . `structure` DCNL must be a 2-D array . DCNL output : ndarray , optional DCNL Structuring element used for the filter . `structure` DCNL must be a single structuring element . DCNL origin : ndarray , optional DCNL Structuring element used for the filter . `structure` DCNL must be a single structuring element . DCNL origin : ndarray , optional DCNL Structuring element used for the placement graph . DCNL Default is 0 . DCNL origin : ndarray , optional DCNL Structuring element used for the filter . DCNL origin : ndarray , optional DCNL Structuring element used
&apos;Given a module name and a module name , return a suitable module . DCNL : param module _ name : Module name . DCNL : type module _ name : ``str`` DCNL : return : Module name . DCNL : rtype : module&apos;
&apos;Wait until a server is ready to be sent on a server . DCNL : param server : The server to send to . DCNL : param port : Port to connect to . DCNL : return : ``Deferred`` that fires when the server was sent successfully . &apos;
&apos;Image data resource factory method&apos;
&apos;Get all security groups . DCNL .. versionadded : : 2016.11.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ iam.get _ all _ security _ groups groups&apos;
&apos;Deprecated decorator , please use : func : `beat _ schedule` . &apos;
&apos;Returns the stemmed version of the words in the word . DCNL : param word : the word to be made DCNL : type word : string DCNL : param cached : whether or not to sort the stem DCNL : type caching : bool DCNL : param results : DCNL : type results : DCNL : return : DCNL : rtype : &apos;
&apos;Set the User-Agent header to use for logging . DCNL : param element : DCNL : param config : DCNL : return : unicode&apos;
&apos;Handler for the user \ &apos; s security group . &apos;
&apos;trims trailing whitespace from a list DCNL : param repair : unpack to unpack DCNL : param unpack : unpack to unpack DCNL : return : string&apos;
&apos; &gt; &gt; &gt; print _ not _ equal ( &quot; Hello &quot; ) DCNL Traceback ( most recent call last ) : DCNL ValueError : if not a &quot; ! &quot; &apos;
&apos;Serialize the given data into an iterable of Django \ &apos; s payload . DCNL This method should be used with the `payload _ iter ( ) ` method . DCNL It will return a string of the form ( \ &apos; token \ &apos; , \ &apos; message \ &apos; ) . &apos;
&apos; : param item : key of key DCNL : type item : string DCNL : param key : key of key DCNL : type key : string DCNL : return : key of key DCNL : rtype : dict&apos;
&apos;Given an object and converts it to a string , converts it to DCNL a string , and converts it to a string , if it doesn \ &apos; t DCNL exist , it will raise an exception . DCNL Args : DCNL obj ( object ) : The object to convert . DCNL Returns : DCNL str or None . &apos;
&apos;Test the HTTP request handler class . DCNL This runs an HTTP server on port 8000 ( or the port ) . &apos;
&apos;GpuSparseBlockOuter ( neg _ x ) - &gt; array DCNL Parameters DCNL t : array-like , shape ( n _ samples , n _ features ) DCNL Input array . DCNL Returns DCNL ri : array _ like , shape ( n _ samples , n _ features ) DCNL The grad implemented . DCNL Examples DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; t = np.array ( &#91; &#91; 1 , 2 , 3 &#93; , &#91; 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; t = np.array ( &#91; &#91; 1 , 2 , 3 &#93; , &#91; 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; t = np.array ( &#91; &#91; 1 , 2 , 3 &#93; , &#91; 2 , 3 &#93; , &#91; 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; t = np.array ( &#91; &#91; 1 , 2 , 3 &#93; , &#91; 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; t = np.array ( &#91; &#91; 1 , 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt;
&apos;Callback for CTRL-C handler if celery isn \ &apos; t going to be available&apos;
&apos;Shift an image , randomly or non-randomly . DCNL Parameters DCNL x : numpy array DCNL Input image . DCNL intensity : float DCNL Intensity of shifting . DCNL channel _ index : int , optional DCNL Index of channel . Default is 0 . DCNL Returns DCNL out : ndarray , shape ( n _ samples , n _ channels , n _ channels ) DCNL An image with shape ( n _ channels , channel _ index , channel _ index ) . DCNL References DCNL .. &#91; 1 &#93; http : / / docs.scipy.org / doc / scipy-0.14.0 / reference / generated / scipy.ndimage.interpolation.affine _ transform.html &gt; ` _ &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 326&apos;
&apos;Convert a datetime string to a datetime object . DCNL : type dt _ str : str DCNL : param dt _ str : a datetime object . DCNL : rtype : str DCNL : return : A datetime object . &apos;
&apos;Format all regions for the given resource . &apos;
&apos;Load a YAML file from path . DCNL : param path : Path to the file . DCNL : param target : File to be loaded . &apos;
&apos;Test either if an error is raised while a wrong type is given&apos;
&apos;Delete the virtual server on the server , if it does not exist , DCNL then create an existing entry from the previous server . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; lvs.delete _ rescue _ rescue _ on = my _ server = \ &apos; my _ server \ &apos; &apos;
&apos;Solves the linear equations of a linear polynomial of a linear polynomial . DCNL The solution is in the form of `` ( x , t ) ` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.solvers.diophantine import diop _ linear _ linear DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; diop _ linear _ linear ( x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 1 ) DCNL x * * 2 + 1 DCNL &gt; &gt; &gt; diop _ linear _ linear ( x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 +
&apos;Remove a symbolic link from src to host . DCNL : param src : Source image DCNL : param dest : Destination path DCNL : param dest : Destination path . DCNL : return : Converted path . &apos;
&apos;Test rgb to hsl color function&apos;
&apos;Find the most recent call to the most recent call . DCNL : param name : Name of the batch to use . DCNL : type name : ``str`` DCNL : return : Module name . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; system.get _ loader&apos;
&apos;Compute polynomial quotient of ``f`` and ``g`` . DCNL Examples DCNL &gt; &gt; &gt; from sympy import monic DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; monic ( x * * 2 + 2 * x * * 2 + 2 * x - 4 ) DCNL x * * 2 + 1 DCNL &gt; &gt; &gt; monic ( x * * 2 + 2 * x * * 2 + 2 * x - 4 ) DCNL x * * 2 + 1 DCNL &gt; &gt; &gt; monic ( x * * 2 + 2 * x * * 2 + 2 * x - 4 ) DCNL x * * 2 + 2 * x * * 2 + 1&apos;
&apos;Iterate over all hints that have been applied . DCNL : param f : a function to apply to . DCNL : type f : function DCNL : return : generator of : class : `IAsyncResult`&apos;
&apos;Check to see if the API version is not an admin version . &apos;
&apos;Return a docstring for a given node . DCNL : param Node node : The node to get the docstring from . DCNL : param unicode clean : If True , return the docstring for the given node . DCNL : return : The docstring for the given node . &apos;
&apos;Context manager that setup the default app for a given app . DCNL If use _ default is True , the default app is created and is a no-op . &apos;
&apos;unquote ( \ &apos; abc % 20def \ &apos; ) - &gt; \ &apos; abc def \ &apos; . DCNL &gt; &gt; &gt; unquote _ to _ bytes ( \ &apos; abc def \ &apos; ) DCNL \ &apos; abc % 20def \ &apos; DCNL &gt; &gt; &gt; unquote _ to _ bytes ( \ &apos; abc % 20def \ &apos; ) DCNL \ &apos; abc % 20def \ &apos; DCNL &gt; &gt; &gt; unquote _ to _ bytes ( \ &apos; abc % 20def \ &apos; ) DCNL \ &apos; abc % 20def \ &apos; DCNL &gt; &gt; &gt; unquote _ to _ bytes ( \ &apos; abc % 20def \ &apos; ) DCNL \ &apos; abc % 20def \ &apos; DCNL &gt; &gt; &gt; unquote _ to _ bytes ( \ &apos; abc % 20def \ &apos; ) DCNL \ &apos; abc % 20def \ &apos; DCNL &gt; &gt; &gt; unquote _ to _ bytes ( \ &apos; abc % 20def \ &apos; ) DCNL \ &apos; abc % 20def \ &apos; DCNL &gt; &gt; &gt; unquote _ to _ bytes ( \ &apos; abc % 20def \ &apos; ) DCNL \ &apos; abc % 20def \ &apos;
&apos;Always return True DCNL .. versionadded : : 2014.7.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; test.false&apos;
&apos;Get outset path . &apos;
&apos;Builds a section from the course interested in the course . DCNL Arguments : DCNL course _ id ( CourseKey ) : Identifier for the course . DCNL section ( CourseKey ) : The section in the course . DCNL section ( dict ) : The section in the course . DCNL Returns : DCNL dict : A dictionary containing the keys in the course grade . &apos;
&apos;Return a list of SQL statements required to remove all SQL statements DCNL from the given app ( without actually removing the database \ &apos; s tables DCNL themselves ) and put it into the database \ &apos; s database tables . &apos;
&apos;Return full pathname of installed Makefile from the Python build . &apos;
&apos;Returns the metadata contained in each file . DCNL Input : DCNL input _ map : A map of file ids to read from . DCNL debug : boolean ( default True ) DCNL Returns : DCNL A list of tuples ( key , value ) tuples , where each element is DCNL a list of ( key , value ) tuples , or None if there are no values DCNL found in the file . &apos;
&apos;if there is a semi-colon all the parts count as part of the DCNL simple _ stmt node&apos;
&apos;Parse a EMBL file into SeqRecord objects . DCNL Arguments : DCNL - handle -- the handle to the FASTA file DCNL - format - a string describing the compact format DCNL - `alphabet` : The alphabet to use for encoding&apos;
&apos;Send a message to a room . DCNL : param room _ id : The room id . DCNL : param message : The room name . DCNL : param message : The name of the room to send . DCNL : param api _ key : The HipChat api key , if not specified in the room . DCNL : param api _ key : The HipChat api version , if not specified in the room . DCNL : param api _ url : The HipChat api version , if not specified in the configuration . DCNL : param event : The HipChat api version , if not specified in the configuration . DCNL : param event : The HipChat api version , if not specified in the configuration . DCNL : return : Boolean if message was sent successfully . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; hipchat.send _ message room _ id = &quot; Development Room &quot; DCNL salt \ &apos; * \ &apos; hipchat.send _ message room _ id = &quot; Development Room &quot; DCNL salt \ &apos; * \ &apos; hipchat.send _
&apos;Try to get the language from the request \ &apos; s preferred language . DCNL If there is no language found in the request , try to get the DCNL appropriate language from the request . If the language is not found , DCNL it will be returned . DCNL : param request : request object DCNL : type request : django.http.HttpRequest DCNL : return : language code of the requested language DCNL : rtype : tuple ( str , str ) &apos;
&apos;Create a new instance of the instance id of an entity . DCNL : param context : The id of the entity to create . DCNL : param entity _ id : The id of the entity to create . DCNL : param is _ update : A tuple of ( id , device _ id ) of the entry id . &apos;
&apos;Return frequencies according to frequencies . DCNL Parameters DCNL z : array _ like DCNL Input value . DCNL p : float DCNL Number of bins . DCNL k : int DCNL Number of bins . DCNL Returns DCNL out : array , shape ( n _ samples , n _ features ) DCNL The frequencies according to the response . DCNL Examples DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL &gt; &gt; &gt; from scipy.stats import frequencies DCNL
&apos;Validator for Node \ &apos; s title . Makes sure that the value is invalid . &apos;
&apos;Searches for the given query and returns the result . DCNL : param query : Query object . DCNL : param limit : the maximum number of items to search . DCNL : param sort : list of query IDs to search for . DCNL : param cursor : the cursor for the query . DCNL : param cursor : the cursor for which results should be sorted . &apos;
&apos;Capture the output of sys.stderr : DCNL with captured _ stdout ( ) : DCNL print ( &quot; hello &quot; ) DCNL self.assertEqual ( s.getvalue ( ) , &quot; hello &quot; ) &apos;
&apos;Register a MimetypeHandler class . DCNL This will unregister a previously registered mimetype handler . &apos;
&apos;Purge a table that doesn \ &apos; t exist at the end of the table . DCNL This is used to ensure that the table is deleted at the end of DCNL the table , so that the table doesn \ &apos; t have been deleted . DCNL : param context : The context that needs to be deleted DCNL : param age _ in _ days : The age of the table being deleted DCNL : param max _ rows : The maximum number of rows archived . DCNL : type max _ rows : int DCNL : param max _ rows : The maximum number of rows archived . DCNL : type max _ rows : int DCNL : param session : The maximum age of the table to drop . DCNL : type max _ rows : int&apos;
&apos;Test mne compare _ fiff . &apos;
&apos;Reloads syslog-ng . Unconditionally restart the matching containers . Unconditionally DCNL remove any matching containers . Unconditionally restart any matching DCNL containers . Unconditionally restart the matching containers . &apos;
&apos;Create a new pool for a unit test . &apos;
&apos;Prepare the score to be used as a score to be called . DCNL Arguments : DCNL course _ id ( str ) : The course ID . DCNL student ( str ) : The course to check . DCNL block ( int ) : The block of the course . DCNL module _ state _ key ( str ) : The name of the course . DCNL Returns : DCNL None&apos;
&apos;Display the course overview of course . DCNL Arguments : DCNL request ( HttpRequest ) DCNL course _ id ( str ) : The course ID . DCNL student _ id ( str ) : The user ID . DCNL location ( str ) : The location of the course . DCNL location ( str ) : The location of the course . DCNL Returns : DCNL None&apos;
&apos;Read a mailcap file and return a dictionary keyed by MIME type . DCNL Each element is a list of tuples keyed by the MIME type , DCNL or a list of tuples keyed by the MIME type . Each list DCNL contains key-value pairs for each item in the dictionary . &apos;
&apos;Formats a date as the time until that date ( i.e. &quot; 4 days , 6 hours &quot; ) . &apos;
&apos; .. versionadded : : 2015.8.0 DCNL Execute a running job DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; state.run _ job tasks DCNL salt \ &apos; * \ &apos; nagios.run webserver&apos;
&apos;Return the item \ &apos; s metadata . DCNL Examples DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; c = { \ &apos; a \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; b \ &apos; : 2
&apos;A view that redirects all requests to the redirection view&apos;
&apos;This is called when the request has been used on setup _ page DCNL on setup _ page ( ) . DCNL This is done on setup _ view ( ) on setup _ view ( ) . &apos;
&apos;Recursively close all open files that are not found in exclude _ file . DCNL If exclude = = True , then all files that are not found in exclude _ file DCNL are excluded . DCNL : param exclude : set of strings DCNL : return : List of all open files that are not found in exclude _ file DCNL : rtype : list&apos;
&apos;Create a ctypes object from a pair of strings , and return it . DCNL If source is a pair , it returns a pair ( float , obj ) , where each line is DCNL a pair of integers and the second element is a string . &apos;
&apos;Setup the Demo platform platform . &apos;
&apos;I replace the filename `oldstr \ &apos; with `newstr \ &apos; in `filename \ &apos; . DCNL `filename = \ &apos; filename \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text \ &apos; &#93; &apos;
&apos;Unsets a sample from a single sample . DCNL This function creates a new sample with the same shape and DCNL dimensions . DCNL Args : DCNL images : A list of ( height , height ) tuples . DCNL crop _ dims : A tuple of ( width , height ) tuples . DCNL crop _ dims : The number of dimensions to add . DCNL Returns : DCNL A preprocessed image . &apos;
&apos;Check to see if a file exists . DCNL Arguments : DCNL path ( str ) : The path to the device . DCNL Returns : DCNL bool : True if the ``path`` exists on the target device . DCNL Examples : DCNL &gt; &gt; &gt; adb.isdir ( \ &apos; / init \ &apos; ) DCNL Traceback ( most recent call last ) : DCNL PwnlibException : Could not exist \ &apos; / \ &apos; &apos;
&apos;decode the keys in a list , ignoring any values in the form . DCNL Otherwise , return the default value if any of the keys in the list . &apos;
&apos;Dummy no-op . &apos;
&apos;Read headers from the given file dict . DCNL If hdict is None , it raises an exception . DCNL If hdict is None , a new dict will be returned . DCNL If hdict is None , it raises an exception . &apos;
&apos;Get the LlamaLab Automate notification service to be used . &apos;
&apos;Returns a distance matrix . DCNL Parameters DCNL y : array-like DCNL List of vectors . DCNL method : integer , optional DCNL The number of observation vectors . DCNL metric : str , optional DCNL The number of columns to check . DCNL Returns DCNL statistic : float DCNL The distance matrix . DCNL Examples DCNL &gt; &gt; &gt; from networkx.algorithms import bipartite DCNL &gt; &gt; &gt; G = np.array ( &#91; &#91; 1 , 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; M = np.array ( &#91; &#91; 1 , 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; M = np.array ( &#91; &#91; 1 , 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; M = np.array ( &#91; &#91; 1 , 2 &#93; , &#91; 3 , 4 &#93; &#93; ) DCNL &gt; &gt; &gt; M = np.array ( &#91; &#91; 1 , 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; numpy.allclose ( v1 , v2 ) DCNL array ( &#91; &#91; 0 , 0 , 1 &#93; , DCNL &#91; 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 &#93; , DCNL &#91;
&apos;Returns a HttpResponse whose content is logged in . &apos;
&apos;REST Controller&apos;
&apos;Capture the output of sys.stderr : DCNL with captured _ stdout ( ) : DCNL print ( &quot; hello &quot; ) DCNL self.assertEqual ( s.getvalue ( ) , &quot; hello &quot; ) &apos;
&apos;Individual INSERT statements via the ORM , calling upon last row id&apos;
&apos;get a copy of a module DCNL : param module : module to get export DCNL : param filesystem : the filesystem DCNL : param system : system filesystem DCNL : param system : system system DCNL : return : a dictionary&apos;
&apos;Admin view that displays the queue \ &apos; s commit queue . &apos;
&apos;Returns the content of a course , regardless of whether or not the DCNL course has been updated with the specified id . DCNL Arguments : DCNL course _ id ( str ) : The course id . DCNL course _ id ( str ) : The course ID of the course . DCNL Returns : DCNL HttpResponse : Whether or not the course has been updated . &apos;
&apos;Construct a neural network tree . DCNL For example : DCNL &gt; &gt; &gt; r = { \ &apos; b \ &apos; : \ &apos; b \ &apos; , \ &apos; b \ &apos; : \ &apos; b \ &apos; , \ &apos; y \ &apos; : 4 } , \ &apos; b \ &apos; : 3 , \ &apos; y \ &apos; : 3 , \ &apos; y \ &apos; : 3 , \ &apos; y \ &apos; : 3 , \ &apos; y \ &apos; : 3 , \ &apos; y \ &apos; : 3 } , DCNL ... \ &apos; b \ &apos; : 3 , \ &apos; y \ &apos; : 3 , \ &apos; y \ &apos; : 3 , \ &apos; y \ &apos; : 3 , \ &apos; y \ &apos; : 3 } , DCNL ... \ &apos; b \ &apos; : 3 , \ &apos; y \ &apos; : 3 , \ &apos; y \ &apos; : 3 , \ &apos; y \ &apos; : 3 } , DCNL ... \ &apos; b \ &apos; : 3 , \ &apos; y \ &apos; : 3 , \ &apos; y \ &apos;
&apos;Main function for tests . DCNL Args : DCNL script _ dir : A list of command-line arguments . DCNL Returns : DCNL A list of Python modules . &apos;
&apos;Template settings for accounts based on requests DCNL : param settings : DCNL : type settings : DCNL : return : DCNL : type settings : DCNL : return : DCNL : type settings : DCNL : return : &apos;
&apos;Quote URL-encodes characters for a URL . DCNL &gt; &gt; &gt; urlquote ( \ &apos; \ u203d \ &apos; ) DCNL \ &apos; % E2 % 80 % 26j % 3D1 \ &apos; DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote ( None ) DCNL &gt; &gt; &gt; urlquote
&apos;Return the total size of a disk , in bytes DCNL : param path : Path to disk DCNL : return : total size of bytes DCNL : rtype : bytes&apos;
&apos;Take a list of SQL statements and return a list of SQL statements . DCNL Returns a list of SQL statements . &apos;
&apos; : param root _ part : The root part of the root directory . DCNL : type root _ part : str DCNL : param job : The job to use . DCNL : type job : str DCNL : param job : The job to check for . DCNL : type job _ func : bool DCNL : param filter _ func : If True , only the mode will be used ( default ) . DCNL : type filter _ func : bool DCNL : param filter _ func : If True , only the mode will be used . DCNL : type filter _ func : bool DCNL : return : &apos;
&apos;Return the message for the specified channel . DCNL Return value is None . &apos;
&apos;Generate a CSV for an S3 bucket for download and upload the DCNL CSV to an S3 bucket for download . &apos;
&apos;Find whether the VCS package is installed and not . DCNL : param manifest _ in : The version of the package to be installed DCNL : param version _ source : The version of the executable DCNL : param str expression : The version of the executable DCNL : return : True if the VCS package is installed , False otherwise . &apos;
&apos;Get geometryOutput manipulated by the plugins in the manipulation shapes &amp; solids folders . &apos;
&apos;Add a cubic B-spline . DCNL Parameters DCNL el : array _ like DCNL An array of shape ( n , channels , 3 ) . DCNL Returns DCNL sol : ndarray , shape ( n , 3 ) DCNL The derivative of the cubic spline . &apos;
&apos;KEGG list - Displays the results of a given database . DCNL database -- the database to search for . DCNL query -- The query string to search for . DCNL query -- The query string to search for . DCNL * * Return a dictionary of dictionaries that match the given query . &apos;
&apos;Checks if the given version is in the given version . DCNL Args : DCNL name : The name of the version to check . DCNL desired : the desired version . DCNL explicit : the desired version of the desired version . DCNL Returns : DCNL The version of the desired version . &apos;
&apos;Render the content type for the user \ &apos; s content type . DCNL This is used by the admin dashboard widget to find the content type for DCNL the admin dashboard widget . &apos;
&apos;Decorator to define methods that require the given permission . DCNL : param permission : the permission to decorate DCNL : type permission : str DCNL : return : the decorated function DCNL : rtype : function&apos;
&apos;Post the current request \ &apos; s status . DCNL This method is meant to be used as part of the browser . DCNL This method is meant to be used as a GET request . DCNL This method is meant to be used for tracking messages about the DCNL framework . DCNL This method is meant to be used as part of the browser . DCNL This method is meant to be used for tracking messages about the DCNL framework . DCNL This method is meant to be used as part of the browser . &apos;
&apos;Try to log a value as a Unicode string . DCNL &gt; &gt; &gt; print ( safe ( \ &apos; abc \ &apos; ) DCNL u \ &apos; abc def \ &apos; DCNL &gt; &gt; &gt; print ( safe ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc def \ &apos; DCNL &gt; &gt; &gt; print ( safe ( \ &apos; abc \ &apos; ) DCNL u \ &apos; abc def \ &apos; DCNL &gt; &gt; &gt; print ( safe ( \ &apos; abc \ &apos; ) DCNL u \ &apos; abc def \ &apos; DCNL &gt; &gt; &gt; print ( safe ( \ &apos; abc \ &apos; ) DCNL u \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; print ( safe ( \ &apos; abc \ &apos; ) DCNL u \ &apos; abc def \ &apos; DCNL &gt; &gt; &gt; print ( safe ( \ &apos; abc \ &apos; ) DCNL u \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; print ( safe ( \ &apos; abc \ &apos; ) DCNL u \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; print ( safe ( \ &apos; abc \ &apos; ) DCNL u \ &apos;
&apos;Check to make sure url is valid . &apos;
&apos;Test either if an error when there is a single class&apos;
&apos;Given a cluster , return a dict of the following keys : DCNL - \ &apos; id \ &apos; : number of seconds DCNL - now - the current state of the cluster DCNL - \ &apos; max \ &apos; : the maximum number of items to return DCNL - \ &apos; max \ &apos; : the maximum number of items to return DCNL - \ &apos; max \ &apos; : the maximum number of seconds&apos;
&apos;Compute the Area Under the Curve ( AUC ) using the trapezoidal rule DCNL Parameters DCNL y _ true : array-like DCNL The ground truth value . DCNL y _ score : float DCNL The predicted value . DCNL Returns DCNL y : float DCNL The p-value for the area . &apos;
&apos;Return True if the interactive mode is interactive&apos;
&apos;Set dataset of a dataset . DCNL Returns DCNL Dataset instance : DCNL See DATASET _ PROPOSAL.txt for more information . &apos;
&apos;Creates an HTML image for an image . DCNL Parameters DCNL figure : matplotlib.figure.Figure DCNL The figure to be created . DCNL area _ data : dict DCNL The image data . DCNL plot _ info : dict DCNL The data to plot in . DCNL Returns DCNL out : dict DCNL A dictionary containing the image data . &apos;
&apos;Generates a GameState object from a list of nodes . DCNL Arguments : DCNL state : the number of nodes DCNL path : a string containing the name of the file DCNL filename : the name of the file DCNL black _ review _ name : the name of the file DCNL size : the size of the file DCNL size : the size of the file DCNL size : the size of the file DCNL size : the size of the file DCNL size : the size of the file DCNL size : the size of the file DCNL Returns : DCNL A list of ( name , name ) pairs . &apos;
&apos;Create a draft registration DCNL : return : serialized draft registration DCNL : rtype : dict&apos;
&apos;Get the iterator that yields the next item of the item DCNL : param items : list of tuples of ( item , value ) tuples DCNL : type items : list &#91; str &#93; DCNL : param ancestors : ( optional ) DCNL : type ancestors : bool DCNL : return : iterator of ( item , value ) pairs DCNL : rtype : iterator DCNL : rtype : iterator of : class : ` ~ google.cloud.logging.logger.Logger` DCNL : param items : List of tuples of ( item , value ) tuples . DCNL : type ancestors : bool DCNL : return : iterator of tuples of ( item , value ) pairs . DCNL : rtype : list DCNL : returns : iterator of tuples of ( item , value ) pairs DCNL : rtype : iterator DCNL : rtype : iterator DCNL : rtype : iterator DCNL : rtype : iterator DCNL : rtype : iterator DCNL : rtype : iterator DCNL : rtype : iterator DCNL : rtype : iterator DCNL : rtype : iterator DCNL : rtype : iterator DCNL : rtype : iterator DCNL : rtype : iterator DCNL : rtype :
&apos;Ensure that a calendar is written . DCNL Parameters DCNL obs _ symbol : str DCNL The name of the file . DCNL first _ date : pd.Timestamp DCNL The first date . DCNL last _ date : str DCNL The last date . DCNL time : pd.Timestamp DCNL The current date . DCNL time : pd.Timestamp DCNL The current date . DCNL Returns DCNL date : pd.DataFrame DCNL The modified date . &apos;
&apos;Return list of taxa summaries . DCNL Arguments : DCNL sample _ id ( str ) : ID of the cluster . DCNL sample _ id _ map ( dict ) : List of sample ids . DCNL sample _ id _ map ( dict ) : List of sample ids . DCNL Returns : DCNL dict &#91; dict &#93; : List of summaries . &apos;
&apos;Set the element rounded to a slice equivalent . &apos;
&apos;Return the given decimal number according to the given format . DCNL &gt; &gt; &gt; format _ decimal ( 1.2345 , locale = \ &apos; en _ US \ &apos; ) DCNL u \ &apos; 1,234 \ &apos; DCNL &gt; &gt; &gt; format _ decimal ( 1.2345 , locale = \ &apos; en _ US \ &apos; ) DCNL u \ &apos; 1,234 \ &apos; DCNL &gt; &gt; &gt; format _ decimal ( 1.2345 , locale = \ &apos; en _ US \ &apos; ) DCNL u \ &apos; 1,234 \ &apos; DCNL &gt; &gt; &gt; format _ decimal ( 1.2345 , locale = \ &apos; en _ US \ &apos; ) DCNL u \ &apos; 1,234 \ &apos; DCNL &gt; &gt; &gt; format _ decimal ( 1.2345 , locale = \ &apos; en _ US \ &apos; ) DCNL u \ &apos; 1,234 \ &apos; DCNL &gt; &gt; &gt; format _ decimal ( 1.2345 , locale = \ &apos; en _ US \ &apos; ) DCNL u \ &apos; 1,234 \ &apos; DCNL &gt; &gt; &gt; format _ decimal ( 1.2345 , locale = \ &apos;
&apos;Return the number of times the number has been reached . &apos;
&apos;Computes a new ComputeNode and populates the capacity fields DCNL with the most recent data . DCNL If no _ disk _ inventory is specified , the data will be created DCNL as the most recent time . &apos;
&apos;Make sure to make sure they are in the range . DCNL NOTE : Only works in inches . &apos;
&apos;Retrieve instance type access by flavorid . DCNL : raises : FlavorNotFound&apos;
&apos;AUTHENTICATION AND CIPHERING REJECT Section 9.4.8&apos;
&apos;Customize config variables and configuration variables . DCNL This customization is required . DCNL : param config _ config _ vars : dict DCNL : return : DCNL : rtype : dict&apos;
&apos;Test that we can \ &apos; t fit an item in * X * . DCNL In other words , we don \ &apos; t use this as a single item . DCNL See https : / / github.com / astropy / astropy / issues / 5350 DCNL Parameters DCNL X : array-like , shape ( n _ samples , n _ features ) DCNL Array to check . DCNL X : array-like , shape ( n _ samples , n _ features ) DCNL The array to check . DCNL Returns DCNL distances : array , shape ( n _ samples , ) DCNL The index of the two elements . &apos;
&apos;Recursively remove a path . DCNL : param path : Path to the user DCNL : return : True if successful , False otherwise . &apos;
&apos;Run all of the acceptance tests . DCNL : param name : The name of the process to run . DCNL : param deps : List of dependencies to pass to yaml . &apos;
&apos;Get a list of ( key , value ) pairs&apos;
&apos;Read dot graph from Graphviz dot format on path . DCNL Parameters DCNL path : str DCNL Filename to read from . &apos;
&apos;Evaluates the hypergeometric PMF . DCNL k : number of successes DCNL p : the number of successes DCNL p : the p p DCNL Returns : DCNL float&apos;
&apos;Convert a list of strings into a string representation . &apos;
&apos;Helper decorator for getting a bare repository from the database . DCNL : param func : The decorated function to create the repository for . DCNL : return : Wrapped function . &apos;
&apos;Calculates the longest one of the given vectors . DCNL Args : DCNL v1 ( float ) : the inverse operator . DCNL v2 ( float ) : The vectors to calculate the archivable . DCNL Returns : DCNL ~ chainer.Variable : Output variable . &apos;
&apos;Needs no special configuration&apos;
&apos;Search for an entity by name . Nested entities don \ &apos; t want to use this DCNL query . &apos;
&apos;Fail unless a blank line is blank . DCNL Okay : if \ &apos; blank \ &apos; , blank = \ &apos; blank \ &apos; , blank = \ &apos; blank \ &apos; ) DCNL Okay : a = b \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n DCNL Okay : a = b \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n \ n
&apos;Use this decorator to make sure that the callback is safe for a DCNL request . If the callback is not a callable , it will return a DCNL Deferred that will be called with the same method as the Deferred . &apos;
&apos;Remove all the changes made from the user \ &apos; s current database . DCNL If the user has already been added to the current page , then DCNL the new query will be removed from the current page . DCNL : param client : the request object to create . DCNL : param obj _ store : The object to be added to the user . DCNL : param user _ id : The id of the user to create . DCNL : param device _ id : The id of the user to add . DCNL : param request _ id : The request id . DCNL : param request : The request to be used . DCNL : param request : The request to be added to the current page . &apos;
&apos;Builds a service mapping . DCNL Args : DCNL services ( list ) : List of service names to retrieve . DCNL registry _ path ( str , optional ) : The path to the service URI . DCNL Returns : DCNL dict : A dictionary containing the properties of the service . &apos;
&apos;instance is a user object , DCNL return a user object . DCNL : param user : DCNL : param member : DCNL : return : &apos;
&apos;Convert a struct object to a struct object . DCNL Parameters DCNL sub : string DCNL The name of the failure to call . DCNL Returns DCNL code : object DCNL The failure code for the failure . &apos;
&apos;Generate the change of a branch . DCNL : param branch : DCNL : param old _ tag : DCNL : param old _ tag : DCNL : param old _ tag : DCNL : param old _ tag : DCNL : return : &apos;
&apos;Simplify a univariate constant term . DCNL Parameters DCNL x , y : int DCNL Number of variables to be computed . DCNL func : callable DCNL A function that takes two variables . DCNL func : callable DCNL A function to pass to a function . DCNL Returns DCNL coeff : dict DCNL A tuple of ( x , y , z ) pairs , where each value is a tuple of DCNL ( x , y , z ) pairs . The result is a tuple of ( x , y ) pairs . DCNL Examples DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; _ print _ variable _ coeff _ coeff ( x * * 2 + 1 ) DCNL ( x * * 2 + 1 ) DCNL &gt; &gt; &gt; _ print _ variable _ coeff _ coeff ( x * * 2 + 1 ) DCNL ( x , 2 ) DCNL &gt; &gt; &gt; _ print _ variable _ coeff _ coeff ( x * * 2
&apos;Adds an error message to the \ &apos; e \ &apos; header , where the \ &apos; e \ &apos; is an error DCNL or an error message . &apos;
&apos;Compile a function and parse the results . DCNL : param root _ node : The root node of the test tree . DCNL : param * a : The * * kwargs * * kwargs to be passed to the test . DCNL : param * * kw : additional keyword arguments passed to : func : ` ~ mrjob.logs.task. _ _ _ init _ _ ` . &apos;
&apos;Return git _ packages information from osquery DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.list _ packages&apos;
&apos;Sets the amount of vcpus allocated to an existing VM . DCNL : param vm : The VM to update . DCNL : type vm _ name : ``str`` DCNL : param int adapter : The name of the VM to update . DCNL : type config : bool DCNL : param config : Optional Configuration to use to update the machine . DCNL : type config : bool DCNL : return : Number of vcpus DCNL : rtype : int DCNL : rtype : int&apos;
&apos;Execute a running process DCNL CLI Example : DCNL .. code-block : : bash DCNL salt publish.runner manage.down&apos;
&apos;Returns a plural ( word ) -tuple with the word . DCNL &gt; &gt; &gt; words = &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; c \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos;
&apos;Returns the first line of the given object . DCNL If the input is a string , then it is removed from the file . DCNL Args : DCNL obj : the input file . DCNL Returns : DCNL A string containing the first line of the given object . &apos;
&apos;Parse a string entry into a human-readable string . DCNL This function is used to identify a nickname , and MUST be a nickname . DCNL : param entry : entry to be parsed DCNL : returns : a string containing the form ( nickname ) , nickname ) * DCNL : raises : * * ValueError * * if the entry is a valid nickname , * * nickname * * DCNL : returns : * * True * * if the entry is a nickname , * * nickname * * DCNL : raises : * * ValueError * * if the entry is a valid nickname , * * nickname * * DCNL : returns : * * str * * for the section \ &apos; s nickname , * * nickname * * DCNL : returns : * * True * * if the entry is a nickname , * * nickname * * DCNL : returns : * * True * * if the entry is a nickname , * * nickname * * DCNL : returns : * * True * * if the entry is a nickname , * * nickname * *
&apos;Get the details of a network interface . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; ip.get _ interface eth0&apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 4098&apos;
&apos;Set the current user . DCNL @ param p _ md : a media descriptor object . DCNL @ param p _ new _ user _ data : the media player . DCNL @ return : 0 on success , -1 on error . &apos;
&apos;Importing vispy.app should not pull in other languages . &apos;
&apos;Return True if error _ count is given , False otherwise . DCNL Args : DCNL error _ count : int , the number of errors to check . DCNL truth _ count : int , the number of truth errors . DCNL Returns : DCNL True if error _ count is None , False otherwise . &apos;
&apos;Save all translations to the queue . DCNL : param key : The key to save . &apos;
&apos;Extract program variables from code and return list of program variables . DCNL Parameters DCNL code : str DCNL Frequency to find DCNL Returns DCNL list : list DCNL List of program variables . &apos;
&apos;Return the maximum component of a directed graph . DCNL Parameters DCNL G : NetworkX graph DCNL A directed graph . DCNL Returns DCNL edges : list DCNL A list of edges . &apos;
&apos;Estimate the Kendall \ &apos; s Tau correlation from the data . DCNL Parameters DCNL X : ndarray , shape ( n _ samples , n _ times ) DCNL Array containing the data . DCNL order : int , optional DCNL The order of the data . Default is 0 . DCNL method : bool , optional DCNL If True , then the data will be returned . Default is True . DCNL inv : bool , optional DCNL If True , then the data will be returned . Default is True . DCNL inv : bool , optional DCNL If True , then the inverse is used . Default is True . DCNL Returns DCNL out : ndarray , shape ( n _ samples , n _ times ) DCNL The estimated norm of the data . DCNL Notes DCNL This function is based on the inverse of this function . &apos;
&apos;Sets up logging to \ &apos; log _ level \ &apos; and log it if necessary . DCNL This is useful if you want to set the logging level of a DCNL log file if it is not available . &apos;
&apos;Get the result of a class with the given class name . DCNL Example : : DCNL &gt; &gt; &gt; class Foo ( ) : DCNL ... return _ result ( \ &apos; module.Class \ &apos; ) DCNL &gt; &gt; &gt; class Foo ( ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) : DCNL AttributeError : \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; class Foo ( ) : DCNL ... return _ result ( \ &apos; module.Class \ &apos; ) DCNL &gt; &gt; &gt; class Foo ( ) : DCNL ... return _ result ( \ &apos; module.Class \ &apos; ) DCNL &gt; &gt; &gt; class Foo ( ) : DCNL ... return _ result ( \ &apos; module.Class \ &apos; ) DCNL &gt; &gt; &gt; class Foo ( ) : DCNL ... return _ result ( \ &apos; module.Class \ &apos; ) DCNL &gt; &gt; &gt; class Foo ( ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) : DCNL NameError : \ &apos; ... \ &apos; &apos;
&apos;Create a private key pair in a FITS file . DCNL Parameters DCNL path : str DCNL The path to the public key to create . DCNL text : bool , optional DCNL If True , the data is assumed to be a byte string . DCNL passphrase : str , optional DCNL The number of bytes to write to . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . &apos;
&apos;Returns a 2-tuple of ( token , token ) tuples . &apos;
&apos;Get a compute node by its id . DCNL : param context : The security context DCNL : param compute _ id : ID of the compute node DCNL : returns : Dictionary-like object containing the properties of the compute node DCNL Raises ComputeHostNotFound if compute node does not exist . &apos;
&apos;Create an alias for a URL , defaulting to C { url } . DCNL @ param url : The url to connect to . DCNL @ type url : C { str } DCNL @ param factoryFactory : Factory factory that should be used by default , DCNL or C { None } . DCNL @ type contextFactory : C { unicode } or C { None } DCNL @ param args : Additional keyword arguments to use when creating the DCNL C { None } . DCNL @ param kwargs : Keyword arguments to pass to C { factoryFactory } . &apos;
&apos;Try to import the site function from the given path if it exists . DCNL : param path : path to check DCNL : param module : module to check DCNL : param name : name to check DCNL : param modulefile module filename DCNL : param modulefile module name DCNL : return : site function or raise if it doesn \ &apos; t exist or not&apos;
&apos;Return a list of IP addresses DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; network.get _ route eth0&apos;
&apos;User-callable function to create and return a temporary file . DCNL If suffix is specified , the file will be written to the file . DCNL If suffix is specified , the file will be written to the file . DCNL If * prefix * is specified , the prefix will be written to the file . DCNL If \ &apos; prefix \ &apos; is specified , then the file will be written to the file . DCNL If \ &apos; prefix \ &apos; is specified , then the file will be written to the file . DCNL If \ &apos; prefix \ &apos; is specified , the file will be written to the file . DCNL If \ &apos; prefix \ &apos; is specified , the file will be written to the file . DCNL If \ &apos; prefix \ &apos; is specified , the file will be written to the file . &apos;
&apos;Creates a new counter for the given counter . DCNL Args : DCNL name : The name of the counter to provide the rate for . DCNL description : The description of the rate . DCNL unit _ seconds : The number of seconds to add to the counter . DCNL Returns : DCNL The total rate of the counter . &apos;
&apos;Sends a new user to the current user , as defined by the request . DCNL : param user : The user to send . &apos;
&apos;Send e-mail when a review request is closed . DCNL Listens to the : py : class : ` ~ reviewboard.reviews.signals.review _ request _ published` DCNL signal and sends a new review request to the review request . &apos;
&apos;Load roles from list of roles and their roles and their roles . DCNL : param src : the list of roles DCNL : type ds : list of : class : ` ~ subliminal.videos.Video` = &gt; &gt; &gt; list _ list _ of _ roles ( old _ role _ path , group _ manager ) DCNL &#91; \ &apos; user \ &apos; , \ &apos; project \ &apos; , \ &apos; project \ &apos; , \ &apos; project \ &apos; , \ &apos; project \ &apos; &#93; &apos;
&apos;Check that seed is a random number generator . DCNL Parameters DCNL seed : int , shape ( n _ samples , n _ features ) DCNL The seed to use to seed the seed . DCNL Returns DCNL seed : float DCNL The seed for the random number . &apos;
&apos;Get the internal name of the Python data ( eg , KB , MB ) . DCNL Returns a tuple of the internal ( name , name ) tuples . &apos;
&apos;Args : DCNL flowgrams : a list of flowgrams DCNL header : list of strings DCNL filter _ list : list of strings DCNL out _ fh : File-like object to write to . DCNL out _ fh : File file to write to . DCNL out _ fh : File-like object to write to . DCNL out _ fh : File-like object to write to . DCNL out _ fh : File file to write to . &apos;
&apos;Get a resource id . DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ vpc.get _ resource _ id resource _ id myigw&apos;
&apos;Apply policy to the policy tree of policy . &apos;
&apos;TogoWS search ( PRIVATE ) . DCNL Arguments : DCNL - handle - handle to the file DCNL - `alphabet` : The alphabet to use for parsing . DCNL Returns : DCNL tuple ( list , list ) : A tuple of ( name , count ) pairs , where DCNL the first element is the number of characters in the format , DCNL or None if there is no match . DCNL Raises : DCNL ValueError : Raised when the character is not a number of characters . DCNL Otherwise , it is assumed to be the same as the last line of the DCNL last item in the sequence . DCNL Examples : DCNL &gt; &gt; &gt; from Bio import GenBank DCNL &gt; &gt; &gt; from Bio import GenBank DCNL &gt; &gt; &gt; from Bio import GenBank DCNL &gt; &gt; &gt; from Bio import GenBank DCNL &gt; &gt; &gt; from Bio import GenBank DCNL &gt; &gt; &gt; from Bio import GenBank DCNL &gt; &gt; &gt; from Bio import GenBank DCNL &gt; &gt; &gt; from Bio import GenBank DCNL &gt; &gt; &gt; from Bio import GenBank DCNL &gt; &gt; &gt; from Bio import GenBank DCNL &gt; &gt;
&apos;Determine the format of a given request . DCNL Parameters DCNL request : request DCNL The request to use . DCNL serializer : string DCNL The name of the request to use . DCNL default _ format : string , optional DCNL The format of the request . DCNL Returns DCNL format : dict DCNL The format of the request . &apos;
&apos;Add the given string to the indentation level of a string . &apos;
&apos;Like `log _ log _ log ( ) ` , but uses the log entry . &apos;
&apos;Remove a sequence of arrays . DCNL Parameters DCNL code : str DCNL The source code . DCNL count : int , optional DCNL The number of sequences to be removed . DCNL Returns DCNL non _ arrays : list DCNL The list of arrays . DCNL Examples DCNL &gt; &gt; &gt; from sympy.utilities.misc import remove _ arrays DCNL &gt; &gt; &gt; remove _ arrays ( \ &apos; \ n \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; remove _ arrays ( \ &apos; \ n \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; remove _ arrays ( \ &apos; \ n \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; remove _ arrays ( \ &apos; \ n \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; remove _ arrays ( \ &apos; \ n \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; remove _ arrays ( \ &apos; abcd \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; remove _ arrays ( \ &apos; \ &apos; ) DCNL \ &apos;
&apos;Returns DOMname for given properties for CSSname \ &apos; font-style \ &apos; returns DCNL \ &apos; fontStyle \ &apos; . &apos;
&apos;Plot the kernal density of the image in the given data . DCNL Parameters DCNL features : numpy array DCNL The coordinates of the image in which to plot . DCNL labels : tuple of shape ( n _ samples , 3 ) DCNL The vector of labels to plot in . DCNL Returns DCNL fig : matplotlib.figure.Figure DCNL The image of the plot . &apos;
&apos;Run a shell command , returning a 2-tuple of ( stdout , stderr , stderr ) . DCNL If \ &apos; commands \ &apos; is specified , the command is run in the command line . DCNL If \ &apos; commands \ &apos; is specified , the command will be run in the command-line DCNL command . &apos;
&apos;Format the first line of the first line , returning a string that is DCNL the first line of the line . &apos;
&apos;Return a value of ``query`` DCNL or ``hit`` properties of the message if it isn \ &apos; t found . DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; network.ns1.8.0&apos;
&apos;Convert a string representation to a sequence of numbers . &apos;
&apos;Splits words into words into words . DCNL Args : DCNL text ( str ) : Text to split . DCNL chars _ per _ string ( str ) : Number of chars to split . DCNL Returns : DCNL split _ per _ string ( str ) : A list of characters . &apos;
&apos;Given a view path , returns unique temporary file for all DCNL requests . &apos;
&apos;Convert a float value to integer . DCNL @ param value : The value to convert . DCNL @ type value : str DCNL @ param value : The value to convert . DCNL @ type value : int DCNL @ return : The bytes value . DCNL @ rtype : float DCNL @ raise ValueError : if value is not a float . &apos;
&apos;svm _ read _ problem ( data _ file _ name ) - &gt; list DCNL Inputs : DCNL data _ file _ name ( str ) : name of the sample data . DCNL Returns : DCNL list of tuples representing the sample data . &apos;
&apos;Check if Boto is assigned a public IP address on a public IP DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; boto _ vpc.network _ on _ ip _ address _ address = \ &apos; 127.0.0.1 \ &apos; &apos;
&apos;read _ config _ file ( \ &apos; config \ &apos; , context = \ &apos; config \ &apos; ) &apos;
&apos;Returns the default module for this module . DCNL : returns : DCNL : rtype : Union &#91; str , None &#93; &apos;
&apos;A simple representation of an annotation value . &apos;
&apos;Return the first configured instance . &apos;
&apos;Delete an instance profile . DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ iam.delete _ instance _ profile myiprofile&apos;
&apos;Returns the version of the current version . DCNL Parameters DCNL expected : bool DCNL Whether or not the current version we \ &apos; re talking about . DCNL Returns DCNL version : str DCNL The version of the current version . &apos;
&apos;Return the name of the module . DCNL Parameters DCNL name : str DCNL The name of the module . DCNL * * joins : list DCNL The name of the module . DCNL Returns DCNL cost _ name : str DCNL The name of the module . DCNL Returns DCNL cost _ name : str DCNL The name of the module . &apos;
&apos;Return the first element in a sequence . DCNL &gt; &gt; &gt; iterable = iter _ first ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt; &gt; &gt; i.next ( ) DCNL 1 DCNL &gt;
&apos;Calculate the indentation level of the first line . DCNL This function returns the first line of the line . DCNL Args : DCNL first _ token : The first line of the line . DCNL indent _ depth : The number of lines that should end in the line . DCNL Returns : DCNL The first line of the line . &apos;
&apos;Execute a salt on the given function . DCNL This function raises an exception if the user is not available . DCNL This is a wrapper around : py : func : `SecurityError` . DCNL : param fun : The function to run . DCNL : type args : dict DCNL : param args : List of arguments to pass to the function . DCNL : type args : iterable DCNL : param kwargs : Keyword arguments to pass to the function . DCNL : type kw : dict DCNL : return : A tuple of ( args , kwargs ) . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; state.run _ salt DCNL salt \ &apos; * \ &apos; state.run _ salt \ &apos; $ salt \ &apos; * \ &apos; cmd.run \ &apos; &apos;
&apos;Returns the first one that was created on the hadoop test . &apos;
&apos; &gt; &gt; &gt; replace _ replace ( ( \ &apos; a \ &apos; , \ &apos; b \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; ) DCNL &gt; &gt; &gt; replace _ replace ( ( \ &apos; a \ &apos; , \ &apos; b \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; ) DCNL &gt; &gt; &gt; replace _ replace ( ( \ &apos; a \ &apos; , \ &apos; b \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; ) DCNL &gt; &gt; &gt; _ replace _ conditional ( \ &apos; a \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; ) DCNL &gt; &gt; &gt; _ replace _ conditional ( \ &apos; a \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; b \ &apos; ) DCNL &gt; &gt; &gt; _ replace _
&apos;Find the storage \ &apos; s uuid according to the uuid . This is DCNL needed because we don \ &apos; t need to do this . &apos;
&apos;Reads an XML file . DCNL : param str xml _ config _ file : Path to the xml config file DCNL : param str service _ params : Absolute path to the xml file DCNL : param str timeout _ params : additional parameters to return DCNL : return : True if successful , False if not DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; cp.get _ xml _ config file : / / path / to / ssh _ config DCNL : param str xml _ config _ file : Path to the xml file DCNL : param str service _ params : Absolute path to the xml file DCNL : param str timeout _ params : additional parameters to return DCNL : return : True if successful , False if not DCNL : raises : CommandExecutionError on failure DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; cp.get _ xml _ config file : / / foo.xml / to / etc / salt \ &apos; DCNL : param str xml _ config _ file
&apos;Returns the RESET code for a given text . DCNL Valid colors : DCNL \ &apos; black \ &apos; , \ &apos; blue \ &apos; , \ &apos; green \ &apos; , \ &apos; blue \ &apos; , \ &apos; magenta \ &apos; , \ &apos; cyan \ &apos; , \ &apos; white \ &apos; DCNL Valid options : DCNL \ &apos; black \ &apos; , \ &apos; blue \ &apos; , \ &apos; green \ &apos; , \ &apos; blue \ &apos; , \ &apos; magenta \ &apos; , \ &apos; blue \ &apos; , \ &apos; magenta \ &apos; , \ &apos; cyan \ &apos; , \ &apos; white \ &apos; DCNL Valid options : DCNL \ &apos; black \ &apos; , \ &apos; blue \ &apos; , \ &apos; green \ &apos; , \ &apos; blue \ &apos; , \ &apos; magenta \ &apos; , \ &apos; blue \ &apos; , \ &apos; magenta \ &apos; , \ &apos; cyan \ &apos; , \ &apos; white \ &apos; DCNL Valid options : DCNL \ &apos; black \ &apos; , \ &apos; blue \ &apos; , \ &apos; green \ &apos; , \ &apos; blue \ &apos; ,
&apos;Return True if the image is visible in this context . DCNL : param image : The image context . DCNL : param status : The status of the image in this context . DCNL : returns : True if the image is visible in this context . &apos;
&apos;Return the list of two lines that are equal to the first one . DCNL Parameters DCNL first : int DCNL Number of pages that are equal . DCNL second : int DCNL Number of pages that are equal . DCNL msg : str , optional DCNL The message to print . DCNL msg : str , optional DCNL The message to print . DCNL Returns DCNL score : bool DCNL True if the first two elements are equal , False otherwise . &apos;
&apos; &gt; &gt; &gt; remove _ list ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; DCNL &gt; &gt; &gt; remove _ list ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; , \ &apos; b \ &apos; ) DCNL \ &apos; a \ &apos; &apos;
&apos;yaml : shell DCNL Execute a parameter . DCNL : arg str name : the name of the parameter DCNL : arg str name : the name of the parameter ( optional ) DCNL : arg str name : the name of the parameter ( optional ) DCNL : arg str name : the name of the parameter ( optional ) DCNL : arg str name : the name of the parameter ( optional ) DCNL Example : DCNL .. literalinclude : : DCNL / .. / .. / tests / builders / fixtures / parameterized-param001.yaml DCNL : language : yaml&apos;
&apos;Creates an HTTP request . DCNL Args : DCNL url ( str , optional ) : The URL to create . DCNL method ( str , optional ) : The method to use . DCNL body ( str ) : The body of the request . DCNL Returns : DCNL A UserRPC object . &apos;
&apos;Run the command in the command . DCNL : param str command : DCNL String to run in the command . DCNL : param stdin : DCNL String to run in the command . DCNL : param bool strip : DCNL If ``True`` , use 24bit colors instead of 256 characters . DCNL : return : True if successful , otherwise False . &apos;
&apos;Return a valid key for the given node . DCNL : param key : The key for which the key is expired . DCNL : type node : str DCNL : param node : The node for which to check the key . DCNL : type node : str DCNL : param url : The URL for the key . DCNL : type url : str DCNL : returns : The key that was expired . DCNL : rtype : dict&apos;
&apos;Set up a port bridge to be used by Neutron DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; ports.search _ port _ bridge damian&apos;
&apos;Check if line is a docstring . DCNL &gt; &gt; &gt; is _ docstring ( \ &apos; \ n \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ docstring ( \ &apos; \ n \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ docstring ( \ &apos; \ n \ &apos; ) DCNL False&apos;
&apos;Is the directory a package directory ? DCNL Arguments : DCNL dirname : the name of the directory to check DCNL Returns : DCNL True if dirname is a package directory , False otherwise . &apos;
&apos;Generate a cache key for the given request . The request should be a DCNL dict containing the items in the request . &apos;
&apos;Generate a vector based on its version number DCNL Parameters DCNL branch : str DCNL The version to check DCNL status _ tag : string DCNL The name of the phone number to check DCNL Returns DCNL block _ name : string DCNL The number of characters to write to DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; partition.export / dev / sda DCNL salt \ &apos; * \ &apos; system.set _ output \ &apos; / dev / sda1 \ &apos; &apos;
&apos;Parses the HTTP headers for a HTTP header . DCNL http : / / code.google.com / apis / andresriancho / w3af / issues / 9493&apos;
&apos;Helper function for ``build _ ) ( ) `` : returns a 2-tuple of DCNL ( start , end ) pairs . DCNL For example : DCNL &gt; &gt; &gt; ranges = &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos;
&apos;Generate a list of indices for the specified axes . DCNL : param f : DCNL : param values : DCNL : type values : DCNL : return : DCNL : rtype : &apos;
&apos;Secure helper to read file as root . &apos;
&apos;Run a demo with the given input . DCNL Returns a list of FileFormatRoot . &apos;
&apos;Perform a cubic B-spline . DCNL Parameters DCNL x : array _ like DCNL Input array . DCNL tck : tuple DCNL A list of ( x1 , y1 , x2 , y2 ) containing the coefficients of DCNL the spline . DCNL der : int , optional DCNL The degree of the spline . DCNL ext : int , optional DCNL Axis along which to perform the spline . Default is 0 . DCNL Returns DCNL out : ndarray DCNL An array with shape ( n , n ) . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys import ring , ZZ DCNL &gt; &gt; &gt; R , x = ring ( &quot; x &quot; , ZZ ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; , 3 ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \
&apos;Fetches all streams on current event loop DCNL : param plugin : The plugin to open DCNL : type plugin : : class : ` ~ google.cloud.logging.logger.Logger` DCNL : param event : The event interval . DCNL : type interval : int DCNL : return : A list of ( stream , stream ) tuples . &apos;
&apos;Get the size of an image with the given size . DCNL Args : DCNL - ( str ) : The path to the image . DCNL Returns : DCNL A tuple of ( path , size ) where the image is the same as DCNL the size of the image . &apos;
&apos;Adds a locale to the translations list for each locale . &apos;
&apos;Adds &quot; Vary &quot; header in the given HttpResponse object . DCNL newheaders is a list of header names that should be in &quot; Vary &quot; . DCNL newheaders is a list of header names that should be in &quot; Vary &quot; . &apos;
&apos;Returns the given HTML with all unencoded ampersands encoded correctly . &apos;
&apos;Sets the script level for a list of script format DCNL : return : priority of the list DCNL : rtype : dict&apos;
&apos;Replace `` _ _ `` , `` , `` , `` , `` , `` , `` , `` and `` = `` . &apos;
&apos;Get the port of the remote server for the server . DCNL : return : True if successful , otherwise False DCNL : rtype : bool&apos;
&apos; &gt; &gt; &gt; sqllist ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; sqllist ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; sqllist ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; sqllist ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; sqllist ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; sqllist ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; sqllist ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; sqllist ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos;
&apos;Dependencies are expressed as a dictionary . For example : DCNL &gt; &gt; &gt; list ( &#91; 1 , 2 , 3 &#93; , &#91; 1 , 2 , 3 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( states ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( states ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( states ( &#91; 1 , 2 , 3 &#93; , &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( states ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( states ( &#91; 1 , 2 , 3 &#93; , &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos;Create a splunk search DCNL CLI Example : DCNL splunk _ search.create \ &apos; my search name \ &apos; &apos;
&apos;Base name of a regexp from the regular expression . &apos;
&apos;Test that an error is raised with keypoints and 0 if they are DCNL smaller than 0 . DCNL See https : / / github.com / astropy / astropy / pull / 4042&apos;
&apos;Expected product _ first _ image _ _ doc _ _ &apos;
&apos;Iterates over a single chunk of a tree , returning a list of tokens . DCNL For example : : DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; print ( tree.rooted ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; list ( nx.petersen _ tree ( ) ) DCNL ( \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; ) DCNL &gt; &gt; &gt; print ( tree.rooted ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; &#93; &apos;
&apos;Helper function to create an HTTPConnection object . If ssl is True , DCNL HTTPSConnection will be used . However , if ssl = False , BufferedHTTPConnection DCNL will be used , which will be used to connect to the request . DCNL : param ipaddr : IPv4 address to connect to DCNL : param port : port to connect to DCNL : param method : port to connect to DCNL : param method : request method DCNL : param headers : dictionary of headers to use DCNL : param query _ string : query string DCNL : param headers : dict of headers to pass to HTTPConnection object&apos;
&apos;Generate a random NormalFormGame instance with the given number of DCNL possible values . If random _ state is None , a random number generator will DCNL be used . DCNL Parameters DCNL nums _ actions : list of int DCNL Number of actions . DCNL random _ state : int , optional ( default = None ) DCNL The state of the random number generator . Defaults to None . DCNL Returns DCNL p _ actions : list of float DCNL The random number of actions in the list of tuples . DCNL Examples DCNL &gt; &gt; &gt; from sklearn.utils import random _ groups DCNL &gt; &gt; &gt; Permutation.print _ cyclic = True DCNL &gt; &gt; &gt; a = random _ NormalFormGame ( nums ( &#91; 1 , 2 , 3 &#93; ) , random _ state = ( n , 1 ) , ( 2 , 3 ) ) DCNL &gt; &gt; &gt; list ( random _ generator _ actions ( nums ) ) DCNL &#91; ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , (
&apos;Uses \ &apos; use _ sudo _ use \ &apos; to \ &apos; use _ sudo _ platform \ &apos; . &apos;
&apos; : param context : The configuration context to select from . DCNL : type context : dict DCNL : return : A connection to the configuration . DCNL : rtype : dict DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; test.cleanup _ all&apos;
&apos;Return a string representation of a string . DCNL For example : : DCNL &gt; &gt; &gt; str _ format ( \ &apos; 123 \ &apos; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; str _ format ( \ &apos; 123 \ &apos; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; str _ format ( \ &apos; 123 \ &apos; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; str _ format ( \ &apos; 123 \ &apos; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; str _ format ( \ &apos; 123 \ &apos; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; str _ format ( \ &apos; 123 \ &apos; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; str _ format ( \ &apos; 123 \ &apos; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; str _ format ( \ &apos; 123 \ &apos; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; str _ format ( \ &apos; 123 \ &apos; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; xml _ format
&apos;Get all packages for all packages in a directory . DCNL : param files _ dir : directory to run packages in . DCNL : type client _ dir : str DCNL : param client _ dir : directory to run packages from . DCNL : type clean : bool DCNL : return : List of all packages that are running in a directory . DCNL : rtype : list DCNL : returns : a list of all packages that were created in the command line . &apos;
&apos;Return the nearest neighbour sentences . DCNL : param table : Table to query DCNL : type table : str DCNL : param words : list of words to search for DCNL : type words : list DCNL : param query : list of words to search for DCNL : type query : list DCNL : param k : number of words to search for DCNL : type k : int DCNL : param k : maximum number of words to search for DCNL : type k : int&apos;
&apos;Check whether a given name is a valid hash DCNL : param filename : the filename to check DCNL : return : True if the filename is valid , else False DCNL : rtype : bool&apos;
&apos;Return True if the namespace property is mutable in this context . &apos;
&apos;Post a simple function to the current process DCNL : param no _ close : True if you want to create a new file DCNL : type no _ close : bool DCNL : param pidfile : File name of the process to use DCNL : type pidfile : str DCNL : return : True if successful , False if not DCNL : rtype : list &#91; str &#93; &apos;
&apos; * musicpd.org , current playlist section : * DCNL ``listfiles { NAME } `` DCNL Lists the files in the file ``URI`` . DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : * DCNL * Clarifications : *
&apos;Dependencies are expressed as a list of values . DCNL Parameters DCNL func : callable DCNL The function to be used . DCNL grad : callable DCNL The function to be used . DCNL start : int DCNL The number of nodes in the new graph . DCNL start : int DCNL The number of samples to compute . DCNL start : int , optional DCNL The probability of the new list . DCNL Returns DCNL out : ndarray DCNL The new list of values . DCNL Notes DCNL This is done by the : func : ` ~ random.random` function from the DCNL : ref : `User Guide &lt; univariate _ channel &gt; ` . DCNL Parameters DCNL func : callable DCNL The function to be used . DCNL grad : callable DCNL The variables to be used . DCNL start : int DCNL The number of nodes in the new graph . DCNL start : int DCNL The number of values in the new list . DCNL k : int , optional DCNL The probability of the new list . DCNL Returns DCNL out : ndarray DCNL The new list of values . DCNL Notes DCNL
&apos;Returns the global global options dictionary . &apos;
&apos;Return a half-open range &#91; b _ start , b _ start , b _ end ) . Raises an error if DCNL the range doesn \ &apos; t exist . &apos;
&apos;Check if a file is installed . DCNL : param name : DCNL The name of the file to check DCNL : param str path : DCNL The path to check DCNL : return : True if successful , False otherwise&apos;
&apos;Drop database tables for all models with the given engine . &apos;
&apos;Context manager to temporarily override the current state of the current DCNL state file . DCNL Usage : DCNL with _ state ( \ &apos; / foo / bar / baz \ &apos; ) : DCNL with _ state ( \ &apos; / foo / bar / baz \ &apos; ) : DCNL assert _ state ( \ &apos; / foo / bar / baz \ &apos; ) : DCNL with _ state ( \ &apos; / foo / bar / baz \ &apos; , context = \ &apos; / foo / bar \ &apos; ) DCNL with _ state ( \ &apos; / foo / bar / baz \ &apos; ) : DCNL assert _ state = \ &apos; / foo / bar / baz \ &apos; &apos;
&apos;Returns a set of all variables that depend on the given AST . DCNL This is useful when you want to load undeclared variables from the DCNL environment variable at runtime . This is useful when you want to DCNL find all variables that might be found in the context . DCNL &gt; &gt; &gt; meta.find _ undeclared _ variables ( ast ) DCNL &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; DCNL &gt; &gt; &gt; meta.find _ undeclared _ variables ( ast ) DCNL &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; DCNL &gt; &gt; &gt; meta.find _ undeclared _ variables ( ast ) DCNL &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; DCNL &gt; &gt; &gt; meta.find _ undeclared _ variables ( ast ) DCNL &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; DCNL &gt; &gt; &gt; meta.find _ undeclared _ variables ( ast ) DCNL &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; DCNL &gt; &gt; &gt; meta.find _ undeclared _ variables ( ast ) DCNL &#91; \ &apos; foo \ &apos;
&apos;Read a datastore property from a base64 string . &apos;
&apos;Convert unicode to unicode to unicode . &apos;
&apos;Get the order arguments in the given order . DCNL For example : DCNL get _ order _ args ( ) = get _ order _ args ( ) DCNL return _ order _ args ( ) DCNL return _ order _ args ( ) DCNL return _ order _ args ( ) &apos;
&apos;RESTful CRUD controller for options.s3json lookups&apos;
&apos;Get a service or raise if it does not exist . &apos;
&apos;Get a control path for a control service . &apos;
&apos;Save content to disk , if transcripts content exists . &apos;
&apos;Create an empty string or return a non-empty string . DCNL If no arguments are passed , it will be added to the current DCNL connection . &apos;
&apos;Include tasks for all applications in ``INSTALLED _ APPS`` . &apos;
&apos;Return an instance of the : py : class : ` ~ psychopy.visual.Window` DCNL object . DCNL The exception returned by : py : func : ` ~ datetime.datetime` objects . DCNL : param ( str ) : The object to call . DCNL : type _ _ str : str DCNL : param callback : The function to call . DCNL : rtype : bool DCNL : raises : : class : ` ~ datetime.datetime` objects . &apos;
&apos;Writes the contents of a file object DCNL : param i _ dir : the name of the file DCNL : param csv _ dir : the name of the file DCNL : param target _ dir : the name of the file to write DCNL : param file : the name of the file DCNL : param comment : the snippet to write to DCNL : return : a new object DCNL : rtype : str&apos;
&apos;Removes HTML or XML character references and entities from a text string . DCNL Source : http : / / effbot.org / zone / re-sub.htm # unescape-html&apos;
&apos;Return whether we are running in a frozen environment&apos;
&apos;Utility method to get keywords from a list of keywords DCNL Parameters DCNL lexer : list of strings DCNL Returns DCNL keywords : list DCNL List of keywords DCNL Examples DCNL &gt; &gt; &gt; get _ keywords ( &#91; \ &apos; keywords \ &apos; , \ &apos; keywords \ &apos; &#93; ) DCNL &#91; \ &apos; keywords \ &apos; , \ &apos; keywords \ &apos; , \ &apos; keywords \ &apos; &#93; &apos;
&apos;Convert a list of ( x , y ) pairs into a list of ( x , y ) tuples . DCNL If k is an integer , then the first argument will be converted to a DCNL tuple of ( x , y ) where : DCNL &gt; &gt; &gt; ( ( ( ( 1 , 2 , 3 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) ) ) DCNL ( ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 , 4 ) , ( 4 ,
&apos;Returns a model string for the given model string . DCNL If the model _ string is not provided , the model is used . DCNL If the model _ name is not provided , the model is used . &apos;
&apos;Restart the named service DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.restart &lt; service name &gt; &apos;
&apos;Try to determine the full path to the test suite . DCNL This fixture is used to determine if the test is being run in DCNL the test case , and if it \ &apos; s not found in the test , then DCNL the test will be skipped . DCNL This fixture will only be used if you want to skip the test . DCNL This fixture will only be used if you want to skip the test . DCNL This is useful when you want to test things like : DCNL https : / / github.com / astropy / astropy / issues / 179&apos;
&apos;Get the inset complex from the loop . &apos;
&apos;Decorates a function if necessary . DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL .. versionadded : : 0.9.2 DCNL ..
&apos;yaml : python DCNL Execute a Python script . DCNL Requires the Jenkins : jenkins-wiki : `python Plugin &lt; python + Plugin &gt; ` . DCNL : arg str plugin : The name of the plugin to run . ( default \ &apos; \ &apos; ) DCNL : arg str description : The name of the plugin to run . ( optional ) DCNL Example : DCNL .. literalinclude : : / .. / .. / tests / builders / fixtures / system-groovy001.yaml DCNL : language : yaml&apos;
&apos;Read the config file and return a dictionary of options . DCNL Parameters DCNL options : list &#91; str &#93; DCNL List of options to read . DCNL args : list DCNL List of command-line arguments to pass to the config file . DCNL parser : dict DCNL A list of command-line arguments to pass to the config file . DCNL parser : dict DCNL The parser to use for the config file . Default is None . DCNL Returns DCNL config : dict DCNL A dictionary of strings containing the config options . DCNL Examples DCNL &gt; &gt; &gt; import _ config DCNL &gt; &gt; &gt; read _ config ( &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL \ &apos; foo / bar \ &apos; DCNL &gt; &gt; &gt; read _ config ( \ &apos; foo / bar / baz.py \ &apos; ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) : DCNL ValueError : if unable to read the config file DCNL &gt; &gt; &gt; read _ config ( &#91; \ &apos; foo \ &apos; , \ &apos; bar \
&apos;Returns True if IDLE is using a native OS X Tk ( Cocoa or Carbon ) . &apos;
&apos;Compiler factory for the API call . DCNL : param result : The result to be executed . DCNL : rtype : list&apos;
&apos;Return an ``Effect`` for uninstalling the Flocker service from a given name . &apos;
&apos; : param action : action name DCNL : type action : str DCNL : return : resource name or action DCNL : rtype : str&apos;
&apos;Freeze the specified bin DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; syslog _ ng.install DCNL salt \ &apos; * \ &apos; pip.freeze \ &apos; / tmp / bin / apachectl \ &apos; &apos;
&apos;Parse a query part and return a tuple of ( key , value ) pairs . DCNL &gt; &gt; &gt; parse _ query _ part ( \ &apos; http : / / example.com / foo \ &apos; , { \ &apos; a \ &apos; : \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; bar \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; bar \ &apos;
&apos;Set the class to be used when instantiating a class . It is used to DCNL define _ _ init _ _ and _ _ init _ _ ( ) which don \ &apos; t define _ _ init _ _ ( ) . &apos;
&apos;Add a rule \ &apos; s instance \ &apos; s instance if it \ &apos; s not . &apos;
&apos;List datasets for a project . &apos;
&apos;yaml : Jenkins DCNL Trigger checks . DCNL Requires the Jenkins : jenkins-wiki : `Summary Display Plugin DCNL &lt; Version + Plugin &gt; ` . DCNL : arg str cron : cron syntax of this script DCNL : arg bool skip-failed-builds : Whether the build is unstable ( default false ) DCNL : arg bool skip-failed-builds : Whether the build is unstable ( default false ) DCNL : arg bool skip-failed-builds : Whether the build is unstable ( default false ) DCNL Example : DCNL .. literalinclude : : DCNL / .. / .. / tests / publishers / fixtures / github-minimal.yaml DCNL : language : yaml DCNL Full Example : DCNL .. literalinclude : : / .. / .. / tests / publishers / fixtures / check`&apos;
&apos;Retrieve a list of dicts representing a task statuses . DCNL Raises an exception if a task is not available . &apos;
&apos;Test if there is a good keyboard widget to see if the cursor is DCNL visible to a certain key . &apos;
&apos;Create a file from the specified file and write it to the file . DCNL Parameters DCNL object DCNL The object from which to write the file . DCNL passphrase : str DCNL The name of the file in which to write the file . DCNL usecPickle : bool DCNL If True , the file will be written to the file in the file . DCNL protocol : bool , optional DCNL If True , the file will be written to the file in the file . DCNL default : bool , optional DCNL If True , the file will be written to the file in the file . DCNL append : bool , optional DCNL If True , append the file to the file in the file . DCNL append : bool , optional DCNL If True , append the default protocol to the file in the file . DCNL Returns DCNL file : str DCNL The file object in the file . &apos;
&apos;Perform any extension from a given report , as well as the DCNL same results . DCNL This function is called with a custom exception that will be called with DCNL the same results . DCNL Args : DCNL results : The results of the results to be tested . DCNL file _ string : The name of the file to be added . DCNL version _ string : The number of seconds to use . DCNL channel _ string : The channel string to use . DCNL Returns : DCNL A dictionary with the following results : DCNL .. code-block : : python DCNL import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; client = boto3.client ( \ &apos; email \ &apos; ) DCNL &gt; &gt; &gt; result = boto3.client ( \ &apos; email \ &apos; ) DCNL &gt; &gt; &gt; results = &#91; \ &apos; email \ &apos; , \ &apos; email \ &apos; , \ &apos; email \ &apos; , \ &apos; email \ &apos; , \ &apos; email \ &apos; , \ &apos; email \ &apos; , \ &apos; email \ &apos; , \ &apos; email \ &apos; &#93; , DCNL ... \ &apos; email \ &apos;
&apos;Guido \ &apos; s monkeypatch decorator . It can be used to mark a method DCNL as an instance of a class : : DCNL @ monkeypatch _ method ( ) DCNL def my _ method ( self ) : DCNL pass&apos;
&apos;It should download \ &apos; pip install \ &apos; in the scratch path . &apos;
&apos;In kB according to DCNL http : / / stackoverflow.com / questions / 566746 / how-to-get-console-window-width-in-python&apos;
&apos;Test evoked data based on evoked data . DCNL This function is meant to be called from evoked _ data , which is DCNL consistent with the last row of event _ id . DCNL Regression test for https : / / github.com / astropy / astropy / pull / 37778 DCNL https : / / github.com / astropy / astropy / pull / 160&apos;
&apos;Decorator that checks if a rule is a policy or a list of DCNL Check objects . &apos;
&apos;Authenticates against Django \ &apos; s auth database DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; django.check _ password &lt; request &gt; &apos;
&apos;Build an extra parser for the given options and kwargs . DCNL See : func : `get _ help _ help` for more information . &apos;
&apos;Make a cmp _ cmp function for make _ data _ cmp . &apos;
&apos; : param raw : raw raw data from the data DCNL : type raw : bytes DCNL : param packet : the serial port DCNL : type serial : int&apos;
&apos;Run the discrete Fourier transform of a function DCNL Parameters DCNL f : array _ like DCNL The function to be transformed . DCNL numsamples : int DCNL The number of times the test will be computed . DCNL * * kwargs : int DCNL The number of iterations to be used . DCNL * * kwargs : int DCNL The number of iterations to be used . DCNL * * kwargs : int DCNL The number of iterations to be used . DCNL * * kwargs : int DCNL The number of iterations to be used . DCNL * * kwargs DCNL The keyword arguments to pass to the function . DCNL * * kwargs DCNL The keyword arguments passed to the function . DCNL Examples DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL
&apos;Return a range of start and end bounds for a given start rule . DCNL start -- start with start and end DCNL end : Start index of the range DCNL offset : list of ( start , end ) DCNL offset : start date in seconds DCNL offset : list of ( start , end ) DCNL offset : start date in seconds DCNL Returns : DCNL tuple of ( start , end ) -tuple with the start and end of the range DCNL Examples : DCNL &gt; &gt; &gt; get _ range ( &#91; \ &apos; a \ &apos; , \ &apos; red \ &apos; , \ &apos; red \ &apos; , \ &apos; red \ &apos; , \ &apos; red \ &apos; , \ &apos; red \ &apos; , \ &apos; blue \ &apos; , \ &apos; red \ &apos; &#93; , start = \ &apos; red \ &apos; ) , start = \ &apos; red \ &apos; ) DCNL datetime.date ( 2015 , 1 , 2 ) DCNL &gt; &gt; &gt; print ( generate _ range ( start , end ) ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; blue \ &apos; ,
&apos;Render the contents of a file , using the contents of the response . &apos;
&apos;Returns the time of a Process instance . DCNL It \ &apos; s backward compatible with &lt; 2.0 versions of psutil . &apos;
&apos;Create a list of packages for testing . DCNL Examples : : DCNL &gt; &gt; &gt; from fabtools import require DCNL &gt; &gt; &gt; adb.write ( \ &apos; / tmp / \ &apos; ) DCNL &gt; &gt; &gt; adb.write ( \ &apos; / tmp / \ &apos; ) DCNL &gt; &gt; &gt; adb.write ( \ &apos; / tmp / \ &apos; ) DCNL &gt; &gt; &gt; adb.write ( \ &apos; / tmp / \ &apos; ) DCNL &gt; &gt; &gt; adb.write ( \ &apos; / tmp / \ &apos; ) DCNL &gt; &gt; &gt; adb.write ( \ &apos; / tmp / \ &apos; ) DCNL &gt; &gt; &gt; adb.write ( \ &apos; / tmp / \ &apos; ) &apos;
&apos;Determine the disk bus for a disk bus . DCNL Determine the disk bus for a disk bus . DCNL Returns a disk bus for the bus . DCNL If the disk bus is unknown , raises an DCNL exception if the disk bus is unknown . DCNL If the disk bus is unknown , raises an DCNL exception if the disk bus is unknown . &apos;
&apos;Returns the current Linux distribution . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; net.version&apos;
&apos;Gets a virtual interface from the table . DCNL : param vif _ uuid : = uuid of the virtual interface&apos;
&apos;Event : yield a new coroutine for the scheduler . Both the parent DCNL and child coroutines run concurrently . &apos;
&apos;Test that raw _ unicode _ escape is not a valid unicode string . &apos;
&apos;Import obj and return True if it \ &apos; s not . DCNL : param obj : DCNL : param interface : interface to be checked DCNL : return : True or False&apos;
&apos;Run acceptance tests . DCNL : param test _ path : The line to parse . DCNL : arg test _ text : The parser to use when the test should be skipped . DCNL : arg ipython _ text : The parser to run when the test fails . DCNL : raises : : exc : `OSError` . &apos;
&apos;Tests that we don \ &apos; t have data in a numpy array . &apos;
&apos;A version of Django \ &apos; s URL ( for example : DCNL http : / / web.archive.org / web / 20110514113830 / http : / / example.com / foo / bar / baz DCNL : param a : DCNL : type a : string DCNL : param c : ( optional ) DCNL : type c : str DCNL : param c : ( optional ) if present , defaults to \ &apos; / path \ &apos; DCNL : type f : str DCNL : param f : ( optional ) If true , don \ &apos; t want to use the URL DCNL : type f : str DCNL : param r : ( optional ) If true , don \ &apos; t want to use the URL DCNL : type args : dict DCNL : param args : DCNL Extra arguments to pass to the function DCNL : type args : dict DCNL : param args : DCNL Extra arguments to pass to the function DCNL : type args : dict DCNL : param args : DCNL Extra arguments to pass to the function DCNL : type args : dict DCNL :
&apos;Create a named route for a named route . DCNL Deprecated in ckan 2.0&apos;
&apos;Request object information from the container . DCNL : param node : node dictionary from the ring DCNL : param part : partition the container is in DCNL : param account : account name DCNL : param container : container name DCNL : param conn _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ chunk _ size : timeout in seconds for establishing the connection DCNL : param response _ chunk _ size : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL : param response _ timeout : timeout in seconds for establishing the connection DCNL
&apos;Computes the derivation D on k ( p ) from k ( t ) . DCNL Given a derivation D on k ( t ) , return a list of ( p , q ) tuples . DCNL Examples DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import ZZ DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import ZZ DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; c1 = Symbol ( \ &apos; t \ &apos; ) DCNL &gt; &gt; &gt; c1 = Symbol ( \ &apos; t \ &apos; ) DCNL &gt; &gt;
&apos;Given a User object , get the string for the given principal . DCNL Arguments : DCNL principal ( str ) : The principal to get the sid from . DCNL Returns : DCNL str : A string containing the SID . DCNL Returns : DCNL A string containing the SID . DCNL Returns : DCNL A string containing the SID . DCNL Returns : DCNL A string containing the SID . &apos;
&apos;Get a string representation of the object for a given Django view . DCNL If the object is a string , it is assumed to be a valid URL for DCNL the given object . DCNL Example : DCNL &gt; &gt; &gt; get _ object _ for _ view ( request ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ object _ for _ view ( request ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ object _ for _ view ( request ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ object _ for _ view ( request ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ object _ for _ view ( request ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ object _ for _ view ( request ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ object _ for _ view ( request ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ object _ for _ view ( request ) DCNL \ &apos; a \ &apos; DCNL &gt;
&apos;Return a similarity between two numbers and a float between 0 and 0 . &apos;
&apos;decorator for restricting access to login&apos;
&apos;Create and return a Variable that can be used as a simple way . &apos;
&apos;Creates an account for the specified request . DCNL If the user is not logged in , the user is assumed to be able to DCNL be able to access the email . DCNL : param request : Request object DCNL : type request : django.http.HttpRequest DCNL : param params : List of parameters to be created DCNL : type params : dict DCNL : return : A dictionary with information about the account DCNL : rtype : tuple ( str , str ) &apos;
&apos;Compose functions functions DCNL : param functions : function to decorate DCNL : type functions : function DCNL : return : DCNL : rtype : &apos;
&apos;Update an existing Attachment object and update them to a given DCNL task id . &apos;
&apos;Compute the degree of a list of polynomials in `K &#91; x &#93; ` . DCNL Parameters DCNL t : ( N , 3 ) array _ like DCNL Right-hand side DCNL function : callable , optional DCNL The function that takes a list of ( x1 , y1 , x2 , y2 ) . DCNL order : int , optional DCNL The order of the function . DCNL match : int , optional DCNL The order of the search term . DCNL Returns DCNL f : ndarray , ( N , 3 ) , ( N , 3 ) , ( N , 3 ) , ( N , 3 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 ,
&apos;Expected inclusion _ two _ params _ _ doc _ _ &apos;
&apos;Call the given command and call it with the given name . DCNL This is useful for debugging . &apos;
&apos;Store the Milestone and CourseContentMilestones related to the course DCNL course _ content _ key . DCNL Arguments : DCNL course _ key ( CourseKey ) : The course key DCNL prereq _ content _ key ( str ) : The content usage key DCNL Returns : DCNL None&apos;
&apos;Returns the \ &apos; HostAPI \ &apos; attribute from the \ &apos; HostAPI \ &apos; attribute . &apos;
&apos;Run a script with the given context path . DCNL : param script _ path : path to the script file DCNL : type script _ path : str DCNL : param path : path to the script file DCNL : type context : str DCNL : param context : Source context DCNL : type context : ``str`` DCNL : rtype : ``str``&apos;
&apos;Returns a list of IPv4 addresses assigned to the given IPv4 address . DCNL : param addresses : A list of IPv # Address objects . DCNL : return : A list of IPv4 addresses assigned to the given IPv4 address . &apos;
&apos;Element-wise square . DCNL # Arguments DCNL x : input tensor . DCNL # Returns DCNL A tensor . &apos;
&apos;Parameters DCNL data : array _ like ( float , ndim = 1 ) DCNL Matrix to plot . DCNL max _ t : int , optional DCNL Length of the lag . &apos;
&apos;Given a plugin from plugins : return a : class : `PluginError` . &apos;
&apos;Only load if boto libraries exist . &apos;
&apos;Link to a Bokeh Github template . DCNL Arguments : DCNL name ( str ) : name of the file to be removed . DCNL text ( str ) : The text to insert into . DCNL text ( str ) : The line text to insert into . DCNL options ( list ) : Directive options for customization . DCNL content ( str ) : Directive options for customization . DCNL content ( str ) : Directive options for customization . &apos;
&apos;Create a sentence in a list , if it \ &apos; s a positive sentiment ( in case it ) &apos;
&apos;This will cache the contents of a template fragment . DCNL Usage : : DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % } DCNL { % cache % }
&apos;Unlocks a entity by id . DCNL : param entity _ id : The ID of the entity to lock . &apos;
&apos;Returns the version of the L { Version } . DCNL @ return : The version of the L { Version } . DCNL @ rtype : C { int } &apos;
&apos;Returns an iterator over the data of a blob . DCNL Args : DCNL blob : The BlobKey of the blob . DCNL start _ index : The start index of the blob . DCNL end _ index : The end index of the blob . DCNL Returns : DCNL A UserRPC object . &apos;
&apos;Variance of the x * x * and y * x * * y DCNL Parameters DCNL x : array _ like DCNL Array containing the data to compute DCNL y : array _ like DCNL The x and y coordinates of the data DCNL fs : float , optional DCNL The window for which to compute the window . DCNL window : int , optional DCNL The window size of the window . DCNL window : int , optional DCNL The window size of the window . DCNL Returns DCNL x : array , shape ( n _ samples , n _ times ) DCNL Array containing the data of x and y . DCNL Notes DCNL This function is based on the * x * and * x * and * y * and * y * DCNL and the output of * x * is the size of the window . DCNL See Also DCNL Bendat &amp; Piersol -- Random Data : Analysis and Measurement DCNL Procedures , John Wiley &amp; Sons , 1996 , chapter 5 . DCNL http : / / en.wikipedia.org / wiki / Welch \ &apos; s _ _ init _ _
&apos;Attempt to check the output of a subprocess . DCNL Return None if the command is not found . DCNL Parameters DCNL command : str DCNL The command to check DCNL cwd : str DCNL The path to the command to check DCNL cwd : str DCNL The path to the command to check DCNL env : bool DCNL If True , return the output to be printed to stdout . DCNL Returns DCNL None&apos;
&apos;Run the test module \ &apos; s reverse directory&apos;
&apos;Scroll page down the page , after scrolling up and down the page . DCNL Used for scroll half of the page . &apos;
&apos; &lt; string &gt; -- Gets the current issue &lt; string &gt; with the given issue . DCNL This is meant to be used in conjunction with the custom site \ &apos; s browser . DCNL : param text : The text to be removed . DCNL : type text : str DCNL : return : The string to be removed . DCNL : rtype : str&apos;
&apos;Decorator to skip tests that need test . &apos;
&apos;Return ( x , y , y ) - &gt; ( row , col , row ) . &apos;
&apos;Validate the user \ &apos; s password . DCNL Checks the user \ &apos; s password and returns the user \ &apos; s password . DCNL If the user doesn \ &apos; t exist , raises an error if the user doesn \ &apos; t DCNL exist . DCNL : param user : The user to validate . DCNL : type user : str DCNL : param password : The password to validate . DCNL : type password : str DCNL : return : The user \ &apos; s password . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; ssh.validate _ password &lt; user &gt; &lt; password &gt; &apos;
&apos;Helper function that raises an exception if the status is not DCNL required . DCNL : param status _ int : HTTP status status DCNL : returns : None&apos;
&apos;Get the object for a given object . &apos;
&apos;Get the service instance from the config file . &apos;
&apos;Wrap a function , return a L { Deferred } that will be called with DCNL C { f } and C { f } and C { f } . DCNL @ param f : A function to pass to L { f } . DCNL @ param args : The arguments to pass to L { f } . DCNL @ param * * kw : Keyword arguments to pass to L { f } . DCNL @ return : A L { Deferred } that fires with C { f } and C { f } and C { f } . DCNL @ rtype : L { Deferred } &apos;
&apos;Add a tool plugin menu . &apos;
&apos;Skip a test if the test case is not available . DCNL @ param test : The test case to check . DCNL @ type test : C { str } DCNL @ return : The decorated test . DCNL @ rtype : C { str } &apos;
&apos;Returns the cached grains modules DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; sys.list _ minion _ funcs DCNL salt \ &apos; * \ &apos; sys.list _ functions \ &apos; s grains \ &apos; &apos;
&apos;Connect a network DCNL container DCNL Container name or ID DCNL network _ id DCNL ID of network DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion dockerng.connect _ container _ to _ network container = bridge&apos;
&apos;Add a list to the list table . &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 326&apos;
&apos;Publish feature for all tests . &apos;
&apos;Sets up the arguments as arguments . DCNL Args : DCNL arg _ dict : Dictionary of bulkloader options . DCNL client _ parameters : Dictionary of arguments . DCNL Returns : DCNL A dictionary of bulkloader options . &apos;
&apos;Only load if boto libraries exist . &apos;
&apos;For the given media type , finds the best match for the given DCNL media _ type . DCNL For example : DCNL &gt; &gt; &gt; class _ and _ quality ( \ &apos; q \ &apos; , \ &apos; q \ &apos; ) DCNL ( \ &apos; q \ &apos; , \ &apos; q \ &apos; , \ &apos; q \ &apos; ) DCNL &gt; &gt; &gt; list _ and _ parsed _ parsed _ diff ( \ &apos; q \ &apos; ) DCNL ( \ &apos; q \ &apos; , \ &apos; q \ &apos; , \ &apos; q \ &apos; ) DCNL &gt; &gt; &gt; class _ and _ parsed _ parsed ( \ &apos; a \ &apos; , \ &apos; q \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; q \ &apos; ) DCNL &gt; &gt; &gt; list _ and _ parsed _ parsed _ diff ( \ &apos; q \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; q \ &apos; ) DCNL &gt; &gt; &gt; list _ and _ parsed _ parsed _
&apos;Convert string to native string DCNL &gt; &gt; &gt; native ( \ &apos; \ &apos; , \ &apos; \ &apos; ) DCNL u \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; native ( s , \ &apos; \ &apos; ) DCNL u \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; native ( s , \ &apos; \ &apos; ) DCNL u \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; native ( s , \ &apos; \ &apos; ) DCNL u \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; native ( s , \ &apos; \ &apos; ) DCNL u \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; native ( s , \ &apos; \ &apos; ) DCNL u \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; native ( \ &apos; \ &apos; , \ &apos; \ &apos; ) DCNL u \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; native ( \ &apos; \ &apos; , \ &apos; \ &apos; ) DCNL u \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; native ( s , \ &apos; \ &apos; ) DCNL u \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; native (
&apos;Test the initialisation of the object&apos;
&apos;Get the version information about the current version DCNL : param version : DCNL : type version : str DCNL : return : DCNL : rtype : &apos;
&apos;Get the revision number in the revision , or None if there is no DCNL revision . DCNL Returns the path of the revision , or None if no revision is found . &apos;
&apos;Test that an error is raised when sample was called at fitting DCNL and sampling&apos;
&apos;List all packages in the opkg database DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.get _ selections DCNL salt \ &apos; * \ &apos; service.get _ db&apos;
&apos;Tries to determine the cache group \ &apos; s revisions in the current DCNL system \ &apos; s group . DCNL : param current : current instance DCNL : param desired : the desired state of the system DCNL : return : True if the system exists on the system , False if not DCNL : raises : CommandExecutionError on user not found or not found DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; win _ diff _ cache _ group _ group S-1-5-21-123 \ &apos; &apos;
&apos;Remove all the cached tables in the database DCNL : param indexerid : Show to cache DCNL : return : &apos;
&apos;unmount a master config file if it does not exist . DCNL Args : DCNL service : The name of the master service to check . DCNL Returns : DCNL True if the server is mounted , False otherwise . &apos;
&apos;Get or return an empty list if it does not exist . DCNL : param list _ list : DCNL : param i : DCNL : param default : DCNL : return : &apos;
&apos;Return a function that encodes a given value as necessary . DCNL Example : DCNL .. code-block : : python DCNL u \ &apos; * \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; ) &apos;
&apos;Get extra fill loops for surrounding loops . &apos;
&apos;decorator ( caller , caller ) decorates a function using a caller . &apos;
&apos;Updates the exploration summary of a exploration . &apos;
&apos;Remove a full request request with the specified HTTP request . DCNL : param fuzzable _ request : The request request to clean up DCNL : param dc _ handler : The request name , as a string , or a string DCNL : param dc _ handler : The full path to the request , as a string DCNL : return : The full request object&apos;
&apos;Return the value of a I { Z } from A C { Set } to C { -1 } . &apos;
&apos;Return absolute url to absolute asset url . &apos;
&apos;Create a new resource record for the given resource type and namespace . DCNL : param context : context to create DCNL : param namespace _ name : name of the namespace to create DCNL : param values : dictionary of values to create DCNL : param session : SQLAlchemy session DCNL : param session : SQLAlchemy session DCNL : param session : SQLAlchemy session DCNL : return : updated query&apos;
&apos;Converts the value of a field to the given dtype . DCNL Parameters DCNL initial _ type : str DCNL The initial type of the value to be converted . DCNL missing _ value : int DCNL The value of the new value . DCNL array : bool DCNL Whether or not the value is the same as the default value . &apos;
&apos;Returns True if var is equal . &apos;
&apos;Install the Salt thin archive . DCNL : param argv : The command-line arguments to run . DCNL : return : The full path to the test . &apos;
&apos;Create a new figure manager instance for the given figure . &apos;
&apos;Return a copy of the default x in ``K &#91; x &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys import ring , ZZ DCNL &gt; &gt; &gt; R , x = ring ( &quot; x &quot; , ZZ ) DCNL &gt; &gt; &gt; _ default _ 2D _ array ( &#91; 1 , 2 , 3 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos;Make sure the key is emitted by the config . &apos;
&apos;Decodes a sequence of bytes into a list of tuples . DCNL &gt; &gt; &gt; decode _ feedback _ tuple ( ( \ &apos; a \ &apos; , \ &apos; b \ &apos; ) ) DCNL ( \ &apos; A \ &apos; , \ &apos; b \ &apos; ) DCNL &gt; &gt; &gt; decode _ feedback _ tuple ( ( \ &apos; a \ &apos; , \ &apos; b \ &apos; ) ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; decode _ feedback _ tuple ( ( \ &apos; a \ &apos; , \ &apos; b \ &apos; ) ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; decode _ feedback _ tuple ( ( \ &apos; a \ &apos; , \ &apos; b \ &apos; ) ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; decode _ feedback _ tuple ( ( \ &apos; a \ &apos; , \ &apos; b \ &apos; ) ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; decode _ feedback _ tuple ( ( \ &apos; a \ &apos; , \ &apos; b \ &apos; ) ) DCNL \ &apos; A \ &apos; DCNL
&apos;Submits a task to be run in a task . DCNL Returns a list of tasks for each task in the task . DCNL : param worker : task to execute DCNL : type worker : task DCNL : return : list of tasks that were completed DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of tasks DCNL : rtype : list of
&apos;Remove all templates from a directory . DCNL : param dirname : path to the directory DCNL : type dirname : str DCNL : return : a list of ( \ &apos; contents \ &apos; , \ &apos; contents \ &apos; ) pairs DCNL : rtype : list&apos;
&apos;Generate a random genome for each batch of data . DCNL Arguments : DCNL data ( list of ints ) : data to generate DCNL batch _ size ( int ) : size of the batch DCNL num _ num ( int ) : number of columns to skip DCNL skip _ window ( int , optional ) : whether to skip the batch DCNL data _ index ( int ) : the number of columns to skip DCNL data _ index ( int ) : the number of columns to skip DCNL data _ index ( int ) : the number of columns to skip DCNL data _ index ( int ) : the number of columns to skip DCNL data _ index ( int ) : the number of columns to skip DCNL data _ index ( int ) : the index of the data to skip DCNL data _ index ( int ) : the index of the data to be used DCNL data _ index ( int ) : the index of the data to be used DCNL data _ index ( int ) : the index of the data to skip DCNL Returns : DCNL
&apos;Return a sort key for the given item \ &apos; s key . DCNL Parameters DCNL item : object DCNL The item to use for sorting . DCNL order : int , optional DCNL The order of the sort key . DCNL Returns DCNL sort _ key : list or tuple DCNL The sort key . DCNL Examples DCNL &gt; &gt; &gt; from sympy import default _ sort _ key DCNL &gt; &gt; &gt; default = default _ sort _ key ( \ &apos; abc \ &apos; ) DCNL &gt; &gt; &gt; default _ sort _ key ( \ &apos; abc \ &apos; ) DCNL ( \ &apos; D \ &apos; , \ &apos; D \ &apos; ) DCNL &gt; &gt; &gt; default _ sort _ key ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; default _ sort _ key ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; default _ sort _ key ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; default _ sort _ key ( \ &apos; abc \ &apos; )
&apos;Add metadata for the specified aggregate . &apos;
&apos;Removes comments from the given code in the given code . See DCNL https : / / github.com / andresriancho / w3af / issues / 1446 / DCNL : param code : The code that should be removed from the code . DCNL : type code : str DCNL : return : The cleaned string . &apos;
&apos;Get vector3 vertexes from attribute dictionary . &apos;
&apos;Serialize a dataset to a dataset . DCNL name DCNL The name of the dataset to serialize . DCNL dataset DCNL The name of the dataset to serialize . DCNL dataset _ pillar DCNL The name of the dataset to be serialized . DCNL user DCNL The user to run in the dataset . DCNL user DCNL The user to run the dataset . DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; zfs.dump &lt; dataset name &gt; DCNL salt \ &apos; * \ &apos; debconf.set _ file salt : / / pathto / pkg.selections&apos;
&apos;Merge a list of dictionaries and merge them into a list of DCNL dictionaries . DCNL Parameters DCNL by : dict DCNL A list of dictionaries . DCNL on : { \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; } , optional DCNL The \ &apos; left \ &apos; , \ &apos; right \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , DCNL \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos;
&apos;Set the interactive mode to a matplotlib figure . DCNL This should be called after every pylab drawing command&apos;
&apos;Raises an exception if the given language is available . DCNL : param msg : The name of the request . DCNL : type msg : str DCNL : param lang : The language code to use . Defaults to None . DCNL : type lang : str DCNL : return : The full language code for the current request . &apos;
&apos;Revoke cluster administration privileges for a user . DCNL name DCNL The name of the user to revoke . DCNL object _ name DCNL The name of the object to revoke . DCNL object _ type DCNL The type of the user to revoke . DCNL user DCNL The name of the user to revoke . DCNL user DCNL The user to connect to . DCNL password DCNL The user to connect to . DCNL password DCNL The user to connect to . DCNL password DCNL The user to connect to . DCNL password DCNL The user to connect to . DCNL password DCNL The user to connect to . DCNL password DCNL The user to connect to . DCNL password DCNL The user to connect to . DCNL password DCNL The user to connect to . DCNL password DCNL The user to connect to . If not specified , the user will be run DCNL in the user . DCNL user DCNL The user to connect to . If not specified , the user will be run DCNL in the user . DCNL password DCNL The user to connect to . If not specified , the user will be
&apos;Makes sure the distance passed in looks like a distance field . &apos;
&apos;Return number of file size from a fileobj . DCNL Parameters DCNL fileobj : str DCNL A file-like object . DCNL Returns DCNL size : int DCNL The size of the file . &apos;
&apos;executes the given command and parse it as a list of plugins . DCNL This is useful when you want to make sure to make sure that the DCNL command line does not exist , and we can \ &apos; t know what you want . DCNL : param argv : A list of command-line arguments to add to . DCNL : return : A dictionary with the following keys : DCNL - command : DCNL - cli : DCNL - command : DCNL - cli DCNL - cli : DCNL - cli : / / / / / / / / / / / / / / / / / / / / / / / / / / / / foo / bar / DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; test.cli DCNL salt \ &apos; * \ &apos; nginx.cli / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; nginx.cli / usr / bin / apachectl DCNL salt \ &apos; * \ &apos; test.cli \ &apos; http : / / stackoverflow.com / a
&apos;Return an iterator over all the style files for a style directory . DCNL : param style _ dir : the name of the style directory . DCNL : type style _ dir : list DCNL : return : A list of ( filename , name ) tuples . &apos;
&apos;Get function to return path . DCNL @ param path _ or _ file : path to file DCNL @ type path _ or _ file : string DCNL @ param context : Context object DCNL @ type context : dict DCNL @ return : globals ( ) &apos;
&apos; &gt; &gt; &gt; try _ except ( False ) DCNL Traceback ( most recent call last ) : DCNL UnboundLocalError : local variable \ &apos; a \ &apos; DCNL &gt; &gt; &gt; try _ except ( True ) DCNL Traceback ( most recent call last ) : DCNL UnboundLocalError : local variable \ &apos; a \ &apos; DCNL &gt; &gt; &gt; try _ except ( True ) DCNL Traceback ( most recent call last ) : DCNL UnboundLocalError : local variable \ &apos; a \ &apos; DCNL &gt; &gt; &gt; try _ except ( True ) DCNL Traceback ( most recent call last ) : DCNL UnboundLocalError : local variable \ &apos; a \ &apos; DCNL &gt; &gt; &gt; try _ except ( True ) DCNL Traceback ( most recent call last ) : DCNL UnboundLocalError : local variable \ &apos; a \ &apos; DCNL &gt; &gt; &gt; try _ except ( True ) DCNL Traceback ( most recent call last ) : DCNL UnboundLocalError : local variable \ &apos; a \ &apos; DCNL &gt; &gt; &gt; try _ except ( True ) DCNL Traceback ( most recent call last ) : DCNL UnboundLocalError : local variable \ &apos;
&apos;Check if the supplied port is handled by a trunk . DCNL : param port _ name : Name of the port to check DCNL : type port _ name : str DCNL : return : True if the port is handled , otherwise False DCNL : rtype : bool&apos;
&apos;This is a decorator which can be used to mark functions DCNL as deprecated . It will result in a warning being emmitted DCNL when the function is used . &apos;
&apos;Average Directional Movement Index Rating&apos;
&apos;Return a copy of the given image . DCNL Parameters DCNL theta : array _ like DCNL The input image . DCNL theta : array _ like DCNL The input image . DCNL output _ size : int DCNL The size of the image . DCNL filter : bool , optional DCNL If True , then the output will be thresholded to determine the DCNL result of the result . DCNL Returns DCNL out : ndarray DCNL The transformed data . DCNL References DCNL .. &#91; 1 &#93; http : / / docs.scipy.org / doc / scipy-0.14.0 / reference / generated / scipy.ndimage.interpolation.affine _ transform.html &gt; ` _ DCNL References DCNL .. &#91; 1 &#93; http : / / docs.scipy.org / doc / scipy-0.14.0 / reference / generated / scipy.ndimage.interpolation.affine _ transform.html &gt; ` _ DCNL References DCNL .. &#91; 1 &#93; http : / / docs.scipy.org / doc / scipy-0.14.0 / reference / generated / scipy.ndimage.interpolation.affine _ transform.html &gt; ` _ DCNL References DCNL .. &#91; 1 &#93; http : / / docs.scipy.org / doc / scipy-0.14.0 / reference / generated / scipy.ndimage.interpolation.affine _ transform.html &gt; ` _ DCNL Examples DCNL &gt; &gt; &gt; import matplotlib.pyplot as plt DCNL
&apos;Compute connectivity matrix from source space . DCNL Parameters DCNL src : SourceSpaces DCNL The source space . DCNL dist : float , optional DCNL Maximal geodesic distance ( in dist ) . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL connectivity : sparse COO matrix DCNL The connectivity matrix describing the spatial source space . &apos;
&apos;Make sure event _ data has been cleaned up . &apos;
&apos;Return True if the specified DNS is enabled , False otherwise . &apos;
&apos;Return a list of all non-overlapping matches in the string . DCNL If no match is found , the iterator is returned . If the match is not DCNL found , the iterator will be returned . &apos;
&apos;Remove the job with the specified job DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; data.store _ job opts = \ &apos; salt \ &apos; DCNL salt \ &apos; * \ &apos; data.store _ job opts = \ &apos; salt \ &apos; \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \ temp \
&apos;Emit an XML document for the given `input _ dict` ( defaults to XML ) . DCNL The `pretty` parameter ( default = `False` ) is used . &apos;
&apos;Return a connection with a connection . DCNL : param alias : The name of the alias to connect to . DCNL : param pool : A connection to connect to . DCNL : return : A connection to the connection . &apos;
&apos;Index a slice of dimension . DCNL Each element is a list of integers , each element is a list of DCNL integers , each element is a list of integers . Each element is DCNL a list of integers , each element is a list of integers . &apos;
&apos;Given a list of strings , return a list of tuples , with the following keys : DCNL &#91; \ &apos; a \ &apos; , \ &apos; val \ &apos; , \ &apos; val \ &apos; , \ &apos; val \ &apos; , \ &apos; val \ &apos; &#93; DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; val \ &apos; &#93; , &#91; \ &apos; a \ &apos; , \ &apos; val \ &apos; &#93; , &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; , DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; val \ &apos; &#93; , &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; , DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; , DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos;
&apos; : param module : The module to add DCNL : param check : A check ( optional ) DCNL : return : True if the module is present , False otherwise . &apos;
&apos;Retrieve a list of e-mail IDs for a given request . DCNL This is a convenience function for storing the user ( s ) as a DCNL Revision in the given database . DCNL : param trans : Object to get the database from . DCNL : type trans : str DCNL : param params : List of resource IDs . DCNL : type params : dict DCNL : param data _ obj : Object to get the results from . DCNL : type ic : str DCNL : param controller : The name of the resource . DCNL : type controller : str DCNL : param controller : A string ( Optional ) DCNL : type controller : str DCNL : return : A list of dictionaries&apos;
&apos;Try to parse the HTTP response info for a HTTP response . DCNL If the value is not an error , it will be sent to an error . &apos;
&apos;Insert a resource definition , and add them to the deepest subclass . DCNL This function takes care of the deepest subclass , but it doesn \ &apos; t DCNL have the same name , but we don \ &apos; t want to add them . DCNL : param classes : List of spyne.model classes that we want to add . DCNL : type cls : Iterable &#91; str &#93; DCNL : param yields : A list of resource classes . DCNL : rtype : list &#91; str &#93; &apos;
&apos;Helper function to create a sane standard output from a given DCNL filename . DCNL Args : DCNL hists : list of strings containing the results file DCNL lines : list of strings containing the results file DCNL start _ line : A CleansedLines instance containing the file . DCNL start _ linenum : The number of the line to write to . DCNL Returns : DCNL A tuple of ( filename , line ) tuples . &apos;
&apos;Parse a list of tokens into a list of tokens . DCNL : param s : The string to parse . DCNL : type s : str DCNL : param name : The name of the string to parse . DCNL : type name : str DCNL : param name : The name of the function . DCNL : type name : str DCNL : return : The parsed string . DCNL : rtype : str&apos;
&apos;Prects a key based on a list of key names . &apos;
&apos;Create a scorer . DCNL Parameters DCNL score _ func : callable DCNL The scorer object . DCNL n _ func : callable , optional DCNL If True , the first element of the first callable will be DCNL returned . DCNL Returns DCNL scorer : callable DCNL The scorer . &apos;
&apos;Recursive helper function . DCNL : param context : a context object . DCNL : param seq : a tuple of ( name , value ) tuple . &apos;
&apos;Create an entity from protobuf response from a protobuf response . DCNL : type date: : class : ` ~ google.cloud.grpc.vision.v1.html _ annotator _ pb2.FaceAnnotation` DCNL : param tokens : Protobuf instance of ``Face`` . DCNL : rtype : : class : ` ~ google.cloud.grpc.vision.v1.html _ annotator _ pb2.FaceAnnotation` DCNL : returns : A protobuf object from a protobuf response . &apos;
&apos;A view that returns a response object&apos;
&apos;Splits the string into a list of strings . If the string is not DCNL found , returns None . DCNL : param str str : The string to split . DCNL : return : A tuple containing the parsed string , or None if the string DCNL cannot be found . &apos;
&apos;Return a list of all style files for the given style directory . DCNL Args : DCNL style _ dir : list of strings , the names of the style to be read . DCNL Returns : DCNL A list of dictionaries . &apos;
&apos;Get the number of the points which should be joined with the word . &apos;
&apos;Return a HttpResponse whose contents should be rendered as a URL . DCNL For example : DCNL render _ home ( \ &apos; app _ name \ &apos; , \ &apos; app _ name \ &apos; ) &apos;
&apos;Parameter : String . DCNL Returns : The string , with each instance of &quot; -- &quot; translated to DCNL an en-dash HTML entity , and the &quot; --- &quot; translated to DCNL an em-dash HTML entity . &apos;
&apos;A helper function to generate a secure mode . DCNL Parameters DCNL args : list of str DCNL The arguments to write to . DCNL Returns DCNL mask : ndarray DCNL A string of the form \ &apos; s \ &apos; , \ &apos; 0755 \ &apos; , \ &apos; 0755 \ &apos; , \ &apos; svg \ &apos; , \ &apos; 0755 \ &apos; , \ &apos; svg \ &apos; , \ &apos; svg \ &apos; , \ &apos; magenta \ &apos; , \ &apos; svg \ &apos; , \ &apos; svg \ &apos; , \ &apos; magenta \ &apos; , \ &apos; svg \ &apos; , \ &apos; 0755 \ &apos; , \ &apos; svg \ &apos; , \ &apos; svg \ &apos; , \ &apos; magenta \ &apos; , \ &apos; svg \ &apos; , \ &apos; svg \ &apos; , \ &apos; magenta \ &apos; , \ &apos; svg \ &apos; , \ &apos; svg \ &apos; , \ &apos; magenta \ &apos; , \ &apos; ext4 \ &apos; , \ &apos; svg \ &apos; , \ &apos; magenta \ &apos; , \ &apos; svg \ &apos; , \ &apos; magenta \ &apos; , \ &apos;
&apos;Given a dictionary that matches the input dictionary and returns an DCNL empty dictionary . DCNL Args : DCNL dictionary : A dictionary . DCNL Returns : DCNL A dictionary with the following keys : DCNL Raises : DCNL ValueError : If the dictionary does not exist . &apos;
&apos;Module-specific port of the project . DCNL This is useful for example : DCNL https : / / github.com / sopel-irc / sopel / wiki / Using-the-meetbot-module&apos;
&apos;Returns a titlecased version of the column \ &apos; s title . For example : DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt; &gt; &gt; title = title ( \ &apos; title \ &apos; ) DCNL &gt;
&apos;Set an existing retention period . DCNL Args : DCNL client ( botocore.client.EC2 ) : Boto3 client . DCNL stream _ name ( str ) : Name of the Kinesis Stream . DCNL retention _ period ( int ) : Name of the retention period . DCNL action ( str ) : Name of the retention period . DCNL Kwargs : DCNL action ( bool ) : If True , raises an error if the user is invalid . DCNL Default is True ( default ) . DCNL check _ mode ( bool ) : If True , raises an error if the user is invalid . DCNL Default is True . DCNL Returns : DCNL bool : Whether or not the retention period is invalid . &apos;
&apos;document.vulnerable should absolutely not be linkified . &apos;
&apos;Signs the string as a string and sign it with the sign DCNL of the signature . DCNL @ param string _ to _ sign : the string to sign DCNL @ type string _ to _ sign : str DCNL @ return : the sign string DCNL @ rtype : string&apos;
&apos;Get the values if it exists . &apos;
&apos; : param request : The request to check . DCNL : type request : django.http.HttpRequest DCNL : param response _ format : A date in which we are interested in DCNL : type response _ format : bool&apos;
&apos;Test that we can parse a single column names with one column DCNL that can be read with \ &apos; include \ &apos; . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 407035 # issuecomment-24870&apos;
&apos;Given a filename , return the filename of the test database . &apos;
&apos;Show the display of an IPython clip in the specified filetype . DCNL If the value is not specified , it will be displayed . &apos;
&apos;pairwise distance matrix DCNL Parameters DCNL input : array _ like DCNL The input matrix . DCNL metric : str , optional DCNL The vector to transform . DCNL sample : int , optional DCNL Axis along which to calculate the ordering . DCNL default _ indices : bool , optional DCNL Whether to normalize the ordering . DCNL indices : scalar ( int ) , optional ( default = True ) DCNL The index of the index . DCNL indices : scalar ( int ) , optional ( default = True ) DCNL The index of the index . DCNL indices : tuple ( int , ndim = 1 ) DCNL The index of the index . DCNL indices : tuple ( int , ndim = 1 ) DCNL The index of the index . DCNL indices : tuple ( int , ndim = 1 ) DCNL The index of the index . DCNL indices : tuple ( int , ndim = 1 ) DCNL The index of the index . DCNL indices : tuple ( int , ndim = 1 ) DCNL The index of the index . DCNL indices : tuple of int , optional DCNL
&apos;Called by the ServiceTester in order to create a temporary file DCNL in the filesystem . &apos;
&apos;Load a CSR . DCNL : param str names : `OpenSSL.crypto.FILETYPE _ PEM` or `OpenSSL.crypto.FILETYPE _ ASN1` DCNL : returns : A CSR . DCNL : rtype : dict&apos;
&apos;Add an OpenStack request to an existing request . DCNL : param zope.interface.Interface interface : The interface to connect to . DCNL : param original : The original request to be enabled . &apos;
&apos;Import and return the translations for the given locale . DCNL If no _ unit _ url is given , we don \ &apos; t need to do this . &apos;
&apos;Get group type by name . DCNL : param context : behave context DCNL : param name : name of group type ( optional ) DCNL : return : Group type or None&apos;
&apos;Get a list of GitHub releases by a project . DCNL Args : DCNL project ( str ) : The project that the repository is built . DCNL Returns : DCNL dict : A dictionary containing the URLs . &apos;
&apos;Configure the SSL context . DCNL : param host : The host to connect to . DCNL : type host : str DCNL : param port : Port to connect to . DCNL : type port : str DCNL : param port : Port to connect to . DCNL : type port : int DCNL : param use _ ssl : If True , override default auth token DCNL : type user : str DCNL : param use _ ssl : If True , override default auth token DCNL : type auth _ token : str DCNL : param auth _ token : auth token DCNL : type auth _ token : str DCNL : param auth _ token : auth token DCNL : type auth _ token : str DCNL : param auth _ token : auth token DCNL : type auth _ token : str DCNL : param auth _ token : auth token DCNL : type auth _ token : str DCNL : param auth _ token : auth token DCNL : type auth _ token : str DCNL : param auth _ token : auth token DCNL : type auth _ token : str DCNL :
&apos;load _ item _ types ( ) returns a list of Item types . &apos;
&apos;Takes a list of command-line options and join them into a list of DCNL parts . DCNL : param options : Parsed command options . DCNL : type options : list &#91; str &#93; DCNL : rtype : ``list``&apos;
&apos;Fake view that returns a fake view . &apos;
&apos;RESTful CRUD controller for options.s3json lookups&apos;
&apos;Add a field to the user \ &apos; s field . DCNL If the user has the given field , it is assumed to be in the form DCNL of the user \ &apos; s field . &apos;
&apos;Set the marker directory to test if it \ &apos; s not found DCNL Args : DCNL folder ( str ) : name of the marker file DCNL Returns : DCNL None&apos;
&apos;Bind a floating IP address to a specific IP address DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; netscaler.vserver _ floating _ ip \ &apos; 45.55.96.47 \ &apos; &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 362&apos;
&apos;Rename document . DCNL : param doctype : DocType of the document to be renamed&apos;
&apos;A function to connect to a bigip device and delete a transaction . DCNL hostname DCNL The host / address of the bigip device DCNL username DCNL The iControl REST username DCNL password DCNL The iControl REST password DCNL label DCNL The label of the transaction stored within the transaction DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; bigip.commit _ transaction bigip admin admin my-pool 10.2.2.1 : 80&apos;
&apos;Executes a command and return a string representation . DCNL Args : DCNL stdout : A string containing the arguments to be executed . DCNL stderr : A string containing the arguments to pass to the command . DCNL args : A string containing the arguments to pass to the command . DCNL error _ msg : A string to pass to the command line . &apos;
&apos;cast ( cast ( x , shp ) ) - &gt; Join ( x , shp ) &apos;
&apos;Marks a string as False . DCNL Sample usage : : DCNL { % firstof var1 var2 var3 as myvar % } DCNL This is equivalent to : : DCNL { % firstof var1 var2 var3 as myvar % } DCNL This is equivalent to : : DCNL { % firstof var1 var2 var3 as myvar % } DCNL This is equivalent to : : DCNL { % firstof var1 var2 var3 as myvar % } DCNL This is equivalent to : : DCNL { % firstof var1 var2 var3 as myvar % } DCNL This is equivalent to : : DCNL { % firstof var1 var2 var3 as myvar % } DCNL This is equivalent to : : DCNL { % firstof var1 var2 var3 as myvar % } DCNL This is equivalent to : : DCNL { % firstof var1 var2 var3 as myvar % } DCNL This is equivalent to : : DCNL { % firstof var1 var2 var3 as myvar % } DCNL This is equivalent to : : DCNL { % firstof var1 var2 var3 as myvar % } DCNL This is equivalent to : : DCNL { % firstof var1 var2 var3 as myvar
&apos;Return an int representing the number of unallocated cpus on this DCNL hypervisor DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; virt.freecpu&apos;
&apos;tests that we don \ &apos; t going to fail when we don \ &apos; t have to fail when DCNL there \ &apos; s not going to fail when we don \ &apos; t have to fail . &apos;
&apos;Get a list of the addresses of an interface . DCNL : param rep _ description : The description of the interface . DCNL : return : a list of the IPv4 addresses . &apos;
&apos; .. versionadded : : 2015.8.0 DCNL Return a list of all available services DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion lxc.list&apos;
&apos;Determine if the given configuration is GCE . DCNL Returns : DCNL True if the instance is GCE , False otherwise . &apos;
&apos;Test whether the trainning estimator is used to test the DCNL model . DCNL Parameters DCNL fname : str DCNL The data matrix . DCNL Returns DCNL sol : ndarray , shape ( n _ samples , n _ features ) DCNL The fitted estimator . DCNL pval : float DCNL The pvalue from the test model . DCNL pval : float DCNL The pvalue from the test model . &apos;
&apos;Recursive helper for : func : `dmp _ list _ list` . &apos;
&apos;Updates a quota quota . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; neutron.update _ quota tenant-id DCNL salt \ &apos; * \ &apos; neutron.update _ quota tenant-id DCNL salt \ &apos; * \ &apos; neutron.update _ quota tenant-id profile = openstack1 DCNL : param tenant _ id : ID of the tenant DCNL : param subnet : ID or name of the subnet DCNL : param port : ID or name of the subnet DCNL : param port : Profile to build on ( Optional ) DCNL : param security _ group _ rule : Profile to build on ( Optional ) DCNL : param security _ group _ rule : Profile to build on ( Optional ) DCNL : param profile : Profile to build on ( Optional ) DCNL : param profile : Profile to build on ( Optional ) DCNL : param profile : Profile to build on ( Optional ) DCNL : param profile : Profile to build on ( Optional ) DCNL : param profile : Profile to build on ( Optional ) DCNL : param profile : Profile to build on ( Optional )
&apos;Return a tuple of ( url , url ) pairs for the specified resource . DCNL If the URL is not a valid URL , it is assumed to be the correct DCNL URL for the next URL . &apos;
&apos;Test cache _ cache ( ) on a deactivated cache . &apos;
&apos;args = \ &apos; exitStatus \ &apos; : &lt; exit-status-of-external-command &gt; , DCNL \ &apos; stdoutData \ &apos; : &quot; string &quot; , DCNL \ &apos; stderrData \ &apos; : &quot; string &quot; &apos;
&apos;Convert a string of characters to code1 to code2-1 includes any DCNL characters . DCNL : param s : The string to be converted . DCNL : type s : str DCNL : return : A list of characters . DCNL : rtype : A list of characters . &apos;
&apos;Recursively walk a file path DCNL : param file _ path : Absolute path to the file DCNL : return : List of failed files DCNL : rtype : list&apos;
&apos;Wait for a given image status to a specified image status DCNL Args : DCNL client ( botocore.client.EC2 ) : Boto3 client DCNL image _ id ( str ) : The id of the image DCNL status ( str ) : The status of the specified image status DCNL Returns : DCNL None&apos;
&apos;Returns a filename that can be used to generate a profile image filename for DCNL the given name . DCNL Args : DCNL name : the name of the profile file . DCNL size : A string containing the name of the file . DCNL file _ extension : A string containing the name of the file . DCNL Returns : DCNL A string containing the filename of the image file . &apos;
&apos;Get the login class of the minion DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; user.get _ loginclass foo&apos;
&apos;Returns the full path to a specific file DCNL : param recursive _ file : DCNL Relative file to search for . DCNL : type search _ file : str DCNL : param search _ directory : The directory to search for . DCNL : type search _ directory : str DCNL : return : The full path to the file DCNL : rtype : list&apos;
&apos;Return the URL for the home page . &apos;
&apos;Raises an AssertionError if x is not a numpy array . DCNL Args : DCNL x ( numpy.ndarray or cupy.ndarray ) : The object to check . DCNL y ( numpy.ndarray or cupy.ndarray ) : The desired object . DCNL err _ msg ( str ) : The error message to check . DCNL verbose ( bool ) : If ``True`` , the conflicting values are DCNL returned . DCNL .. seealso : : : func : `numpy.testing.assert _ array _ equal`&apos;
&apos;Load authentication token from session and persistent storage . &apos;
&apos;Reload the cached localzone . You need to call this if the timezone has changed . &apos;
&apos;Make a map from test data to a single column . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 326&apos;
&apos;Use this function to run the command line arguments and prints DCNL the results to the current process \ &apos; s options . DCNL Returns the result as a dict with the keys \ &apos; name \ &apos; and \ &apos; name \ &apos; . &apos;
&apos;Custom Formstyle for FilterForm DCNL @ param form : a form field DCNL @ param fields : the fields to be converted DCNL @ type fields : dict DCNL @ return : the style of the form DCNL @ rtype : dict&apos;
&apos;Obtain the uptime for the show version . &apos;
&apos;Check that the value is a list of integers . DCNL &gt; &gt; &gt; vtor.check ( \ &apos; a \ &apos; , \ &apos; 1 \ &apos; ) DCNL Traceback ( most recent call last ) : DCNL VdtTypeError : the value \ &apos; s \ &apos; is the wrong type . &apos;
&apos;Test that precision is raised with precision . DCNL Regression test for https : / / github.com / astropy / astropy / pull / 4042&apos;
&apos;Only load if the splunk module is available in _ _ salt _ _ &apos;
&apos;Decorator that adds the default values to the default defaults for DCNL the standard Django view functions . &apos;
&apos;Insert an item into a list . &apos;
&apos;Parse a number of strings into a number . &apos;
&apos;Determine if there is a pending file name that have been reached . DCNL : return : True if there are pending file names , False otherwise . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; system.get _ pending _ file _ name&apos;
&apos;Fix the raw HTML represented as a string in raw&apos;
&apos;Bivariate Gaussian distribution for * X * , * Y * , * Y * . DCNL Parameters DCNL X : array-like , shape ( n _ samples , n _ features ) DCNL Y : array-like , shape ( n _ samples , n _ features ) DCNL Y : array-like , shape ( n _ samples , n _ features ) DCNL Array of shape ( n _ samples , n _ features ) . DCNL grad : array-like , shape ( n _ samples , ) DCNL Array of shape ( n _ samples , n _ features ) . DCNL grad : array-like , shape ( n _ samples , ) DCNL Array of shape ( n _ samples , n _ features ) . DCNL grad : array-like , shape ( n _ samples , ) DCNL Array of shape ( n _ samples , n _ features ) . DCNL Returns DCNL x : array , shape ( n _ samples , n _ features ) DCNL The variance of the normal distribution . &apos;
&apos;Handles an admin \ &apos; s name . DCNL : param request : HTTP request DCNL : return : an empty string DCNL : raises : * * IOError * * if an error is found . &apos;
&apos;Translate a shell-like wildcard pattern to a regular expression . DCNL Return a compiled regex object , or None if no match is found . &apos;
&apos;sample _ f : dict of mapping file ids to list of sample ids DCNL valid _ states _ str : list of states DCNL Returns : list of tuples ( sample _ ids , column _ ids ) DCNL mapping _ ids : list of tuples of ( sample _ ids , status _ list ) &apos;
&apos;Converts \ &apos; s \ &apos; to \ &apos; s \ &apos; . &apos;
&apos;Return a copy of a string with the given delimiter . DCNL Parameters DCNL a : string DCNL The name of the file to be converted . DCNL sep : string , optional DCNL The separator to use for each line . DCNL comment : bool , optional DCNL If True , then the output will be added to the end of the DCNL line . DCNL Returns DCNL out : callable DCNL A function with the first line of the string . DCNL Examples DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; a = ( \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; z \ &apos; ) DCNL &gt; &gt; &gt; print ( colorize ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; z \ &apos; , \ &apos; z \ &apos; , \ &apos; z \ &apos; , \ &apos; z \ &apos; , \ &apos; z \ &apos; , \ &apos; z \ &apos; , \ &apos; z \ &apos; &#93; DCNL
&apos;Test the significance of a test model . DCNL Parameters DCNL raw : ndarray , shape ( n _ samples , n _ features ) DCNL List of events . DCNL events : array-like , shape ( n _ samples , n _ features ) DCNL The number of events to test . DCNL tmin : float , int , int , or None DCNL The number of epochs to test . DCNL tmin : float , int , int , or None DCNL The number of epochs to use . Defaults to None . DCNL Returns DCNL r : ndarray , shape ( n _ samples , n _ epochs ) &apos;
&apos;Create a JSON representation of the given object and return a DCNL tuple of ( name , value ) pairs . The result is a list of DCNL ( key , value ) pairs , where the value is a list of DCNL ( key , value ) pair . &apos;
&apos;Compute logarithmic option in a range . DCNL Parameters DCNL min _ order : int , optional DCNL Maximum number of columns to compute DCNL max _ scale : int DCNL Maximum number of points to compute DCNL max _ scale : int , optional DCNL Maximum number of angles to be added DCNL max _ scale : int , optional DCNL Maximum number of angles to be converted DCNL max _ scale : int , optional DCNL Maximum number of angles to be converted DCNL max _ scale : int , optional DCNL Maximum number of angles to be added DCNL Returns DCNL ret : array , shape ( n _ samples , n _ times ) DCNL The transformed values . DCNL Notes DCNL This function is jit-complied by Numba . DCNL References DCNL .. &#91; 1 &#93; http : / / en.wikipedia.org / wiki / Histogram _ Delta` DCNL Examples DCNL &gt; &gt; &gt; from sympy.ntheory.residue _ ntheory import compute _ array _ scale DCNL &gt; &gt; &gt; compute _ val _ scale ( 2 , max _ scale = 2 ) DCNL array ( &#91; 1 , 2 , 3 &#93; , &#91; 3 ,
&apos;Get vector3 vertexes from attribute dictionary by arguments . &apos;
&apos;Generates a graph for a given list of nodes . DCNL Returns a list of ( x , y ) for the given list . &apos;
&apos;Return True if \ &apos; main \ &apos; is a 64 bit ( 32 or 64 ) . &apos;
&apos;Returns a list of ( name , profile ) tuples for the given username . &apos;
&apos;Wait until the operation is complete . DCNL : type operation : : class : `google.cloud.operation.Operation` DCNL : param operation : Operation to wait . DCNL : type max _ attempts : int DCNL : param max _ attempts : Number of attempts to wait for the operation . DCNL : type max _ attempts : int DCNL : rtype : bool&apos;
&apos;Dummy implementation of _ thread.exit ( ) . &apos;
&apos;Check if the value is a list . DCNL .. versionadded : : 2014.7.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; environ.is _ list&apos;
&apos;Returns random integer value in given range DCNL &gt; &gt; &gt; random.seed ( 0 ) DCNL &gt; &gt; &gt; random.seed ( 0 ) DCNL &gt; &gt; &gt; randomRange ( 1 , 500 ) DCNL 423&apos;
&apos;hash a file , returning the hash object DCNL @ param filename : file name DCNL @ type filename : file DCNL @ param size : size of chunks&apos;
&apos;Format the output of a biom table . DCNL Inputs : DCNL bt - biom table object . Described at top of library . DCNL test _ stats : list of biom table objects . Described at the moment . DCNL sample _ key : list of integers , the key to use for the library . DCNL increment _ key : string , the key to use for the key . DCNL increment _ key : dict , the key to use in the dictionary . &apos;
&apos;unixtime is seconds since the epoch&apos;
&apos;Get the ACLs of the current key for the given parameters . DCNL : type params : : class : `Request` . DCNL : param password : The password to authenticate to . DCNL : type password : str DCNL : param password : The password to connect to . &apos;
&apos;Helper function for ``build _ index ( ) `` : returns a list of ElementTree.Element DCNL objects , which are extracted from the xml tree . &apos;
&apos;Set the method method to create an instance of the method . &apos;
&apos;Convert a string to a file name . DCNL Arguments : DCNL display -- the display name DCNL name -- the name of the file DCNL Returns : DCNL The name of the string&apos;
&apos;gpu _ from _ gpu ( dot22 ) - &gt; GpuSparseBlockOuter ( inplace = True ) &apos;
&apos;Load a template tag library module . DCNL Verifies that the \ &apos; tag \ &apos; attribute is used in the template module . &apos;
&apos;Example : : DCNL { % get _ pagination % } DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL {
&apos; &lt; text &gt; -- Encode &lt; string &gt; with &lt; string &gt; . &apos;
&apos;Decorator for validation errors . DCNL validator : DCNL code _ or _ name ( str ) : the name of the validator DCNL validator _ type ( str ) : a validator function to validate DCNL validator _ type ( str ) : the type of validator for the validator DCNL Returns : DCNL validator function for the validator function . DCNL Raises : DCNL TypeError : if a validator is not a validator function . &apos;
&apos;p ( a , b ) - &gt; list of numbers DCNL Given a , b , a and b are expressed as a and b . &apos;
&apos;Returns a WSGI filter app for use with paste.deploy . &apos;
&apos;Return internal settings object . DCNL Return : DCNL String containing the settings module . &apos;
&apos;Adds two individuals to a list of individuals . DCNL The function must be a list of individuals to be mutated . DCNL : param individual : Individual to be mutated . DCNL : returns : A tuple of two individuals . DCNL : rtype : : class : ` ~ random.random` function from the : class : `random` module . &apos;
&apos;Logs out the user if he is logged in . Then redirects to the log-in page . &apos;
&apos;Creates a relationship ( model , model ) pairs for a model . DCNL : param model : model object DCNL : param instance : model instance of the model DCNL : param model : model instance of the model DCNL : param model : model instance of the model DCNL : type model : string DCNL : return : relationship ( str ) or tuple of ( model , model ) pairs DCNL : rtype : dict&apos;
&apos;Validates and raise ValueError if user does not exist . DCNL Raises ValueError if user does not exist . &apos;
&apos;Return a numpy array with all elements in the graph . DCNL Parameters DCNL G : graph DCNL A NetworkX graph DCNL nodelist : list , optional DCNL The order of the elements in the graph . DCNL order : int , optional DCNL The order of the edge in the graph . DCNL order : int , optional DCNL The order of the edge in the graph . DCNL order : int , optional DCNL The order of the edge in the graph . DCNL weight : integer , optional ( default = \ &apos; weight \ &apos; ) DCNL The edge attribute that will be included in the graph . DCNL Default is \ &apos; weight \ &apos; . DCNL weight : integer , optional ( default = \ &apos; weight \ &apos; ) DCNL The edge attribute that will be included in the graph . DCNL Default is \ &apos; weight \ &apos; . DCNL weight : integer , optional ( default = \ &apos; weight \ &apos; ) DCNL The edge attribute that will be included in the graph . DCNL Default is \ &apos; weight \ &apos; . DCNL weight : integer , optional DCNL
&apos;Returns a copy of all zeros filled with the given dtype . DCNL This function does not support ``order`` and ``subok`` options . DCNL Args : DCNL a ( cupy.ndarray ) : Base array . DCNL dtype : Data type specifier . DCNL Returns : DCNL cupy.ndarray : An array filled with zeros . DCNL .. seealso : : : func : `numpy.zeros`&apos;
&apos;Clean up the database from the database and remove them from the current DCNL database . This is meant to be called from scheduler&apos;
&apos;If s is a string , return the given object . DCNL If the given string is given , it will be returned as-is . &apos;
&apos;Use an object to delete an object using the appropriate permissions . DCNL Templates : `comments / delete.html` , DCNL Context : DCNL model DCNL The model to delete DCNL post _ delete _ url DCNL The URL to delete the object for . Default is None . DCNL slug _ name DCNL The name of the template to delete . If not specified , the DCNL template will be deleted . DCNL slug _ name DCNL The name of the template to be deleted . If not specified , DCNL the template will be deleted . DCNL template _ name DCNL The name of the template to be deleted . Defaults to False . &apos;
&apos;Ensures that the user has already been deleted . DCNL Args : DCNL client ( botocore.client.EC2 ) : Boto3 client . DCNL to _ delete ( str ) : The ID of the role to check . DCNL to _ delete ( str ) : The role to check . DCNL Returns : DCNL True if the role has already been deleted . &apos;
&apos;Download a page with a given URL . DCNL @ param url : The URL for the page . DCNL @ type url : L { unicode } DCNL @ param contextFactory : An optional response object . DCNL @ param response _ transform : Optional arguments to pass to the response . DCNL @ param kwargs : Keyword arguments to pass to the response . DCNL @ return : A deferred which fires with the result of a page . DCNL @ rtype : L { Deferred } &apos;
&apos;Set the value of a variable . &apos;
&apos;Monitor the stats of the specified configuration . DCNL This is based on the following keys : DCNL .. code-block : : yaml DCNL beacons : DCNL journald : DCNL journald : DCNL Specify the configuration to be turned into a dict . DCNL .. code-block : : yaml DCNL beacons : DCNL journald : DCNL journald : DCNL Specify the configuration to load . DCNL .. code-block : : yaml DCNL beacons : DCNL journald : DCNL journald : DCNL junos : DCNL - zsh DCNL - tgt : \ &apos; * \ &apos; DCNL - config : { DCNL \ &apos; status \ &apos; : \ &apos; blink \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; blink \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; 172.17.17.1 \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; 172.17.17.1 \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; 172.17.17.1 \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; 172.17.17.1 \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; 172.17.17.1 \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos;
&apos;Tests the hardware address of a regression . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 479 . &apos;
&apos;Draws a model from a model . DCNL Parameters DCNL name : str DCNL Name of the model . DCNL g _ train : dict , shape ( n _ samples , ) DCNL List of layers . DCNL d _ train : ndarray , optional DCNL List of layers . DCNL data _ per _ epoch : scalar , optional DCNL The number of samples to train for training data . DCNL batch _ size : int , optional DCNL The number of samples to train for training data . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL train _ op : ndarray , shape ( n _ samples , n _ samples , n _ features ) DCNL Output data . DCNL Notes DCNL This function is meant to be used for training , but might be more DCNL than once . DCNL References DCNL .. &#91; 1 &#93; http : / / github.com / ryankiros / skip-thoughts / blob /
&apos;Rebuild a tree node . DCNL Takes care of the : py : func : ` ~ ckanext.datastore.logic.action.datastore _ search _ list` . DCNL : param remove _ unknown _ ids : If True , remove all of the children for the DCNL given node . DCNL : param remove _ disabled _ topic : If True , remove all matching topics from the DCNL parent tree . DCNL : param remove _ disabled _ data : If True , remove all matching topics from the DCNL parent tree . DCNL : param call _ data : list of dicts that will be removed from the API . DCNL : param call _ data : list of dicts that will be removed from the API . DCNL : param raw _ data _ data : list of dictionaries that will be added to the DCNL topic tree . DCNL : return : A list of tuples containing the keys and values . DCNL : rtype : tuple ( list , list ) &apos;
&apos;command : LET variable EQUALS expr&apos;
&apos;Get the contents of a file DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; cp.get _ spec file _ base DCNL salt \ &apos; * \ &apos; cp.get _ file salt : / / path / to / file&apos;
&apos;Compute polynomial composition ``f ( g ) `` in ``GF ( p ) &#91; x &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.domains import ZZ DCNL &gt; &gt; &gt; from sympy.polys.galoistools import gf _ compose _ mod DCNL &gt; &gt; &gt; gf _ compose _ mod ( &#91; 3 , 2 , 3 &#93; , 5 , ZZ ) DCNL &#91; 2 , 3 &#93; &apos;
&apos;Function to create an iterator over a list of items in a queryset . DCNL This is useful when you want to create an iterator over a single chunk , DCNL so we don \ &apos; t need to count the entire object . DCNL See http : / / github.com / django / pull / issues / 3268 &gt; ` _ . &apos;
&apos;Make a random tweet and return it as a string . &apos;
&apos;Wraps _ func ( ) as a decorator that sets a \ &apos; callback \ &apos; argument to DCNL an object \ &apos; s positional argument . &apos;
&apos;Returns boolean array index indicating whether or not the intercept&apos;
&apos;Validates the length of a string . DCNL Args : DCNL name : Name of the property . DCNL value : String value . DCNL max _ len : Maximum length of the value . DCNL Raises : DCNL OverflowError if the value is too long . &apos;
&apos;Takes a list of iterable and returns a generator that can be used as a generator . DCNL Parameters DCNL iterable : iterable DCNL A list of iterable objects . DCNL Returns DCNL ret : list DCNL A list of tuples , where each element is a list of tuples . DCNL Examples DCNL &gt; &gt; &gt; from sympy.utilities.iterables import preprocess _ rst DCNL &gt; &gt; &gt; list = { \ &apos; x \ &apos; : 1 , \ &apos; y \ &apos; : 3 , \ &apos; y \ &apos; : 3 , \ &apos; x \ &apos; : 3 , \ &apos; x \ &apos; : 3 , \ &apos; y \ &apos; : 3 } DCNL &gt; &gt; &gt; f = { \ &apos; x \ &apos; : 1 , \ &apos; y \ &apos; : 3 , \ &apos; x \ &apos; : 3 , \ &apos; y \ &apos; : 3 } DCNL &gt; &gt; &gt; f = { \ &apos; x \ &apos; : 1 , \ &apos; y \ &apos; : 3 , \ &apos; x \ &apos; : 3 , \ &apos; y \ &apos; : 3 } DCNL &gt; &gt; &gt;
&apos;Return the Tool Shed URL , eliminating the protocol if the URL exists . &apos;
&apos;Make a function that raises an exception if it can \ &apos; t be imported . DCNL Args : DCNL fn : A function to decorate . DCNL Returns : DCNL A function that raises an exception if it can \ &apos; t be imported . &apos;
&apos;Register a single request to the \ &apos; request \ &apos; response . &apos;
&apos;Reconstitute a : class : `.OrderingList` objects . DCNL Args : DCNL config : A dictionary containing the properties of the configuration . DCNL full _ path : The location of the configuration . DCNL Returns : DCNL A dictionary containing the properties of the configuration . DCNL Raises : DCNL ValueError : If the configuration is not supported . &apos;
&apos;Transform ACL keys into network Swift ACL format . DCNL : param acl _ dict : ACL dict to convert . DCNL : return : dict&apos;
&apos;Tests the virtual version of the virtual machine \ &apos; s release version . DCNL The virtual name is the virtual name of the virtual machine . &apos;
&apos;Mark a task as done . &apos;
&apos;Create a new dataset . DCNL : param id : the id or name of the dataset DCNL : type id : string DCNL : param id : the id or name of the dataset DCNL : type id : string DCNL : rtype : dictionary&apos;
&apos;Copies the contents of a remote file to a remote machine . DCNL If the remote host is not specified , it will be copied to the DCNL remote machine . DCNL : param reactor : The reactor to use . DCNL : param username : The username of the remote machine to run . DCNL : param host : The host to run the files in . DCNL : param remote _ path : The path to the remote machine to run . DCNL : param local _ path : The path to the local file to run . DCNL : param int local _ path : The path to the local file to run . DCNL : param int port : The port to use to the remote machine . DCNL : param int port : The port to use to the remote machine . DCNL : param int port : The port to use to the remote machine . DCNL : param int port : The port to use to the remote machine . DCNL : return : A ``Deferred`` that fires when the remote file is copied . &apos;
&apos;Samples a 2D tensor . DCNL Parameters DCNL batch _ size : int , shape ( n _ samples , n _ features ) DCNL The size of the desired layer . DCNL p _ list : list of ints , shape ( n _ samples , n _ features ) DCNL The input variable . DCNL outputs _ words : list of int , shape ( n _ samples , n _ features ) DCNL The input variable . DCNL targets : list of int , optional DCNL The output of the new graph . DCNL targets : dict , optional DCNL A list of shape ( n _ samples , n _ features ) . DCNL targets : bool , optional DCNL If True , the output will be returned . DCNL Returns DCNL fig : instance of matplotlib.figure.Figure DCNL The transformed data . &apos;
&apos;Adds prefixes to the required label tag . DCNL : param original _ function : The original function to add to . DCNL : return : The rendered HTML tag . &apos;
&apos;Test that the script can be run with a non-zero python tests . DCNL This function is intended to be used in tests like this : DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues / 120&apos;
&apos;Check that we don \ &apos; t want to import all the tests in tests . DCNL This is useful for tests that don \ &apos; t want to do things like DCNL https : / / github.com / ipython / ipython / issues / 108&apos;
&apos;Tries to find an element with clickable . DCNL : param context : behave context DCNL : param by : A behave context DCNL : param wait _ time : The wait time to wait for . DCNL : return : True if the element is found , False otherwise . &apos;
&apos;Load a list of issues from the datasets ( bulk _ data ) . DCNL Parameters DCNL bulk _ data : list of lists DCNL List of issues in the datasets . DCNL additional _ fields : list DCNL List of additional fields to include in the datasets . DCNL Returns DCNL list of lists DCNL List of all issues in the datasets . &apos;
&apos;Returns a Style object . DCNL Args : DCNL string _ ( str ) : The string to be parsed . DCNL Returns : DCNL ( str , str ) : An encoded string . &apos;
&apos;Find short group names for release group names . DCNL : param groups : list of groups to find short group names for DCNL : return : list of shortened group names DCNL : rtype : list &#91; str &#93; &apos;
&apos;Parse an IMAP4 INTERNALDATE string . DCNL Return corresponding local time . The return value is a DCNL time.struct _ time instance or None if the string has wrong format . &apos;
&apos; : return : a list of ( normalized , float ) tuple DCNL : rtype : dict&apos;
&apos;RESTful CRUD controller&apos;
&apos;Creates and return the key that can be used with key and term . DCNL If the key is not specified , the key will be converted to the key DCNL and the key to be used . &apos;
&apos;Set sysctl knoversion of ip _ nonlocal _ bind to given namespace . &apos;
&apos;Returns a handle to the current date in the excel workbook&apos;
&apos;Unblock the bluetooth device by BD Address DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; bluetooth.block DE : AD : BE : EF : CA : FE&apos;
&apos;Delete a comment for the comment DCNL : param request : The django request object DCNL : param comment _ id : The id of the comment DCNL : type comment _ id : string DCNL : param comment _ id : The user id for the comment DCNL : type comment _ id : str DCNL : return : None&apos;
&apos;Returns a regular expression that matches the given criteria . DCNL The regular expression can be found for example : DCNL https : / / github.com / andresriancho / w3af / issues / 24801 DCNL : param e : an Account DCNL : param regex : a list of matching patterns DCNL : param tag : the name of the search DCNL : param default : The default value for the search DCNL : returns : a list of matching patterns DCNL : rtype : tuple ( str , str ) &apos;
&apos;Sorts list of otu _ ids and sorted list of sample ids . DCNL otu _ table : list of lists of sample ids DCNL sorted _ sample _ ids : list of lists of sample ids DCNL sorted _ sample _ ids : list of sample ids of sample ids DCNL sorted _ sample _ ids : list of sample ids of sample ids . &apos;
&apos;Converts an integer to its ordinal as a string . 1 is \ &apos; 1st \ &apos; , 2 is \ &apos; 2nd \ &apos; , DCNL 3 is \ &apos; 3rd \ &apos; , etc . Works for any integer . &apos;
&apos;Call GCE \ &apos; s properties on the instance . DCNL .. versionadded : : Nitrogen DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -a delete myinstance&apos;
&apos;No changes to the images table from 008 ... &apos;
&apos;Concatenate a list of paths . DCNL : param paths : A list of paths . DCNL : type paths : list &#91; str &#93; DCNL : return : The concatenation of the parsed paths . DCNL : rtype : : class : ` ~ PIL.Image.Image`&apos;
&apos;Creates a new table table for the given dataset _ id and label _ id . DCNL The entity _ id is a string containing the entity _ id and label _ id DCNL for the entity . DCNL : param dataset _ id : ID of the dataset to query . DCNL : type dataset _ id : str DCNL : param table _ id : ID of the table . DCNL : type table _ id : str DCNL : param label _ key : The label _ id of the table . DCNL : type label _ value : str DCNL : param label _ value : The label for the entity . DCNL : type project _ id : str DCNL : param project _ id : The name of the resource . DCNL : type project _ id : str DCNL : param project _ id : The name of the project . DCNL : type project _ id : str DCNL : param project _ id : The project id . DCNL : type project _ id : str DCNL : param project _ id : The project id . DCNL : type project
&apos;Simple function to generate a raw event from plot DCNL functions . &apos;
&apos;Add a new container to a container . DCNL : param module : module object DCNL : param pid : Name of the container DCNL : param container : container name DCNL : param src : container name DCNL : param dest : path to container DCNL : param clear _ meta : path to container DCNL : param clear _ meta : path to container ( defaults to HEAD ) &apos;
&apos;Parse a packet \ &apos; s UPnP response response . DCNL Returns a tuple consisting of ( host , port ) , or None if there is a DCNL multi-device response . &apos;
&apos;Regression test for https : / / github.com / numba / numba / issues / 381&apos;
&apos;decorateddecorrelation DCNL Parameters DCNL w : { array-like , sparse matrix } , shape ( n _ features , n _ features ) DCNL W : { \ &apos; constant \ &apos; : \ &apos; constant \ &apos; } DCNL W : { \ &apos; W \ &apos; , \ &apos; W \ &apos; } DCNL Returns DCNL WRITEME&apos;
&apos;Verify that the named user is removed from the environment DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.remove _ remove &lt; name &gt; DCNL salt \ &apos; * \ &apos; pkg.remove _ remove &lt; name &gt; &lt; dir &gt; DCNL salt \ &apos; * \ &apos; pkg.remove _ remove &lt; name &gt; &lt; dir &gt; DCNL salt \ &apos; * \ &apos; pkg.remove _ remove &lt; name &gt; &lt; dir &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; group name &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; group name &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; group name &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; group name &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; group name &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; group name &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; group name &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; group name &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; group name &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; group name
&apos;Construct a gzip-compressing message . DCNL Parameters DCNL payloads : list ( str , optional ) DCNL The data to send to Kafka DCNL key : string , optional DCNL Length of the payload . DCNL Returns DCNL data : str DCNL A file-like object . &apos;
&apos;Unpublishes an exploration . Commits changes . &apos;
&apos;Launch a command in the given command . DCNL If * exec _ env * is specified , then the command will be executed DCNL in the given process . If no arguments are given , then DCNL the output will be returned . DCNL : param cmd : Command to run . DCNL : type cmd : str DCNL : param exec _ env : The arguments to use for the process . DCNL : type executable _ env : str DCNL : param output _ env : The optional output of the command . DCNL : type log _ file : str DCNL : param add _ file : If True , the output will be logged in . DCNL : type pass _ file : str DCNL : param pass _ options : If True , then the output will be executed DCNL in the current process . DCNL : type pass _ file : str DCNL : param pass _ options : If True , then the output will be logged in DCNL to the current process . DCNL : type pass _ file : str DCNL : param pass _ options : If True ,
&apos;Given a custom request , create the custom slug for the custom DCNL model . DCNL If the model is already created , it will be added to the appropriate DCNL model . &apos;
&apos;Get a complex with each component the minimum of the respective components of complex points . &apos;
&apos;Given a string representation of a file object , return a DCNL iterator that contains all items found in the file . &apos;
&apos;Query the python package for a given package DCNL Args : DCNL module ( str ) : module name DCNL name ( str ) : name of the package DCNL Returns : DCNL True if the package exists , False otherwise . &apos;
&apos;Find the indentation of * node * . &apos;
&apos;Fail test with a warning . &apos;
&apos;Returns the max-age from the response Cache-Control header as an integer DCNL ( or ``None`` if it wasn \ &apos; t found or wasn \ &apos; t found . &apos;
&apos;Return the QuerySet of `XBlockStudioConfigurationFlag` and `XBlockStudioConfiguration` . &apos;
&apos;Parse a django-style form of a template . DCNL Usage : : DCNL { % load _ form &quot; myapp / css / base.css &quot; % } DCNL { % endcrispy _ form % } &apos;
&apos; \ n + &apos;
&apos;Create a VIF object containing the given entry _ list . DCNL : param entry _ list : A list of ( name , name ) pairs . DCNL : type entry _ list : ``list`` of ``dict`` DCNL : return : The name of the function . DCNL : rtype : dict&apos;
&apos;Make an alternate implementation code that can be used as an HTTP DCNL parameter . DCNL This is useful when you don \ &apos; t know what you want to use the command DCNL arguments . DCNL @ param name : the parameter name . DCNL @ return : The value of the application name . DCNL @ rtype : C { str } &apos;
&apos;Parse line parsing of parse ( ) and parse ( ) . DCNL Parameters DCNL line : str or tuple DCNL Input line . DCNL Returns DCNL parsed _ record : ndarray DCNL A tuple of ints , one or more lines . DCNL Raises DCNL ValueError DCNL Raised when parsing is not a struct . &apos;
&apos;convert a key into a range of integers . DCNL &gt; &gt; &gt; validate _ key ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; DCNL &gt; &gt; &gt; validate _ key ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; DCNL &gt; &gt; &gt; validate _ key ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL
&apos;Export a single file into the json file that can be loaded DCNL : param record _ list : List of record names that should be loaded DCNL : type record _ list : list DCNL : param record _ module : File name of the record DCNL : type record _ module : str DCNL : param record _ module : File name of the record DCNL : type record _ module : str&apos;
&apos;A simple view to create a response for the given key DCNL Keyword arguments : DCNL * Keyword arguments : DCNL * kwargs DCNL Keyword arguments to be used to create OpenID response . &apos;
&apos;Regression test for https : / / github.com / ipython / issues / 326&apos;
&apos;Argument is a Geometry , return int . &apos;
&apos;Validate that the header is valid . DCNL This is necessary because we don \ &apos; t convert it to unicode . DCNL &gt; &gt; &gt; check _ header _ header ( &quot; iso-8859-1 &quot; ) DCNL &gt; &gt; &gt; check _ header _ header ( &quot; iso-8859-1 &quot; ) DCNL &gt; &gt; &gt; check _ header _ header ( &quot; iso-8859-1 &quot; ) DCNL &gt; &gt; &gt; check _ header _ header ( &quot; iso-8859-1 &quot; ) DCNL &gt; &gt; &gt; check _ header _ header ( &quot; iso-8859-1 &quot; ) DCNL &gt; &gt; &gt; check _ header _ header ( &quot; iso-8859-1 &quot; ) DCNL &gt; &gt; &gt; check _ header _ header ( &quot; iso-8859-1 &quot; ) DCNL &gt; &gt; &gt; check _ header _ header ( &quot; iso-8859-1 &quot; ) DCNL &gt; &gt; &gt; check _ header _ header ( &quot; iso-8859-1 &quot; ) DCNL &gt; &gt; &gt; check _ header _ header ( &quot; iso-8859-1 &quot; ) DCNL &gt; &gt; &gt; check _ header _ header ( &quot; iso-8859-1 &quot; ) DCNL &gt; &gt; &gt; check _ header _ header ( &quot; iso-8859-1 &quot; ) DCNL &gt; &gt; &gt; check _ header _ header (
&apos; .. todo : : DCNL WRITEME DCNL Parameters DCNL img : ndarray ( uint8 , uint16 ) DCNL Input image . DCNL rings : WRITEME DCNL WRITEME DCNL start _ idx : WRITEME DCNL start _ idx : WRITEME DCNL Returns DCNL WRITEME&apos;
&apos;Return options for the specified data DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; postgres.get _ options
&apos;Create a new resource factory method . &apos;
&apos;Get the constant constant for a given name . DCNL @ param name : Name of the constant DCNL @ type name : str DCNL @ return : constant constant as string DCNL @ rtype : str&apos;
&apos;Asserts the given result is formatted with the given DCNL expression . DCNL Parameters DCNL result : dict DCNL A string containing the result of the result . DCNL expected : str DCNL The expected message to check . DCNL msg : str DCNL The message to check . DCNL Returns DCNL expr : str DCNL The expected regex . &apos;
&apos;Slices a point into an array of integers . &apos;
&apos;GET a list of inventories . DCNL On success return a 200 with an application / json body representing DCNL a resource provider . &apos;
&apos;Purge deleted values that aren \ &apos; t serialized as deleted . DCNL : param context : Rendering context DCNL : type context : jinja2.runtime.Context DCNL : param age _ in _ days : The age of the table type DCNL : type age _ in _ days : int DCNL : param age _ in _ days : The maximum number of days DCNL : type age _ in _ days : int&apos;
&apos;Check if the module has a given member name . DCNL : param module _ name : The name of the module to check DCNL : param members : the name of the module to check DCNL : return : True if the module is found or False otherwise . &apos;
&apos;Construct a bunch of images from a given layer . DCNL Parameters DCNL name : str DCNL Name of the process to create DCNL Returns DCNL out : list of tuples DCNL A list of strings that are stored in the output file . If no DCNL file is specified , the resulting list will be converted to a single DCNL file with the same name and the resulting list . The resulting list DCNL is a list of tuples ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . &apos;
&apos;Compute polynomial remainder in ``K &#91; X &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys import ring , ZZ DCNL &gt; &gt; &gt; R , x , y = ring ( &quot; x , y &quot; , ZZ ) DCNL &gt; &gt; &gt; R.dmp _ rem ( x * * 2 + 2 * x * * 2 + 2 * x + 2 ) DCNL x * * 2 + 2 * x + 1&apos;
&apos;Returns the location of the request for the current request . DCNL The `request _ info` is a dictionary that will be used to determine the DCNL location of the request . DCNL For example : : DCNL request = get _ request _ location ( request ) DCNL request = get _ request _ location ( request ) DCNL request = get _ request _ location ( request ) DCNL request = get _ request _ location ( request ) DCNL request = get _ request _ location ( request ) DCNL request = get _ request _ location ( request ) DCNL request = get _ request _ location ( request ) DCNL request = get _ request _ location ( request ) DCNL request = get _ request _ location ( request ) DCNL request = get _ request _ location ( request ) DCNL get _ request _ location ( request ) DCNL get _ request _ location ( request ) DCNL get _ request _ location ( request ) DCNL get _ request _ location ( request ) DCNL get _ request _ location ( request ) DCNL get _ request _ location ( request
&apos;Get all services for a given host . &apos;
&apos;Domain domain names tend to have . \ &apos; s in them . Urllib doesn \ &apos; t quote dots , DCNL but Routes tends to choke on them . Urllib doesn \ &apos; t quote dots , DCNL but Routes tends to choke on them , so we need to modify the DCNL by-hand quoting here . &apos;
&apos;Returns the cache key prefix for the cache path . &apos;
&apos;Create a copy of the filter ( using the filter _ filter ) . DCNL Parameters DCNL data : dict DCNL The data to wrap . DCNL impulse _ response : ` ~ numpy.ndarray` DCNL The impulse response of the filter . DCNL filter _ params : dict DCNL Extra parameters to pass to the filter . DCNL filter _ params : dict DCNL Additional keyword parameters to apply to the filter . DCNL filter _ filter : callable DCNL Extra filter params to be passed to `impulse _ response ( ) ` . DCNL Returns DCNL out _ filter : ndarray DCNL Extra keyword arguments to be passed to `impulse _ response ( ) ` . &apos;
&apos;Import an M2Crypto-compatible signature DCNL : param Crypto.PublicKey.RSA. _ key : RSA key key DCNL : param passphrase : encoded string DCNL : type passphrase : string&apos;
&apos;Compute a histogram of size . DCNL Args : DCNL meta : The size of the file . DCNL seq _ size : The size of the image . DCNL Returns : DCNL A list of integers . &apos;
&apos;Create all the files in a git checkout . DCNL @ param checkout : A git checkout . DCNL @ param destination : The destination directory DCNL @ type destination : str DCNL @ param destination : The destination directory of the destination DCNL @ type destination : str DCNL @ return : A list of all the files that have been detected DCNL @ rtype : list &#91; str &#93; &apos;
&apos;Computes the sum of an expression . DCNL Parameters DCNL x : array _ like DCNL The input array . DCNL axis : int , optional DCNL Axis along which to calculate the sum . DCNL sparse _ grad : bool , optional DCNL Whether to apply the gradient to the sum of the weights . DCNL Returns DCNL sum _ sum : ndarray , shape ( n _ samples , n _ features ) DCNL The sum of the elements of `x` . &apos;
&apos;Start the debugger RPC link from the given RPC link by the DCNL IdbProxy . &apos;
&apos;Display a console log file . DCNL This is useful for debugging . DCNL : return : A dictionary with the following options : DCNL \ &apos; debug \ &apos; : \ &apos; localhost \ &apos; , \ &apos; ERROR \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; default \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; default \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; default \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; default \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; default \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; default \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; password \ &apos; : \ &apos; localhost \ &apos; , DCNL \ &apos; password \ &apos; : \
&apos;Checks if the naming is valid back to its original form for an air-by-date format . DCNL Returns true if the naming is valid , false if not . &apos;
&apos;Prepare the notification for a notification . DCNL Args : DCNL doc : Document object . DCNL print _ html : Attach the notification as an HTML content . DCNL print _ format : Attach the notification as an HTML with the attachment . DCNL Returns : DCNL A Notification object . &apos;
&apos;Display a widget \ &apos; s widget settings . DCNL This will only be used in the admin widgets based on the user \ &apos; s DCNL admin settings . &apos;
&apos;Compute the weight graph of a graph . DCNL Parameters DCNL G : NetworkX graph DCNL n : int DCNL The number of nodes in the graph DCNL radius : int , optional DCNL The number of nodes in the graph . DCNL center : bool , optional ( default = True ) DCNL The length of the edge . DCNL distance : bool , optional ( default = False ) DCNL If True , the maximum distance is used . DCNL Returns DCNL G : NetworkX graph DCNL The weight graph . DCNL Examples DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; G = nx.max _ graph ( G , 3 ) DCNL &gt; &gt; &gt; nx.add _ graph ( G , 1 ) DCNL &gt; &gt; &gt; G = nx.max _ graph ( G , 2 ) DCNL &gt; &gt; &gt; nx.add _ graph ( G , 1 ) DCNL &gt; &gt; &gt; print ( nx.max _ graph ( G , 3 ) ) DCNL &#91; ( 1 , 2 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 ,
&apos;Delete a bigip device and delete a new member . DCNL hostname DCNL The host / address of the bigip device DCNL username DCNL The iControl REST username DCNL password DCNL The iControl REST password DCNL name DCNL The name of the member to delete DCNL member DCNL The name of the member to delete DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; bigip.delete _ pool _ member bigip admin admin my-pool 10.2.2.1 : 80&apos;
&apos;Return full path to the top of dirname DCNL : param dirname : Directory name DCNL : param entry : entry to be searched DCNL : return : path to the tree path&apos;
&apos;Create a commit on the commit itself . DCNL The commit will be removed from the commit itself . &apos;
&apos;Computes the binomial distribution . DCNL Parameters DCNL x1 , x2 : array _ like , shape ( n _ samples , n _ points ) DCNL The order of the difference between these vectors . DCNL y : array _ like DCNL The order of the difference between these vectors . DCNL low : float , optional DCNL The variance of the difference between these vectors . DCNL transform : bool , optional DCNL If True , then the output is assumed to be in the order of the DCNL test statistic . Default is None . DCNL weights : array _ like , optional DCNL The output of the function . DCNL Returns DCNL pvalue : float DCNL pvalue of the normal distribution DCNL Notes DCNL This function is based on the standard deviation of the DCNL test statistic based on the two-parameter function . DCNL Notes DCNL This function is based on the : func : `User Guide &lt; metrics &gt; ` . DCNL Parameters DCNL x1 , x2 : array _ like , shape ( n _ samples , n _ features ) DCNL The order of the difference between these vectors . DCNL low
&apos;Create a new form of a form . DCNL @ param form : a form { { html } } DCNL @ param label : the label . DCNL @ type label : L { str } DCNL @ param widget : The widget to insert . DCNL @ type widget : L { Vector } DCNL @ param comment : The index of the row . DCNL @ type row : L { str } DCNL @ param comment : The column id . DCNL @ type row _ id : L { str } DCNL @ param position : The index of the row . DCNL @ type position : L { str } DCNL @ param position : The position of the row . DCNL @ type position : L { str } DCNL @ param position : The position of the row . DCNL @ type position : L { str } DCNL @ param position : The position of the row . DCNL @ type position : L { str } DCNL @ param position : The position of the row . DCNL @ type position : L { str } DCNL @ param position
&apos;Rough reimplementation of nose.tools.eq _ DCNL Parameters DCNL result : float DCNL The result of the result to be measured in seconds . DCNL expected : int DCNL The expected message of the result . DCNL msg : str DCNL The message to send to the expected message . &apos;
&apos;yaml : maven-builder DCNL Wrapper for Maven projects . DCNL Requires the Jenkins : jenkins-wiki : `Artifactory Plugin DCNL &lt; Artifactory + Plugin &gt; ` . DCNL : arg str name : the name of the project DCNL : arg str name : the name of the project DCNL : arg str name : the name of the project ( optional ) DCNL : arg str name : the name of the project ( optional ) DCNL : arg bool expose-to-env : expose to set ( default false ) DCNL Example : DCNL .. literalinclude : : / .. / .. / tests / wrappers / fixtures / maven-release001.yaml DCNL : language : yaml&apos;
&apos;Return the modularity matrix of G. DCNL Parameters DCNL G : NetworkX graph DCNL A NetworkX graph . DCNL nodes : dict , optional DCNL A dictionary of nodes in `G` . DCNL weight : integer , optional DCNL Depth to stop the edge in the graph . DCNL Returns DCNL G : NetworkX Graph DCNL A NetworkX graph . DCNL Raises DCNL NetworkXNotImplemented : DCNL If G is undirected . DCNL See Also DCNL modularity _ of DCNL References DCNL .. &#91; 1 &#93; P. L. Krapivsky and S. Redner , DCNL Organization of Growing Random Networks , DCNL http : / / arxiv.org / abs / 0906.0612 &gt; DCNL .. &#91; 1 &#93; Santo Fortunato . DCNL &quot; Community Detection in Graphs &quot; . DCNL * Physical Review Letters * 87.19 ( 2001 ) : 198701 . DCNL &lt; http : / / dx.doi.org / 10.1561 / 0400000010 &gt; &apos;
&apos;Load an object from a Python object path . DCNL For example : : DCNL import _ object ( \ &apos; scrapy.contrib.downloadermiddelware.redirect.RedirectMiddleware \ &apos; ) DCNL &gt; &gt; &gt; load _ object ( \ &apos; scrapy.contrib.downloadermiddelware.redirect.RedirectMiddleware \ &apos; ) DCNL \ &apos; scrapy.contrib.downloadermiddelware.redirect.RedirectMiddleware \ &apos; &apos;
&apos;Retrieve the manifest resources of a given file DCNL @ param filename : The filename to look for . DCNL @ type filename : C { str } DCNL @ param types : A list of strings representing the manifest file . DCNL @ type types : C { int } DCNL @ param names : A list of supported languages . DCNL @ type languages : C { str } DCNL @ param languages : The list of languages to use . Default is None . DCNL @ type languages : C { str } DCNL @ param languages : The list of languages to use . Default is None . DCNL @ type languages : C { str } DCNL @ param languages : The list of languages to use . Default is None . DCNL @ type languages : C { str } DCNL @ param languages : The list of languages to be used . DCNL @ type languages : C { str } DCNL @ param languages : The list of languages to be used . DCNL @ type languages : C { str } DCNL @ param languages : The list of languages to
&apos;generates a dict of the data for the API DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; docker.template &lt; name &gt; &lt; body &gt; &apos;
&apos; .. versionadded : : 0.10.0 DCNL Sync output modules from ``salt : / / _ output`` to the minion DCNL saltenv : base DCNL The fileserver environment from which to sync . To sync from more than DCNL one environment , pass a comma-separated list . DCNL refresh : True DCNL If ``True`` , refresh the output from the minion . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; saltutil.sync _ output DCNL salt \ &apos; * \ &apos; saltutil.sync _ output saltenv = dev DCNL salt \ &apos; * \ &apos; saltutil.sync _ output saltenv = dev DCNL salt \ &apos; * \ &apos; saltutil.sync _ output saltenv = dev DCNL salt \ &apos; * \ &apos; saltutil.sync _ output saltenv = dev DCNL salt \ &apos; * \ &apos; saltutil.sync _ output saltenv = dev DCNL salt \ &apos; * \ &apos; saltutil.sync _ output saltenv = dev DCNL salt \ &apos; * \ &apos; saltutil.sync _ output saltenv = dev DCNL salt \ &apos; * \ &apos; saltutil.sync _ output saltenv = dev DCNL salt \ &apos; * \ &apos; saltutil.sync _ output saltenv = dev DCNL
&apos;List items in a queue&apos;
&apos;Each entry in the output is satisfied . DCNL If an error is raised , the output is a no-op . &apos;
&apos;Compute the in-degree centrality for a graph . DCNL Parameters DCNL G : NetworkX graph DCNL nodes : list of nodes DCNL The number of nodes in the graph DCNL normalized : bool , optional ( default = True ) DCNL Normalize the number of nodes in the graph . DCNL Returns DCNL nodes : list DCNL List of nodes in the graph G. DCNL Raises DCNL NetworkXError DCNL If the graph is undirected . DCNL References DCNL .. &#91; 1 &#93; David Gleich . DCNL * Hierarchical Directed Spectral Graph Partitioning * . DCNL http : / / arxiv.org / abs / 0906.0612 &gt; &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 114&apos;
&apos;A helper function that returns a gaussian circular gradient . DCNL Parameters DCNL grad _ method : callable DCNL Function that takes a Hessian and a function . DCNL func : function DCNL Function for `func` . DCNL grad : callable , optional DCNL Function for `func` . DCNL grad : callable , optional DCNL Function for `func` . DCNL grad : callable , optional DCNL Function for `func` . DCNL maxiter : int DCNL Number of iterations to use . Default is None . DCNL tol : float , optional DCNL Maximum number of iterations to use . Default is None . DCNL Returns DCNL nodes : ndarray DCNL Quadrature nodes DCNL weights : ndarray DCNL Quadrature nodes DCNL weights : function DCNL Function for `func` . DCNL maxiter : int DCNL Number of iterations to use . &apos;
&apos;Helper function for : meth : ` ~ datetime.datetime` objects . DCNL : param A : DCNL : param B : DCNL : return : &apos;
&apos;Takes a numpy array of tuples and converts it to a sparse matrix DCNL in sparse format . &apos;
&apos;Yield successive n-sized chunks from l . &apos;
&apos;Parse all YAML documents in a stream DCNL and produce corresponding representation trees . &apos;
&apos;Send a Shipment containing all items in a Commitment&apos;
&apos;getRandomInteger ( N : int , randfunc : callable ) : long DCNL Return a random N-bit prime number . DCNL If randfunc is omitted , then Random.new ( ) .read is used . DCNL If randfunc is omitted , then Random.new ( ) .read is used . &apos;
&apos;Access to the inventory inventory size DCNL : return : Size of the inventory inventory . DCNL : rtype : int&apos;
&apos;Test next ( ) on next prompt . &apos;
&apos; .. versionadded : : 0.17.0 DCNL Use the following : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.version &lt; package name &gt; DCNL salt \ &apos; * \ &apos; pkg.version &lt; package name &gt; &lt; path &gt; &lt; path &gt; &lt; path &gt; &lt; path &gt; &apos;
&apos;Convert an object into an object . DCNL @ param obj : Object to check DCNL @ type obj : str DCNL @ return : object DCNL @ rtype : string&apos;
&apos;Return the size of the bytes , including the \ &apos; bytes \ &apos; . DCNL This is the inverse of : DCNL http : / / stackoverflow.com / questions / 377017 / test-if-executable-exists-in-python / 249436 / python-for-humans-natural-order-algorithm DCNL Parameters DCNL size : int DCNL The size of the machine . DCNL Returns DCNL human _ bytes : str DCNL The number of bytes . DCNL Examples DCNL &gt; &gt; &gt; human _ bytes ( \ &apos; / proc / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / /
&apos;Run a new setting with a given option . DCNL &gt; &gt; &gt; print ( &quot; foo &quot; ) DCNL &#91; \ &apos; bar \ &apos; , \ &apos; bar \ &apos; &#93; &apos;
&apos;Clean up the metric module . &apos;
&apos;Formats the value according to the argument . DCNL This specifier uses Python string formating syntax , with the exception that DCNL the leading &quot; % &quot; is dropped . DCNL See http : / / docs.python.org / library / typesseq-strings.html for documentation DCNL of Python string formatting&apos;
&apos;Return True if we \ &apos; re running on an Alpine Linux distribution . DCNL This is a workaround for https : / / bugs.python.org / issue6689 for details . &apos;
&apos;List the existence of a volume . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; glusterfs.list _ quota _ volume &lt; volume name &gt; &apos;
&apos;Returns the cache slug for the current project . DCNL : return : Permission string DCNL : rtype : str&apos;
&apos;Copy random state of a binary pointer to * r * to * ptr * . &apos;
&apos;Parse and parse a single reply . DCNL Raises an error if the response is not a raw reply . &apos;
&apos; * musicpd.org , reflection section : * DCNL ``update ( ) `` DCNL Sets the current request to the current request . &apos;
&apos;Collect and return a list of driver \ &apos; s dependencies and reports them to Sentry . &apos;
&apos;generate a random string with alphanumeric characters . DCNL &gt; &gt; &gt; random _ text _ length ( \ &apos; random \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; random _ text _ length ( \ &apos; random \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; random _ text _ length ( \ &apos; random \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; random _ text _ length ( \ &apos; random \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; random _ text _ length ( \ &apos; random \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; random _ text _ length ( \ &apos; random \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; random _ text _ length ( \ &apos; random \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; random _ text _ length ( \ &apos; random \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; random _ text _ length ( \ &apos; random \ &apos; )
&apos;403 for the correct error page . &apos;
&apos;Try to determine if the process is connected to . DCNL Args : DCNL mode : A boolean , whether or not the process is running . DCNL Returns : DCNL A dictionary with information about the process . DCNL Raises : DCNL ValueError : if the input is not available . &apos;
&apos;A decorator that wraps the wrapped function in _ _ exp _ _ ( ) . &apos;
&apos;Extracts the AuthSub token from an HTTP response . DCNL Args : DCNL http _ body : str , the HTTP body of the HTTP request . DCNL Returns : DCNL A tuple ( token , token ) . &apos;
&apos;Computes the n-th differenced series . DCNL Parameters DCNL x : array _ like DCNL The array of data . DCNL d : array _ like DCNL The data of the array . DCNL Returns DCNL y : array _ like DCNL The order of the series . &apos;
&apos;TAG-DISTANCE-DISTANCE-gHEX &#91; -dirty &#93; . DCNL Exceptions : DCNL &#91; \ &apos; git \ &apos; &#93; &apos;
&apos;ZDT2 multiobjective function . DCNL .. list-table : : DCNL : widths : 10 50 DCNL : stub-columns : 1 DCNL * - Range DCNL - : math : `x _ i = 1 , \ forall i \ in \ lbrace 1 \ ldots N \ rbrace` , : math : `f ( \ mathbf { x } ) = ( \ mathbf { x } ) = \ sum _ { \ sum _ { i = 1 } ^ { \ sum _ { i = 1 } ^ { \ sum _ { i = 1 } ^ { \ sum _ { i = 1 } ^ 2 } ^ { 2 } ^ { 2 } } ^ { 1 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 } ^ { 2 }
&apos;Similar to .setdefault in dictionaries . &apos;
&apos;Returns normalized mode from a file-like object . DCNL If there are no such mode , returns None . &apos;
&apos;Compute the factorial of an array . DCNL Examples DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy import sqrt DCNL &gt; &gt; &gt; from sympy.abc import x , k DCNL &gt; &gt; &gt; x = np.array ( &#91; &#91; 1 , 2 , 3 &#93; , &#91; 1 , 2 , 3 &#93; , &#91; 1 , 2 , 3 &#93; , &#91; 2 , 4 &#93; &#93; ) DCNL &gt; &gt; &gt; print ( x , k ) DCNL array ( &#91; &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91;
&apos;Salisation of the NTI of the correct . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.domains import ZZ DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.abc import S DCNL &gt; &gt; &gt; print ( X ) DCNL 1 DCNL &gt; &gt; &gt; print ( X ) DCNL 1 DCNL &gt; &gt; &gt; print ( record.accession ) DCNL &#91; 0 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
&apos;Returns the smallest value for a value . DCNL &gt; &gt; &gt; rol ( \ &apos; abcdefg \ &apos; , 2 ) DCNL \ &apos; abcdefg \ &apos; DCNL &gt; &gt; &gt; rol ( \ &apos; abcdefg \ &apos; , \ &apos; abcdefg \ &apos; ) DCNL \ &apos; 0xd0 \ &apos; DCNL &gt; &gt; &gt; rol ( \ &apos; abcdefg \ &apos; , \ &apos; abcdefg \ &apos; ) DCNL \ &apos; 0xd0 \ &apos; &apos;
&apos;Given a row and index , return the index name of the row . &apos;
&apos;Remaps a audio file to a temporary file . DCNL Intended to be used for debugging only . DCNL : param filename : name of the audio file DCNL : param title : title title DCNL : return : nothing&apos;
&apos;Create hourly traffic for a history . DCNL Helper function for building a query based on the traffic _ points DCNL table . DCNL .. versionadded : : 0.5 DCNL : param cls : A SQLAlchemy class . DCNL : param interval : Time interval . DCNL : return : List of tuples of ( start , end ) pairs . &apos;
&apos;Create a GET class , returning a 2-tuple that is the same as the DCNL first argument in the argument . DCNL Arguments : DCNL cycles ( float ) : The path to the test . DCNL num ( int ) : Number of iterations to use . DCNL length ( int ) : Number of iterations to use . DCNL length ( int ) : Number of iterations to use . DCNL length ( int ) : Number of iterations to use . DCNL length ( int ) : Number of iterations to use . DCNL length ( int ) : Number of iterations to use . DCNL length ( int ) : Number of iterations to use . &apos;
&apos;Returns a Unix timestamp in seconds since epoch ( UTC ) . DCNL : param t : Time object DCNL : type t : int DCNL : return : float&apos;
&apos;Generate a copy of the folder and its children ( if any ) DCNL Arguments : DCNL - url _ images : Path to the temporary file DCNL Returns : DCNL True if the file is up-to-date , False otherwise . &apos;
&apos;Return True if the given path is cached on the minion DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; cp.cache _ cached salt : / / path / to / cache&apos;
&apos;Display a skeiniso gcode file for a gcode file . &apos;
&apos;Compute the puiseux series for `f ( p , x ) ` . DCNL Given a univariate series expansion of a univariate series using Newton \ &apos; s DCNL algorithm . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.domains import QQ DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import
&apos;Write all the data to a descriptor . &apos;
&apos;Generator that checks if a URL is a Google Cloud Storage string . DCNL This is a helper function that takes a list of tuples and returns a DCNL list of tuples ( token , value ) tuples . &apos;
&apos;Make sure that \ &apos; use _ safe _ unicode \ &apos; is used by default . &apos;
&apos;Return the representation of a given date based on the given DCNL date and end date . DCNL Example : DCNL &gt; &gt; &gt; start _ date ( \ &apos; Hello \ &apos; , end _ date = \ &apos; red \ &apos; ) DCNL ( \ &apos; Hello \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; green \ &apos; ) DCNL &gt; &gt; &gt; print ( sent _ date ( \ &apos; Hello \ &apos; ) DCNL ( \ &apos; Hello \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; green \ &apos; ) DCNL &gt; &gt; &gt; print ( sent _ date ( \ &apos; Hello \ &apos; ) DCNL ( \ &apos; Hello \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; green \ &apos; ) DCNL &gt; &gt; &gt; print ( sent _ date ( \ &apos; Hello \ &apos; ) DCNL ( \ &apos; Hello \ &apos; , \ &apos; blue \
&apos;Ensure that driver driver can be initialized . DCNL If driver is not available , then the driver will be initialized DCNL when the driver is not initialized . &apos;
&apos;Copy data from source to destination . DCNL : param source : Source file DCNL : type source : str DCNL : param destination : destination path DCNL : type destination : str DCNL : param context : source context DCNL : type renderer : str DCNL : param renderer : Jinja2 context DCNL : type renderer : str DCNL : return : Path to destination file DCNL : rtype : str&apos;
&apos;Test to ensure that the invalid config is invalid . DCNL This is a wrapper for https : / / github.com / astropy / astropy / issues / 1723&apos;
&apos;This function is meant to be used in conjunction with this : DCNL https : / / github.com / andresriancho / w3af / issues / 3883 DCNL : param name : The name of the role DCNL : param rawtext : The currently logged in section DCNL : type rawtext : C { str } or C { str } DCNL : param text : The text in which to generate the role . DCNL : type text : str DCNL : param lineno : The line number to use when performing the role . DCNL : type text : str DCNL : param lineno : The line number to use when performing the role . DCNL : type lineno : str DCNL : param options : Directive options for customization . DCNL : type options : list &#91; str &#93; DCNL : param content : The current system text . DCNL : type content : int&apos;
&apos;Updates the provided configuration options for the provided parameters . DCNL : param kwargs : DCNL : type kwargs : dict DCNL : param kwargs : DCNL : type kwargs : DCNL : return : DCNL : rtype : &apos;
&apos;Do nothing . &apos;
&apos;Return a list of all trainable variables DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; virt.start &lt; domain name &gt; &apos;
&apos;Simple version of tempfile.gettempdir ( ) . &apos;
&apos;Return the named item DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pillar.item foo DCNL salt \ &apos; * \ &apos; pillar.item foo bar baz&apos;
&apos;Gets MusicBrainz candidates for an album from the plugins . &apos;
&apos;statement : NAME EQUALS expression&apos;
&apos;Restart a service . DCNL host DCNL The location of the host . DCNL username DCNL The username used to login to the host , such as ``root`` . DCNL password DCNL The password used to login to the host . DCNL service _ name DCNL The name of the ESXi host . DCNL protocol DCNL Optionally set to alternate protocol if the host is not using the default DCNL protocol . Default protocol is ``https`` . DCNL port DCNL Optionally set to alternate port if the host is not using the default DCNL port . Default port is ``443`` . DCNL host _ names DCNL List of ESXi host names . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; vsphere.get _ service _ restart my.esxi.host root bad-password DCNL # Used for connecting to a vCenter Server DCNL salt \ &apos; * \ &apos; vsphere.get _ service _ restart my.esxi.host root bad-password DCNL # Used for connecting to a vCenter Server DCNL salt \ &apos; * \ &apos; vsphere.get _ service _ restart my.esxi.host root bad-password DCNL # Used for connecting to a vCenter Server DCNL salt \ &apos; * \
&apos;Return a list of all empty directories on the master&apos;
&apos;Parse the number of seconds from a timedelta object . DCNL : param s : The string to validate DCNL : type s : str DCNL : return : The number of seconds for the phone number . DCNL : rtype : : class : `datetime.time` DCNL : raises : * * ValueError * * if the input is malformed&apos;
&apos; &gt; &gt; &gt; client _ user = get _ user ( request ) DCNL &gt; &gt; &gt; client = connection _ user ( request ) DCNL &gt; &gt; &gt; client = connection _ user ( request ) DCNL &gt; &gt; &gt; get _ user ( request ) DCNL \ &apos; facebook \ &apos; DCNL &gt; &gt; &gt; client = get _ user ( request ) DCNL &gt; &gt; &gt; get _ user ( request ) DCNL \ &apos; facebook \ &apos; DCNL &gt; &gt; &gt; client = get _ user ( request ) DCNL &gt; &gt; &gt; get _ user ( request ) DCNL \ &apos; facebook \ &apos; DCNL &gt; &gt; &gt; client = get _ user ( request ) DCNL &gt; &gt; &gt; get _ user ( request ) DCNL \ &apos; facebook \ &apos; DCNL &gt; &gt; &gt; client = get _ user ( request ) DCNL &gt; &gt; &gt; get _ user ( request ) DCNL \ &apos; facebook \ &apos; DCNL &gt; &gt; &gt; client = get _ user ( request ) DCNL &gt; &gt; &gt; get _ user ( request ) DCNL \ &apos; facebook \ &apos; DCNL &gt; &gt; &gt; client =
&apos;Only load if a module is loaded . &apos;
&apos;inner covariance matrix for sparse matrices DCNL Parameters DCNL endog : ndarray , shape = ( n _ samples , n _ features ) DCNL Array of shape ( n _ i , n _ features ) DCNL exog _ i : int DCNL Number of rows of the matrix to be transformed . DCNL exog _ list : ndarray , shape ( n _ samples , n _ features ) DCNL Estimated matrix values DCNL Returns DCNL transformed _ i : ndarray , shape = ( n _ samples , n _ features ) DCNL Estimated class of the column DCNL Returns DCNL ValueError : ndarray DCNL Array of regression targets that can be converted to matrices DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . ISBN : 978-0716724117&apos;
&apos;Update nested _ dict and new _ dict and update them in a dict . &apos;
&apos;Convert a value to an integer if possible . DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; cast ( 1 ) DCNL
&apos;Get a Consumer object to the LTI ID . &apos;
&apos;Make a line for each line in the given directory . DCNL Parameters DCNL dir _ path : str DCNL Path to the directory to make . DCNL data _ file _ link : str DCNL The name of the file . DCNL background _ color : str DCNL The label for the file . DCNL border _ color : string , optional DCNL The width of the background color . DCNL y _ len : int , optional DCNL The width of the background color . DCNL output _ len : int , optional DCNL The width of the image in the background . DCNL output _ len : int , optional DCNL The width of the image in the background . DCNL generate _ line : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL fig : matplotlib.figure.Figure DCNL The figure that will be added to the file . &apos;
&apos;Check if pid exists for the current process . &apos;
&apos;Lists all the creds for given a cred _ id and tenant _ id&apos;
&apos;A decorator that wraps a function with a warning . DCNL Usage : DCNL @ raise _ exception _ and _ warning ( \ &apos; exception \ &apos; , type = \ &apos; error \ &apos; ) DCNL def get _ exception ( ) : DCNL ... raise Exception ( * args , * * kwargs ) DCNL raise exception ( ) &apos;
&apos;Get the service notification service . &apos;
&apos;Given a list of strings and a list of tuples , return an array of DCNL indices that can be converted to an array . DCNL &gt; &gt; &gt; array ( &#91; \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; &#93; ) DCNL array ( &#91; \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL ( \ &apos; x \ &apos; , 0 ) , ( \ &apos; x \ &apos; , 0 ) , ( \ &apos; x \ &apos; , 0 ) , ( \ &apos; x \
&apos;OSX uses a path to a normal path . &apos;
&apos;literal ( value ) - &gt; const ( string ) &apos;
&apos; .. todo : : DCNL WRITEME properly DCNL Parameters DCNL G _ fps : list of str DCNL The flowgram ID . DCNL fasta _ fp : list of str DCNL The order of the cluster . DCNL ignore _ cores : list of str , optional DCNL The number of cores to be used . DCNL num _ cores : int , optional DCNL The number of iterations to use . DCNL verbose : bool , optional DCNL If True , then the number of iterations will be used . &apos;
&apos;Get a url from the API . DCNL : param args : Same args as arguments . DCNL : returns : The full path to the API . &apos;
&apos;Translate \ &apos; string \ &apos; to a list of types . DCNL Return a tuple of ( string , type ) . &apos;
&apos;Convert a Mobius transform to an open interval . &apos;
&apos;Check the course \ &apos; s cohort by course _ type . Raises a ValueError if DCNL the course is not in the course . &apos;
&apos;Fail if any of the files in the list is equal . &apos;
&apos;Helper to update tags from a json file . DCNL : param text : File to write to DCNL : return : nothing&apos;
&apos;Run a subprocess and return a subprocess . DCNL This is a wrapper around subprocess _ Popen for subprocess calls . DCNL Args : DCNL command ( str ) : The command to run . DCNL return _ code ( bool ) : If True , return the output of the subprocess . DCNL kwargs ( str ) : The keyword arguments to pass to the subprocess . DCNL Returns : DCNL RunResult with result code and output from subprocess . DCNL Raises : DCNL CalledProcessError : If the command is not a non-zero exit code . DCNL If ``return _ code` is True , then the output is returned . DCNL Example : DCNL .. code-block : : python DCNL from subprocess import Popen DCNL &gt; &gt; &gt; from subprocess import Popen DCNL &gt; &gt; &gt; from subprocess import Popen DCNL &gt; &gt; &gt; from subprocess import Popen DCNL &gt; &gt; &gt; from subprocess import Popen DCNL &gt; &gt; &gt; from subprocess import Popen DCNL &gt; &gt; &gt; from subprocess import Popen DCNL &gt; &gt; &gt; from subprocess import Popen DCNL &gt; &gt; &gt; from subprocess import Popen DCNL &gt; &gt; &gt; from subprocess import subprocess DCNL &gt; &gt;
&apos;Return a list of ( start , step , step _ id , step _ id , step _ id ) DCNL where each item is a list of ( step _ id , step _ id , step _ id ) . &apos;
&apos;Utility function : `` ( 5 , 7 ) `` = &gt; `` \ &apos; H6 \ &apos; ``&apos;
&apos;Maps keys for image details view . &apos;
&apos;Find the xmlsec1 binary which are running on the system . DCNL : return : True if the program was successfull , otherwise False . &apos;
&apos;Render a template page . DCNL Models : `flatpages.flatpages` DCNL Templates : Uses the template defined by the ``template _ name`` field , DCNL or `flatpages / default.html` if template _ name is not defined . DCNL Context : DCNL flatpage DCNL `flatpages.flatpages` object&apos;
&apos;Create an Elastic Network Interface . DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ kms.create _ network _ interface \ &apos; alias / mykey \ &apos; &apos;
&apos;Disassociate a network from network or raise if it does not exist . &apos;
&apos;Product of a product of numbers . DCNL Returns the product of the coefficients of the product . DCNL Examples DCNL &gt; &gt; &gt; from sympy.physics.paulialgebra import prod DCNL &gt; &gt; &gt; from sympy import symbols DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; , 3 ) DCNL &gt; &gt; &gt; prod ( &#91; 1 , 2 , 3 &#93; ) DCNL 3&apos;
&apos;Get public certificates for the current thread . DCNL Args : DCNL deadline : Optional deadline in seconds for the operation ; the default DCNL is a system-specific deadline ( typically 5 seconds ) . DCNL Returns : DCNL The public key of the deadline in seconds . &apos;
&apos;Make sure the password is encrypted using the specified role . DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; ssh.disable _ password _ password &lt; role &gt; &lt; password &gt; &lt; password &gt; &apos;
&apos;Return the info of the GitHub API info for the given number . &apos;
&apos;Returns True if a 404 at the given URL * shouldn \ &apos; t * notify the site managers&apos;
&apos;Create a new qt4 event , return the new one . DCNL If there is no new one , return the new one . &apos;
&apos;Convert a string to a list of strings . &apos;
&apos;Context manager to capture a new log file . DCNL If stream is a string , it will be captured by the fly . DCNL If stream is a string , it will be captured by the fly . &apos;
&apos;Build a feed of data from the list of feed objects . DCNL This function can be used in two ways : DCNL ( \ &apos; Tom \ &apos; , \ &apos; Dick \ &apos; , \ &apos; Harry \ &apos; ) &apos;
&apos;Return whether the documentation is a valid doc type . &apos;
&apos;Get a list of issues from a particular number of issues . DCNL This is a convenience wrapper to make sure that the issues in a particular DCNL datetime object is returned . &apos;
&apos;Generate the expected warnings of a given regular expression . DCNL Args : DCNL matches ( str ) : The name of the existing file to read . DCNL Returns : DCNL The expected text of the existing warnings removed . &apos;
&apos;Decorate a deprecation warning to return a deprecation warning . DCNL : param str version : The name of the deprecation warning . DCNL : param message : The message message to add to the deprecation warning . DCNL : param add _ deprecation _ to _ docstring : If True , add a deprecation warning to DCNL the warning message . &apos;
&apos;A decorator to capture exceptions thrown by the decorated function . DCNL : param async _ result : The result of the decorated function . DCNL : type async _ result : ``str`` DCNL : return : The decorated function . DCNL : rtype : : class : `IAsyncResult`&apos;
&apos;Tries to guess the filename of the given object . &apos;
&apos;Get a list of available catalog by name DCNL Args : DCNL name ( str ) : The name of the catalog to get . DCNL Returns : DCNL list ( str ) : The requested catalog name , or None if no catalog is found . &apos;
&apos;Run a neural network to a TensorFlow session . DCNL Parameters DCNL sess : a Session&apos;
&apos;Helper function to update the usage of a list of apiId and stage name DCNL .. versionadded : : Nitrogen DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ apigateway.update _ usage _ plan _ plan _ plan _ plan _ plan _ plan _ plan _ plan _ plan _ plan _ id = \ &apos; &#91; \ &apos; stage \ &apos; , \ &apos; stage \ &apos; , \ &apos; stage \ &apos; , \ &apos; stage \ &apos; &#93; &apos;
&apos;Store media files in document . DCNL For example : : DCNL from render _ media _ files ( \ &apos; / path / to / html \ &apos; , title = \ &apos; / path / to / html \ &apos; ) DCNL def my _ view ( document ) : DCNL return { \ &apos; title \ &apos; : \ &apos; title \ &apos; , \ &apos; title \ &apos; : \ &apos; title \ &apos; } , DCNL \ &apos; title \ &apos; : { \ &apos; title \ &apos; : \ &apos; title \ &apos; } , DCNL \ &apos; title \ &apos; : { \ &apos; title \ &apos; : \ &apos; title \ &apos; } , DCNL \ &apos; title \ &apos; : { \ &apos; title \ &apos; : \ &apos; title \ &apos; } , DCNL \ &apos; title \ &apos; : { \ &apos; title \ &apos; : \ &apos; title \ &apos; } , DCNL \ &apos; title \ &apos; : { \ &apos; title \ &apos; : \ &apos; title \ &apos; } , DCNL \ &apos; title \ &apos; : { \ &apos; title \ &apos; : \
&apos;Connect to the named container . DCNL name DCNL The name of the container to create DCNL cpus DCNL The name of the container to create DCNL mem : None DCNL The name of the container to run DCNL disk : None DCNL If not specified , use the default verbose state ( default : False ) DCNL default : False DCNL If not specified , use the default verbose state ( default : False ) DCNL stop : False DCNL If True , use the default verbose state ( default : False ) DCNL stop : False DCNL If True , use the default verbose state ( default : False ) DCNL default : False DCNL If True , use the virtual machine if not specified DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; lxc.init name&apos;
&apos;Returns the list items of a single list . DCNL Args : DCNL list : A list of lists . DCNL default : default value to return . DCNL Returns : DCNL A list of integers representing a single list . &apos;
&apos;Create extra report from a nzb name DCNL : param nzb : ID of the NZB file DCNL : return : &apos;
&apos;Apply the plus log function to each element of the matrix mat . &apos;
&apos;No longer used when creating a task . &apos;
&apos;Helper function for morphing . DCNL Parameters DCNL subject : instance of Info DCNL Measurement info . DCNL subject _ from : int DCNL Name of the mri subject . DCNL subject _ to : int DCNL Name of the mri subject . DCNL subjects _ dir : int &#124; None DCNL Number of subjects for each subject . &apos;
&apos;Get the slug directory path . &apos;
&apos;Fix old ids of all users that are not in the database . DCNL We don \ &apos; t need to make sure that there are no such tables in the DCNL database , so we can \ &apos; t need to be used in the database . &apos;
&apos;get _ stats ( ) - &gt; ( \ &apos; EOM \ &apos; ) - &gt; \ &apos; EOM \ &apos; &apos;
&apos;Get description of brainstorm ( bst _ resting ) dataset . &apos;
&apos;Register language support with the Manager . &apos;
&apos;Removes the given string from the given string . See the DCNL docstring for more details . DCNL : param string : The string to remove . DCNL : type string : str DCNL : return : The cleaned string . DCNL : rtype : str&apos;
&apos;Test installing from a local directory with no \ &apos; setup.py \ &apos; . &apos;
&apos;Smart linking role . DCNL Expands to \ &apos; : obj : `text` \ &apos; if `text` is an object that can be imported . &apos;
&apos;make sure * newdir * and * mode * and * mode * . If * mode * is None , DCNL raise an exception if * mode * exists . &apos;
&apos;Repeat the values in a tensor , alongside the specified axis . DCNL Examples DCNL &gt; &gt; &gt; from scipy import arange DCNL &gt; &gt; &gt; a = np.arange ( 20 ) .reshape ( 5 , 10 ) DCNL &gt; &gt; &gt; repeat ( a , count = 2 ) DCNL array ( &#91; &#91; 1 , 2 &#93; , DCNL &#91; 5 , 6 &#93; , DCNL &#91; 5 , 6 &#93; &#93; ) DCNL &gt; &gt; &gt; repeat ( a , count = 2 ) DCNL array ( &#91; &#91; 1 , 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; repeat ( a , count = 2 ) DCNL array ( &#91; &#91; 1 , 2 , 3 &#93; &#93; ) &apos;
&apos;Assert that the given method is a valid format DCNL : param method : the method method DCNL : param flags : the name of the method DCNL : param exp _ range : the maximum number of iterations DCNL : param iterations _ range : the maximum number of iterations DCNL : param mem _ range : a list of expected values in the range DCNL : param mem _ range : a function that takes two arguments : DCNL - &gt; &gt; &gt; assert _ range ( &#91; 1 , 2 , 3 &#93; ) DCNL &#91; 0 , 1 , 2 , 2 , 2 &#93; DCNL &gt; &gt; &gt; test _ format ( test _ format ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; test _ format ( test _ format ( \ &apos; test
&apos;Module function to decode the specified PDF stream DCNL @ param stream : A PDF stream DCNL @ return : A tuple ( status , statusContent ) , where statusContent is the encoded PDF stream in case status = 0 or an error in case status = -1&apos;
&apos;Split a keyword argument into a space-separated list of keyword arguments . DCNL &gt; &gt; &gt; split _ keyword ( \ &apos; keywords \ &apos; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; &#93; DCNL &gt; &gt; &gt; split _ keyword ( \ &apos; keywords \ &apos; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; &#93; DCNL &gt; &gt; &gt; split _ keyword ( \ &apos; keywords \ &apos; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; &#93; DCNL &gt; &gt; &gt; split _ keyword ( \ &apos; keywords \ &apos; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; &#93; DCNL &gt; &gt; &gt; split _ keyword ( \ &apos; keywords \ &apos; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; bar \ &apos; , \ &apos; bar \ &apos; &#93; DCNL &gt; &gt; &gt; split _ keyword ( \ &apos; keywords \ &apos; ) DCNL ( \ &apos;
&apos;Returns the stream of stream events to the stream . DCNL Arguments : DCNL stream ( stream ) : The stream to get the stream for . DCNL requesting _ user ( User ) : The user to send the stream to . &apos;
&apos;Call the Vision API on a file and return the results . DCNL : param platform : The configuration object . DCNL : param config : The configuration object . DCNL : param add _ devices : The name of the notification . &apos;
&apos;Return the parent of the given xblock , or None if there is no parent of the given xblock . &apos;
&apos;Widen the preface file or text . &apos;
&apos;Sends a call to a fanout exchange without waiting for a response . &apos;
&apos;Test installing a command with wheels&apos;
&apos;DEPRECATED , use tenant-network-delete instead . &apos;
&apos;Save the specified file to the specified file . &apos;
&apos;Return a new environ dict for WSGI 1.x from the given WSGI u.x environ . &apos;
&apos;Restores a file from a file with a temporary file DCNL : param archive : The file name for the archive DCNL : param archive : The file name for the archive DCNL : return : True if successful , False otherwise DCNL : rtype : bool&apos;
