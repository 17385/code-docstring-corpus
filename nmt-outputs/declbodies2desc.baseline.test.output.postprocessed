&apos;Register the setup and setup setup for the test . DCNL : param args : arguments to be run DCNL : type args : list of : class : ` ~ subliminal.tasks.DownloadTask` DCNL : return : the setup function DCNL : rtype : dict&apos;
&apos;The main function . Instantiates the module and calls process _ request . DCNL : return : none&apos;
&apos;Return a guess of the metadata for a csv file . DCNL &gt; &gt; &gt; _ guess _ metadata _ by _ filename ( \ &apos; dataset _ name \ &apos; ) DCNL \ &apos; dataset _ name \ &apos; DCNL &gt; &gt; &gt; _ guess _ dataset _ by _ filename ( \ &apos; dataset _ name \ &apos; ) DCNL \ &apos; dataset _ name \ &apos; DCNL &gt; &gt; &gt; _ guess _ dataset _ by _ filename ( \ &apos; dataset _ name \ &apos; ) DCNL \ &apos; dataset _ name \ &apos; DCNL &gt; &gt; &gt; _ guess _ dataset _ by _ filename ( \ &apos; dataset _ name \ &apos; ) DCNL \ &apos; dataset _ name \ &apos; DCNL &gt; &gt; &gt; _ guess _ dataset _ by _ filename ( \ &apos; dataset _ name \ &apos; ) DCNL \ &apos; human _ metadata \ &apos; DCNL &gt; &gt; &gt; _ guess _ dataset _ by _ filename ( \ &apos; dataset _ name \ &apos; ) DCNL \ &apos; human _ metadata \ &apos; DCNL &gt; &gt; &gt; _ guess _ metadata _ by _ filename ( \ &apos;
&apos;Embed all child nodes to a node with the given document . &apos;
&apos;Run the run on Travis . DCNL : rtype : bool DCNL : return : The run in Travis . &apos;
&apos;Test download exit status code when no requirements specified&apos;
&apos;Obtain the version output for the show version . &apos;
&apos;Reads out from a file . DCNL : type msg : str DCNL : param msg : A unicode string . DCNL : rtype : dict&apos;
&apos; &lt; data &gt; -- Convert a dictionary to a specific image . DCNL : param text : File to select from . DCNL : type text : str DCNL : param text : Text to select from DCNL : type text : str DCNL : rtype : str&apos;
&apos;Create an option to create a set of Option instances . DCNL : type args : ``dict`` DCNL : param option _ type : The type of option to create . DCNL : type options : ``dict`` DCNL : param options : Additional keyword arguments to pass to the DCNL : class : ` ~ ckan.logic.action.update.config _ option _ update` method . &apos;
&apos;Test to see if we can \ &apos; t have a good distribution DCNL Parameters DCNL params : ndarray , shape ( n _ samples , n _ features ) DCNL Array of data DCNL exog : ndarray , shape ( n _ samples , n _ features ) DCNL Returns DCNL out : ndarray , shape ( n _ samples , n _ features ) DCNL References DCNL .. &#91; 1 &#93; https : / / github.com / astropy / astropy / issues / 60&apos;
&apos;This is a sanity check of https : / / github.com / astropy / astropy / issues / 362&apos;
&apos;Plot the results of presented on the results . DCNL See : http : / / msdn.microsoft.com / en-us / library / cc780300 ( v = vs.85 ) .aspx DCNL See http : / / msdn.microsoft.com / en-us / library / cc780300 ( v = vs.85 ) .aspx DCNL See http : / / msdn.microsoft.com / en-us / library / library / cc780300 ( v = vs.85 ) .aspx DCNL See http : / / msdn.microsoft.com / en-us / library / cc780300 ( v = vs.85 ) .aspx DCNL See http : / / msdn.microsoft.com / en-us / library / library / cc780300 ( v = vs.85 ) .aspx DCNL See http : / / msdn.microsoft.com / en-us / library / cc780300 ( v = vs.85 ) .aspx DCNL See http : / / msdn.microsoft.com / en-us / library / library / cc780300 ( v = vs.85 ) .aspx DCNL See http : / / msdn.microsoft.com / en-us / library / cc780300 ( v = vs.85 ) .aspx DCNL See http : / / msdn.microsoft.com / en-us / library / windows / library /
&apos;Send a file for a given file . DCNL @ param name : name of the file DCNL @ type name : int DCNL @ param data : data to send in the process&apos;
&apos;Redirect to root URL . &apos;
&apos;Create an entry of block device mapping . &apos;
&apos;Return a list of flavors available . &apos;
&apos;Build the content type for a given format . &apos;
&apos;Generates a random category for the given resource . &apos;
&apos;Provide a safe form safe for a safe manner . DCNL This is useful for things like this : DCNL &gt; &gt; &gt; with basic _ encode ( \ &apos; a \ &apos; , { \ &apos; a \ &apos; : \ &apos; b \ &apos; , \ &apos; b \ &apos; : \ &apos; b \ &apos; } ) DCNL ... print ( &quot; c &quot; ) DCNL &gt; &gt; &gt; with basic _ safe ( obj ) : DCNL ... print ( r \ &apos; a = b \ &apos; ) DCNL { \ &apos; a \ &apos; : 2 , \ &apos; a \ &apos; : \ &apos; b \ &apos; , \ &apos; c \ &apos; : \ &apos; b \ &apos; , \ &apos; c \ &apos; : \ &apos; b \ &apos; } DCNL &gt; &gt; &gt; with basic _ safe ( \ &apos; a \ &apos; , { \ &apos; a \ &apos; : \ &apos; b \ &apos; , \ &apos; b \ &apos; : \ &apos; b \ &apos; } ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; with basic _ safe ( \ &apos; a \ &apos;
&apos;Returns true if the given course is in the instructor dashboard . &apos;
seqs _ fasta ( seq , file _ lines ) - &gt; list of ( seq , seq ) tuples DCNL fasta _ lines : list of ids of the fasta file&apos;
&apos;Non-differentiable Sørensen – Dice coefficient for : meth : `User Guide &lt; metrics &gt; ` . DCNL Args : DCNL output : A tensor of shape ( n _ samples , n _ features ) . DCNL target : A tensor of shape ( n _ features , 2 ) . DCNL epsilon : `float` . The epsilon to be used . DCNL Returns : DCNL The Dice coefficient of : class : ` ~ torch.nn.dice &lt; https : / / en.wikipedia.org / wiki / Sørensen – Dice _ coefficient &gt; ` _ . &apos;
&apos;Use this decorator to skip a test based on the database . &apos;
&apos;This is a mission to the Waypoint file format DCNL ( http : / / qgroundcontrol.org / mavlink / waypoint _ html &gt; ` ) . &apos;
&apos;Run all variables in the expression . DCNL Parameters DCNL variables : list DCNL List of variables to run . DCNL functions : list DCNL List of variables to run . DCNL expr _ expr : str DCNL The expression to apply to the function . DCNL case _ sensitive : bool , optional DCNL If True , the function will be printed to the function . DCNL Returns DCNL variables : list DCNL List of variables that were detected . DCNL Examples DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; x = dynamicsymbols ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; print ( x ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; z \ &apos; &#93; DCNL &gt; &gt; &gt; print ( x ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; x \ &apos; , \
&apos;Convenience function for creating a chart data based on the data . DCNL : param data : data to be converted DCNL : type data : str DCNL : param dir _ path : path to the file DCNL : type dir _ path : str DCNL : param offset : Number of colors in the data DCNL : type offset : int DCNL : param profile _ color : Plot width DCNL : type profile _ color : str DCNL : param color _ width : Plot width DCNL : type plot _ color : str DCNL : param plot _ width : Plot width DCNL : type plot _ color : str DCNL : param plot _ width : Plot width DCNL : type plot _ width : str DCNL : param plot _ width : Plot width DCNL : type plot _ width : str DCNL : param plot _ width : Plot width DCNL : type plot _ width : str DCNL : param plot _ width : Plot width DCNL : type plot _ width : str DCNL : param plot _ width : Plot width DCNL : type plot _ width : str DCNL
&apos;Test whether a path is a mount point of a mount point DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; file.mount / path / to / link&apos;
&apos;Get vlm _ media instance title by name or instance name . DCNL @ param p _ instance : the instance . DCNL @ param psz _ name : name of vlm media instance . DCNL @ param i _ instance : instance id . DCNL @ return : title or -1 on error . &apos;
&apos;Choose the correct Information Element class . &apos;
&apos;Take a list of paths and combine it into a list of paths . &apos;
&apos;Returns first IP address for a given network DCNL &gt; &gt; &gt; first _ ip ( \ &apos; 1.2.3.4 \ &apos; ) DCNL \ &apos; 1.2.3.4 \ &apos; DCNL &gt; &gt; &gt; first _ ip ( \ &apos; 1.2.3.4 \ &apos; ) DCNL \ &apos; 1.2.3.4 \ &apos; DCNL &gt; &gt; &gt; first _ ip ( \ &apos; 1.2.3.4 \ &apos; ) DCNL \ &apos; 1.2.3.4 \ &apos; DCNL &gt; &gt; &gt; first _ ip ( \ &apos; 1.2.3.4 \ &apos; ) DCNL \ &apos; 1.2.3.4 \ &apos; DCNL &gt; &gt; &gt; first _ ip ( \ &apos; 1.2.3.4 \ &apos; ) DCNL \ &apos; 1.2.3.4 \ &apos; DCNL &gt; &gt; &gt; first _ ip ( \ &apos; 1.2.3.4 \ &apos; ) DCNL \ &apos; 1.2.3.4 \ &apos; DCNL &gt; &gt; &gt; first _ ip ( \ &apos; 1.2.3.4 \ &apos; ) DCNL \ &apos; 1.2.3.4 \ &apos; DCNL &gt; &gt; &gt; first _ ip ( \ &apos; 1.2.3.4 \ &apos; ) DCNL \ &apos; 1.2.3.4 \ &apos; DCNL &gt; &gt; &gt; first _ ip ( \ &apos; 1.2.3.4 \ &apos; ) DCNL \ &apos; 1.2.3.4 \ &apos; DCNL &gt; &gt; &gt; first _ ip ( \ &apos; 1.2.3.4 \
&apos;Load the dataset from the dataset . DCNL Parameters DCNL name : str DCNL Name of the dataset . DCNL normalize : bool , optional DCNL Whether to normalize the dataset . DCNL randomize _ test : bool , optional DCNL Whether to train the dataset to use in the dataset . DCNL randomize _ test : bool , optional DCNL Whether to normalize the dataset . DCNL Returns DCNL dataset : DenseDesignMatrix DCNL The dataset to be loaded . &apos;
&apos;Get the description of available video subtitles . DCNL @ param p _ mi : the media player . DCNL @ return : list of description of available video subtitles . &apos;
&apos; .. todo : : DCNL WRITEME properly DCNL Parameters DCNL data : ndarray DCNL Array of data to sum to . DCNL Returns DCNL sum : ndarray DCNL The sum of the elements of data . DCNL Examples DCNL &gt; &gt; &gt; from scipy import sum _ parts DCNL &gt; &gt; &gt; from scipy import sum _ parts DCNL &gt; &gt; &gt; data = np.array ( &#91; 0 , 0 , 0 , 0 &#93; ) DCNL &gt; &gt; &gt; ndimage.sum _ parts ( data ) DCNL &gt; &gt; &gt; sum _ parts ( data ) DCNL array ( &#91; 0 , 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0 , 0 &#93; , DCNL &#91; 0 , 0
&apos;Test to ensure hug \ &apos; s not one validator works as expected&apos;
&apos;Get the list of nested rings from the last location in nested rings . &apos;
&apos;Return a boolean of whether the user has a particular organisation DCNL or None if no organisation can be found . DCNL @ param required : if True , return a new organisation DCNL @ type required : bool DCNL @ param toggle : if True , return the user \ &apos; s ID DCNL @ type include : bool DCNL @ return : True if the organisation can be found , else False DCNL @ rtype : bool&apos;
&apos;Returns _ id _ id for Open vSwitch command object . DCNL Arguments : DCNL _ id ( str ) : The id object for this file DCNL tag ( str ) : The name of the user object DCNL Returns : DCNL None&apos;
&apos;Set up an IP DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; virt.set _ network &lt; ip &gt; &apos;
&apos;Load an object to file . DCNL Parameters DCNL fname : str DCNL Filename to pickle DCNL fname : str DCNL Filename to pickle to&apos;
&apos;Return the set of changes made to the changed file if there is no DCNL changed file . &apos;
&apos;Merge two entries in a list of times and merge them into the same DCNL index . DCNL If two entries are found , then the second element is the same DCNL as the index of the top of the entry . &apos;
&apos;Attempt to register an HTTP POST form for sending events DCNL @ param form : DCNL @ type form : L { dict } DCNL @ return : A L { Method } object&apos;
&apos;Multiply ``f`` in ``GF ( p ) &#91; x &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.domains import ZZ DCNL &gt; &gt; &gt; from sympy.polys.galoistools import gf _ mul _ ground DCNL &gt; &gt; &gt; gf _ mul _ ground ( &#91; 3 , 2 , 4 &#93; , 5 , ZZ ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos;Closes all review requests for a review request . DCNL The SVN payload may contain a review request ID . DCNL : param payload : The commit to open review requests . DCNL : type server _ url : str DCNL : param server _ url : The URL to open the review requests . DCNL : type server _ url : str DCNL : return : A tuple of the review requests . &apos;
&apos;Return an argument string . DCNL Raise ``ValueError`` if no argument is found . &apos;
&apos;Set the configuration options for a list of options . DCNL Extra * options * may be passed to ``yum`` if necessary . &apos;
&apos;Fetches the contents of a given report string . &apos;
&apos;Get all the inner text of a DOM node ( recursively ) . &apos;
&apos;Resolve a package name . DCNL If namespace _ name is None , resolve _ name ( ) . DCNL If namespace _ name is None , resolve _ name ( ) . DCNL If namespace _ name is None , the name will be created . DCNL If namespace _ name is None , the name will be created . &apos;
&apos; : param text : The text to parse . DCNL : return : The content of the content . &apos;
&apos;Retrieve an item from the given item . DCNL : param item : Value to get the item from . DCNL : type item : ``str`` DCNL : param default : Default value . DCNL : type default : ``str`` DCNL : rtype : ``dict``&apos;
&apos;Return the format of a paragraph type ( e.g. , &quot; paragraph &quot; , &quot; paragraph &quot; ) . DCNL : param txt : Text to check . DCNL : type txt : str DCNL : return : The formatted text type as a string . &apos;
&apos;Generate a unique file name . DCNL @ param base _ name : Name of the file . DCNL @ type base _ name : str DCNL @ param extension : extension extension . DCNL @ type extension : str DCNL @ return : name of the file . DCNL @ rtype : str&apos;
&apos;Apply the last chunk of items to a list . DCNL Args : DCNL iterator ( iterator ) : The iterator to write . DCNL key ( str ) : The key to add to the last chunk . DCNL Returns : DCNL tuple ( list , tuple ) : The results of the last chunk . &apos;
&apos;Construct an array with shape ( n , n , n ) . DCNL Parameters DCNL v : array _ like DCNL Input array . DCNL m : int DCNL Number of columns to be converted . DCNL n : int , optional DCNL Number of dimensions . DCNL Returns DCNL v : ndarray , shape ( n _ samples , n _ features ) DCNL An array with shape ( n , k ) . DCNL Raises DCNL ValueError DCNL If `p` is not a sparse matrix , it is assumed to be the DCNL same shape as `x` . DCNL Notes DCNL The grad implemented is structured . DCNL Examples DCNL &gt; &gt; &gt; from scipy import linalg DCNL &gt; &gt; &gt; v = np.array ( &#91; &#91; 1 , 2 , 3 &#93; , &#91; 3 , 4 &#93; &#93; ) DCNL &gt; &gt; &gt; v = np.array ( &#91; &#91; 1 , 2 , 3 &#93; , &#91; 3 , 4 &#93; &#93; ) DCNL &gt; &gt; &gt; numpy.allclose ( k , k ) DCNL array ( &#91; &#91; 1 , 2 , 3 &#93; &#93; ) &apos;
&apos;Generator that returns a list of ( node , node ) tuples from a given DCNL node . DCNL Arguments : DCNL start _ node ( iterable ) : The node to traverse . DCNL get _ parents ( node- &gt; &#91; node &#93; ) - Function that returns a list of DCNL parents for which a node is yielded . DCNL get _ parents ( node- &gt; &#91; node &#93; ) - Function that returns a list of DCNL parents for each node . DCNL yield _ parents ( node- &gt; &#91; node &#93; ) - Function that returns a list of DCNL parents for each node . DCNL yield _ parents ( bool ) : If True , returns a list of nodes that are DCNL yielded . DCNL Yields : DCNL A list of ( node , node ) tuples representing the first matching DCNL node . &apos;
&apos;Get the complex path from the xml element . &apos;
&apos;If x is a theano shared variable , return a new tensor . DCNL If we \ &apos; re not a shared variable , then it is assumed to be the DCNL right side of the gpu . DCNL &gt; &gt; &gt; from sympy import exp DCNL &gt; &gt; &gt; x = MatrixSymbol ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; x = x _ exp ( x ) DCNL &gt; &gt; &gt; x = sin ( x ) * x * * 2 DCNL &gt; &gt; &gt; x _ exp ( x ) DCNL \ &apos; x \ &apos; DCNL &gt; &gt; &gt; x = x _ exp ( x ) DCNL &gt; &gt; &gt; x = sin ( x ) * x * * 2 DCNL &gt; &gt; &gt; x _ exp ( x ) DCNL \ &apos; x \ &apos; &apos;
&apos;This function returns a list of ( x , y ) -tuple with the results at that point . DCNL This function returns a list of ( x , y ) -tuple with the results at that point . DCNL In this case , it returns a tuple of ( x , y ) , where each of the DCNL three elements are : DCNL ( x , y ) , where x is a tuple of ( x , y ) , where x is a tuple of DCNL ( x , y ) , where x is a tuple of ( x , y ) , where x is a list of DCNL ( x , y ) , where x is a tuple of ( x , y ) &apos;
&apos;Helper to set a set of headers for a given set of headers . &apos;
&apos;See : meth : `I18n.ngettext` . &apos;
&apos;Compute the modified timestamp of a numpy array . DCNL Parameters DCNL X : ndarray DCNL Input data . DCNL x _ old : ndarray , shape ( n _ samples , n _ features ) DCNL The input array . DCNL Returns DCNL out : ndarray , shape ( n _ samples , n _ features ) DCNL The modified array . &apos;
&apos;Translates \ &apos; ERROR \ &apos; and \ &apos; exception \ &apos; . DCNL Raises an exception if the exception is not available . &apos;
&apos;Return a random string UUID . &apos;
&apos;Returns the current time . DCNL Returns : DCNL A string representing the current time . &apos;
&apos;Check whether or not a package is installed on a given package DCNL : param module : module to check DCNL : param install _ path : path to install DCNL : param packages : package path to install DCNL : param packages : List of packages to install DCNL : param state : package state to use DCNL : return : True on success , False if not DCNL : rtype : bool&apos;
&apos;Send emails to Employees of the enabled companies at the end of the response&apos;
&apos;Create a driver class for the given driver and class . DCNL : param driver : A list of drivers . DCNL : param provider : The class to use for the driver . DCNL : param module : The class to use for the driver . DCNL : param klass : The class to use for the drivers . &apos;
&apos;Get the class name for a given class name . DCNL : param base : the class name DCNL : param tablename : the name of the table DCNL : param table : the table name DCNL : return : the class name DCNL : rtype : str&apos;
&apos;Get vertex given stl vertex line . &apos;
&apos;Filters out the console . DCNL Input : DCNL packet ( str ) : The packet dictionary . DCNL Returns : DCNL A dictionary containing the new packet \ &apos; s values . DCNL Raises : DCNL ValueError : if the packet is not a valid packet . &apos;
&apos; &gt; &gt; &gt; memcache _ set ( request ) DCNL \ &apos; memcache _ key \ &apos; DCNL &gt; &gt; &gt; memcache _ set ( request ) DCNL ( \ &apos; memcache _ key \ &apos; , \ &apos; memcache _ key \ &apos; ) DCNL &gt; &gt; &gt; memcache _ set ( request ) DCNL \ &apos; memcache _ key \ &apos; DCNL &gt; &gt; &gt; memcache _ set ( request ) DCNL \ &apos; memcache _ key \ &apos; DCNL &gt; &gt; &gt; memcache _ set ( request ) DCNL \ &apos; memcache _ key \ &apos; DCNL &gt; &gt; &gt; memcache _ set ( request ) DCNL \ &apos; memcache _ key \ &apos; DCNL &gt; &gt; &gt; memcache _ set ( request ) DCNL \ &apos; memcache _ key \ &apos; DCNL &gt; &gt; &gt; memcache _ set ( request ) DCNL \ &apos; memcache _ key \ &apos; DCNL &gt; &gt; &gt; memcache _ set ( request ) DCNL \ &apos; memcache _ key \ &apos; DCNL &gt; &gt; &gt; memcache _ set ( request ) DCNL \ &apos; memcache _ key \ &apos; DCNL &gt; &gt; &gt; memcache _ set ( request )
&apos;Compute the knots and coefficients of a cubic B-spline . DCNL Parameters DCNL tck : tuple or tuple DCNL A list of knots , the B-spline coefficients , and the number of knots . DCNL n : int , optional DCNL The number of coefficients of the spline . DCNL Returns DCNL r : array , shape ( n _ points , n _ points ) DCNL The coefficients of the spline . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys import ring , ZZ DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; f = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; f = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; f = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; print ( x
&apos;This function returns a list of HTML tags . DCNL : param context : the django context DCNL : param objects : the list of objects to render DCNL : param skip _ group : if True , the tag will be rendered DCNL : param tag : the tag to use for the page DCNL : returns : a list of dictionaries&apos;
&apos;Get the IP address of a VF \ &apos; s pci address DCNL : param pci _ addr : The PCI address of the device . &apos;
&apos;Utility function to generate a python object for a given description DCNL Parameters DCNL desc : str DCNL The name of the file to decode . DCNL func : string DCNL The name of the module to decode . DCNL Returns DCNL cs : str DCNL The decoded string . &apos;
&apos;Convert the labels into a list of labels . DCNL Parameters DCNL labels : list DCNL The labels of the labels . DCNL x : str DCNL The labels of the labels . DCNL Returns DCNL labels : list of shape ( n _ samples , n _ features ) DCNL The labels of the labels . &apos;
&apos;Ensure that a file is absent DCNL name DCNL The name of the user to remove DCNL path DCNL The path to the file to remove DCNL mask DCNL The user to remove the job from DCNL user DCNL The user to run the job from DCNL user DCNL The user to run the job from DCNL user DCNL The user to run in the command DCNL user DCNL The user to run in the command DCNL user DCNL The user to run the job from DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; lxc.absent&apos;
&apos;Return a list of all users . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion rallydev.list _ users&apos;
&apos;Find the frame class and win , if it isn \ &apos; t found . &apos;
&apos;Return the leading coefficient of ``f`` in ``K &#91; X &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys import ring , ZZ DCNL &gt; &gt; &gt; R , x , y = ring ( &quot; x , y &quot; , ZZ ) DCNL &gt; &gt; &gt; R.dmp _ ground _ TC ( f , ZZ ) DCNL 3&apos;
&apos;Chooses a random index from a set of labels . DCNL Returns a tuple of ( width , height ) , where labels is a tuple of DCNL ( width , height ) . DCNL Examples DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; f = create _ random _ strip ( &#91; 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; g = create _ random _ index ( &#91; 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; g = create _ random _ index ( &#91; 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; g = create _ random _ index ( &#91; 0 , 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; g = create _ random _ index ( &#91; &#93; , &#91; 0 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; g = create _ random _ pos ( &#91; 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; g = create _ random _ pos ( &#91; 1 , 2 , 3 &#93;
&apos;Find the top of a quantity with noisy _ count to the top of DCNL the given year . &apos;
&apos;Checks if the specified file contains only the glob patterns . DCNL Parameters DCNL fname : str DCNL The name of the file to check . DCNL fname : str DCNL The name of the file to check . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; x509.read _ file _ ignore \ &apos; foo / bar / baz \ &apos; &apos;
&apos;This is a silly small function which checks to see if we \ &apos; re looking at DCNL the end of the terminal . &apos;
&apos;Mean of a tensor , alongside the specified axis . DCNL # Arguments DCNL x : A tensor or variable . DCNL axis : The axis along which to perform the reduction . DCNL keepdims : A boolean , whether to keep the dimensions or not . DCNL # Returns DCNL A tensor . &apos;
&apos;Load information from source space . DCNL Parameters DCNL src _ from : SourceSpaces DCNL The source space . DCNL subject _ to : str &#124; None DCNL The source space . DCNL subject _ to : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL verbose : bool , str , int , or None DCNL If not None , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL surf : dict DCNL A dictionary containing information about the source space . &apos;
&apos;Read a file . DCNL Parameters DCNL filepath _ or _ buffer : string DCNL The path to the file . DCNL encoding : str DCNL The encoding of the file . DCNL encoding : str DCNL The encoding to use . DCNL Returns DCNL encoding : str DCNL The encoding of the file . &apos;
&apos;Gets an etag if it doesn \ &apos; t have an etag . DCNL Args : DCNL options ( list ) : List of tags to get . DCNL Returns : DCNL list ( str ) : The list of entity details . DCNL Raises : DCNL ValueError : if any string doesn \ &apos; t exist . &apos;
&apos;Only load this module if the cloud module is available . &apos;
&apos;Square polynomials in `K &#91; x &#93; ` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.domains import QQ DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.rings import ring DCNL &gt; &gt; &gt; from sympy.polys.ring _ series import rs _ diff DCNL &gt; &gt; &gt; R , x , y = ring ( \ &apos; x \ &apos; , QQ ) DCNL &gt; &gt; &gt; rs _ diff ( x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2
&apos;Return the path to the Python module that can be called from pkg _ pkg DCNL : param pkg : package name DCNL : type pkg : str DCNL : return : path to the Python package DCNL : rtype : str&apos;
&apos;Follow a given file . DCNL Args : DCNL follow _ paths ( str ) : Path to the follow file . DCNL lastlines _ dirpath : str ; Path to write output to . DCNL waitsecs : int , optional ) : Path to write to . DCNL Returns : DCNL list ( str ) : A list of all of the follow file . &apos;
&apos;This function returns a list of all keys that are in the list DCNL Ex : data = &#91; { \ &apos; a \ &apos; : 1 , \ &apos; b \ &apos; : 1 , \ &apos; c \ &apos; : 1 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 } , DCNL \ &apos; a \ &apos; : 2 , \ &apos; c \ &apos; : 1 , \ &apos; c \ &apos; : 1 , \ &apos; b \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 1 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos;
&apos;Checks to see if the user has capable of running a user . DCNL Args : DCNL user : The user to check . DCNL api _ name : The name of the API to check . DCNL Returns : DCNL True if the user has capable . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; influxdb.is _ user _ activate user _ name&apos;
&apos;Try to find \ &apos; c \ &apos; and \ &apos; c \ &apos; if it is \ &apos; t \ &apos; . DCNL If sub is \ &apos; t \ &apos; , we don \ &apos; t do anything . &apos;
&apos;Join a string into a string . &apos;
&apos;Make sure a string is ready to interact with a PDF . DCNL &gt; &gt; &gt; u3Handle = OpenLabJack ( LJ _ dtU3 , LJ _ ctUSB , &quot; 1 &quot; , 1 ) DCNL &gt; &gt; &gt; tamper ( \ &apos; 123.45 \ &apos; ) DCNL ( 1 , 2 ) DCNL &gt; &gt; &gt; tamper ( \ &apos; 123.45 \ &apos; ) DCNL True DCNL &gt; &gt; &gt; tamper ( \ &apos; 123.45 \ &apos; ) DCNL True DCNL &gt; &gt; &gt; tamper ( \ &apos; 123.45 \ &apos; ) DCNL ( 1 , 2 ) &apos;
&apos;Get the area from the loop from the current location to the given location . &apos;
&apos;Check if a graph is in the graph . DCNL Parameters DCNL is _ independent : bool , optional DCNL Whether or not to plot the graph on . DCNL Returns DCNL count : int DCNL Number of nodes in the graph . &apos;
&apos;Draw a theano matrix DCNL Parameters DCNL xs : list of theano variables DCNL ys : list of theano variables DCNL shape : { array-like , float } , shape ( n _ samples , n _ features ) DCNL reg _ fn : callable , optional DCNL Returns DCNL H : array , shape = ( n _ samples , n _ features ) DCNL Estimated matrix statistics . DCNL pval : array , shape = ( n _ samples , n _ features ) DCNL Estimated mutual information . DCNL Notes DCNL This function computes the probability of the probability of a node DCNL and the probability of the probability of each node . DCNL Parameters DCNL xs : array _ like DCNL theano variables DCNL ys : array _ like DCNL theano variables DCNL update _ fn : float , optional DCNL If true , then the immediate components of each node is returned . DCNL Returns DCNL H : array , shape = ( n _ samples , n _ features ) DCNL Estimated matrix statistics . DCNL pval : array , shape = ( n _ samples , n _ features ) DCNL Estimated class
&apos;Create a new volume DCNL name DCNL Name of volume DCNL driver DCNL Driver of the volume DCNL driver _ opts DCNL Driver of the driver DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion dockerng.create _ volume pool _ name&apos;
&apos;Register the reporter classes with the linter . &apos;
&apos;Horizontal Scharr on a vertical edge should be zero . &apos;
&apos;Return lines of lines starting at the end of a file . DCNL If there is no line , return a list of lines that match the line DCNL of the line . DCNL : param filename : file name DCNL : type filename : str DCNL : param line : Line number to get lines from . DCNL : type line : int DCNL : param context _ lines : Line number to get lines from . DCNL : type context _ lines : list DCNL : return : List of lines that were read from the file . DCNL : rtype : list &#91; str &#93; &apos;
&apos;Return a dictionary of options . DCNL : Parameters : DCNL - `json _ options` : A dictionary of options to pass to the DCNL : py : class : ` ~ ckan.logic.action.update.package _ option _ update` . DCNL : return : A dictionary with the following keys : DCNL * Example : DCNL .. code-block : : python DCNL import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; from sympy.utilities.parser import parse _ options DCNL &gt; &gt; &gt; parse _ options ( \ &apos; Content-Type : \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; parse _ options ( \ &apos; Content-Type : \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; parse _ options ( \ &apos; Content-Type : \ &apos; ) DCNL \ &apos; Content-Type : \ &apos; DCNL &gt; &gt; &gt; parse _ options ( \ &apos; Content-Type : \ &apos; ) DCNL \ &apos; Content-Type : \ &apos; DCNL &gt; &gt; &gt; parse _ options ( \ &apos; Content-Type : \ &apos; ) DCNL \ &apos; Content-Type : \ &apos; DCNL &gt; &gt; &gt; parse _ options ( \ &apos; Content-Type : \ &apos; ) DCNL
&apos;Downloads libxml2 , returning the filename where the library was downloaded&apos;
&apos;Adds a \ &apos; send \ &apos; task to \ &apos; send _ new _ course _ update \ &apos; . DCNL Args : DCNL update ( dict ) : the updated course _ key . DCNL course _ key ( CourseKey ) : Identifier for the course . DCNL Returns : DCNL None&apos;
&apos;Returns a list of paths ( paths , directories ) for paths and directories . DCNL Takes a list of paths and returns a list of paths&apos;
&apos;Given a widget object , get the widget objects for use . &apos;
&apos;Send an email to a user . DCNL Args : DCNL student ( User ) : The student to send DCNL param _ dict ( str ) : The name of the email to send . DCNL language ( str ) : The language to send to the email . DCNL Returns : DCNL A `Tensor` representing the email address of the email . &apos;
&apos;Retrieve the location of the remote server to the remote server . DCNL : return : Path to the remote server to the remote server . &apos;
&apos;Execute command in a subshell , return status code . &apos;
&apos;Return a webob.exc.HTTPConflict instance containing an HTTP DCNL InstanceInvalidState exception . &apos;
&apos;random _ selection ( a , start , end ) - &gt; list DCNL Arguments : DCNL a ( list ) : A list of integers . DCNL start ( int ) : The end of the interval . DCNL end ( int ) : The end index of the interval . DCNL i ( int ) : The end index of the interval . DCNL Returns : DCNL A tuple of ( start , end ) -tuple . DCNL Examples DCNL &gt; &gt; &gt; a = random _ selection ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL &gt; &gt; &gt; r = random _ selection ( a , end ) DCNL &gt; &gt; &gt; r = random _ selection ( a , end ) DCNL &gt; &gt; &gt; r = random _ selection ( a , end ) DCNL &gt; &gt; &gt; r = random _ selection ( a , end ) DCNL &gt; &gt; &gt; r = random _ selection ( a , end ) DCNL &gt; &gt; &gt; r = random _ selection ( a , end ) DCNL &gt; &gt; &gt; random
&apos;Main script for the Python script . DCNL This function is meant to be used as a script in the future . DCNL It is meant to be used in the Python script . It is meant to be used DCNL in the format of this script . &apos;
&apos;Collects all the files in * package * files in the given package . DCNL Parameters DCNL package : str DCNL Path to the package to be searched for . DCNL include _ py _ files : bool , optional DCNL If True , include all the files in the package . DCNL subdir : str , optional DCNL The name of the package to be searched for . DCNL Returns DCNL files : list DCNL List of strings containing the files in the package . DCNL Examples DCNL &gt; &gt; &gt; from sympy import collect _ data _ files DCNL &gt; &gt; &gt; import os _ data DCNL &gt; &gt; &gt; import os _ data DCNL &gt; &gt; &gt; list ( collect _ data _ files ( &#91; \ &apos; .py \ &apos; , \ &apos; .py \ &apos; , \ &apos; .py \ &apos; , \ &apos; .py \ &apos; , \ &apos; .py \ &apos; , \ &apos; .py \ &apos; &#93; ) ) DCNL &#91; \ &apos; sympy / * / * / * / * / * / * / * / * / * / * / * / * / * / *
&apos;Encrypt a plaintext password from the specified plaintext . DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; test.encrypt&apos;
&apos;Parses a referrers string and returns a tuple of ( referrers , groups ) tuples . DCNL For example : : DCNL &gt; &gt; &gt; parse _ acl ( &#91; \ &apos; a \ &apos; , \ &apos; e \ &apos; , \ &apos; e \ &apos; , \ &apos; e \ &apos; &#93; ) DCNL &#91; ( \ &apos; e \ &apos; , \ &apos; e \ &apos; ) , ( \ &apos; e \ &apos; , \ &apos; e \ &apos; ) &#93; &apos;
&apos;Run : py : func : `popen _ id``. DCNL : type args : CommonConfig DCNL : param args : Additional keyword arguments to pass to Popen . DCNL : type kwargs : Iterable DCNL : param kwargs : Additional keyword arguments to pass to ``subprocess.check _ call ( ) `` . &apos;
&apos;Evaluate functional composition ``f ( p ) `` in ``K &#91; x &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys import ring , ZZ DCNL &gt; &gt; &gt; R , x = ring ( &quot; x &quot; , ZZ ) DCNL &gt; &gt; &gt; R.dup _ transform ( x * * 2 + 2 * x * * 2 + 2 * x + 2 ) DCNL x * * 2 + x * * 2 + 1&apos;
&apos;Save a collection item to database DCNL @ param Collection collection collection DCNL @ param Item item collection item&apos;
&apos;Create an instance of an instance . &apos;
&apos;retrieve the location of the request in the registry DCNL This is useful when you want to retrieve the key / value of the DCNL resource in the registry , so we can use the request as well as the DCNL resource in the order of the request . &apos;
&apos;Get the status of a service DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; netscaler.service _ status \ &apos; serviceName \ &apos; &apos;
&apos;Warn if required requirements are present in the given problem . &apos;
&apos;This is a backwards compatibility function . Its result is the same as DCNL calling : : DCNL request.current _ route _ url ( request , * * kw ) DCNL See : meth : `pyramid.request.Request.current _ route _ url` for more information . &apos;
&apos; @ param code : The code to be checked DCNL @ type code : C { str } DCNL @ return : The IP address in the form DCNL @ rtype : C { str } &apos;
&apos;Add metadata for a given file . DCNL Parameters DCNL path : string DCNL The name of the metadata . DCNL Returns DCNL type : str DCNL The type of the given file type . &apos;
&apos;Returns a factory for the given type . &apos;
&apos;This is a helper function to determine the location of the datasource . DCNL This is a convenience method to determine the data in the format . DCNL This is a convenience method to make sure the data is in the format DCNL in the form \ &apos; s _ data _ data \ &apos; . &apos;
&apos;Signs a string . DCNL Args : DCNL wire ( str ) : The desired key . DCNL keyname -- A string representing the key \ &apos; s keyname . DCNL time ( str ) : The time in the request . DCNL request _ id ( str ) : The time of the request . DCNL request _ id ( str ) : The time to use in the request . DCNL other _ data ( str ) : The time to use in the request . DCNL key ( str ) : The time to use in the request . DCNL key ( str ) : The time to use in the request . DCNL key ( str ) : The time to use in the request . DCNL Returns : DCNL A string representing the signed dictionary . &apos;
&apos;A skeleton response object . &apos;
&apos;Calculates the indefinite integral of ``f`` in ``K &#91; X &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys import ring , ZZ DCNL &gt; &gt; &gt; R , x , y = ring ( &quot; x , y &quot; , ZZ ) DCNL &gt; &gt; &gt; R.dmp _ integrate _ in ( x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 +
&apos;This is a thread handler that saves the X _ stack signal from the DCNL thread . &apos;
&apos;Display the books ( based on the specified order _ id ) . DCNL By default , the library ID will be included in the page _ id and then DCNL the output _ id is the same as the last _ modified _ id parameter . DCNL If the input _ id parameter is None , then the output will be returned . DCNL Otherwise , returns an empty dict . DCNL Example : : DCNL { % get _ show _ by _ id % } DCNL { % endfor % } DCNL { % endfor % } DCNL { % endfor % } DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % }
&apos;Return a dictionary of injected network names for the specified network . DCNL Parameters DCNL network _ info : str DCNL The network info . DCNL use _ ipv4 : bool , optional DCNL If True , use the default network for this network . DCNL template : str , optional DCNL The name of the security group to use . Default is None . DCNL template _ network _ template : string , optional DCNL The name of the template to use for this network . DCNL Returns DCNL dict DCNL A dictionary of ( network _ name , network _ name ) for the specified network . DCNL Raises DCNL ValueError DCNL If the network does not exist on the network . &apos;
&apos;Fixture to reset _ cache _ tag . &apos;
&apos; .. versionadded : : 2016.3.0 DCNL Sync refresh databases DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.refresh _ db&apos;
&apos;When time zone support is enabled , convert naive datetimes DCNL entered in the current time zone to aware datetimes . &apos;
&apos;A helper for defining boolean options . &apos;
&apos;Try to load language code in \ &apos; lang _ language \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; , \ &apos; fr \ &apos; ,
&apos;Decorate a function and return a custom name . &apos;
&apos;Return the file name , where the file is contained in the file DCNL path DCNL path to the file DCNL saltenv : base DCNL The path to which the file will be searched . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; file.find _ file / path / to / file / path / to / file&apos;
&apos;Load the csv file and return a Dataset class . DCNL Returns DCNL Dataset instance : DCNL See DATASET _ PROPOSAL.txt for more information . &apos;
&apos;this function flattens each element of a sequence DCNL &gt; &gt; &gt; from sympy.utilities.iterables import flatten DCNL &gt; &gt; &gt; list ( flatten ( &#91; \ &apos; John \ &apos; , \ &apos; Hunter \ &apos; , \ &apos; Hunter \ &apos; , \ &apos; Hunter \ &apos; &#93; ) ) DCNL &#91; &#91; 1 , 2 , 3 &#93; , &#91; 6 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 23
&apos;Determine if the segment is intersecting the loop list . &apos;
&apos;Reports the expected diff . DCNL : param diffs : List of tokens . DCNL : param bg : Optional , if True , don \ &apos; t print lines . DCNL : type indent : int or None DCNL : return : List of ( diff , output ) tuples . DCNL : rtype : list &#91; str , None &#93; &apos;
&apos;Render the tax view . DCNL : param request : The request to be rendered DCNL : type request : django.http.HttpRequest DCNL : param tax _ id : The tax id of the page DCNL : type request _ id : str DCNL : param response _ format : The response to be rendered DCNL : type response _ format : str DCNL : rtype : django.http.HttpResponse&apos;
&apos;Function to mark execution time as timeit method . &apos;
&apos;This function returns a date for the given date _ date . DCNL Parameters DCNL http _ date : str DCNL The HTTP response date . DCNL original _ date : bool DCNL If True , the date will be converted to a valid date . DCNL Returns DCNL date : str DCNL The date as a string . &apos;
&apos;Setup or create a platform . DCNL This is useful for unit tests . DCNL : param platform : Path to test . DCNL : param config : Configuration instance . DCNL : param add _ devices : Path to the platform . DCNL : param discovery _ info : Handler object . &apos;
&apos;Enable ``flocker-volume`` with the given arguments . DCNL : param bytes distribution : The distribution to enable . DCNL : param action : action to start with . DCNL : return : An Effect to enable the test . &apos;
&apos;Return the connection . DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; modjk.get _ conn DCNL salt \ &apos; * \ &apos; modjk.get _ conn other-profile&apos;
&apos;Balance correlation from a 1D array . DCNL Parameters DCNL s : array _ like DCNL Input array . DCNL axis : int , optional DCNL Axis along which to compute the correlation . Defaults to None . DCNL Returns DCNL corr : ndarray ( float , ndim = 1 ) DCNL Array of filtered arrays . DCNL axis : int , optional DCNL Axis along which to compute the correlation . &apos;
&apos;Checks if user has access to a particular user . DCNL Arguments : DCNL user ( User ) : user to check DCNL action ( str ) : action to check for DCNL Returns : DCNL bool : True if user has access to the course , False otherwise . &apos;
&apos;Args : DCNL sequences : List of sequences DCNL start _ id : int , number of ids to add DCNL remove _ last : bool , default True DCNL Returns : DCNL List of ( ids , ids , ids ) tuples for each sequences . DCNL Examples : DCNL &gt; &gt; &gt; sentences _ ids = &#91; &#91; 1 , 2 , 3 &#93; , &#91; 3 , 4 , 5 &#93; &#93; DCNL &gt; &gt; &gt; sentences _ add _ start _ id ( ids ) DCNL &#91; 1 , 2 , 3 , 4 &#93; DCNL &gt; &gt; &gt; list _ add _ start _ id ( sequences ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; sentences _ add _ start _ id ( sequences ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; sentences _ add _ start _ id ( sequences ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; sentences _ add _ start _ id ( sequences ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; sentences _ add _ start _ id ( ids
&apos;Test either if an error is raised when sample is called before DCNL fitting&apos;
&apos;Prepare the Python version of `x` . DCNL Parameters DCNL x : array-like DCNL Input variable . DCNL y : int DCNL The type of y to be converted . DCNL Returns DCNL x : scalar or float DCNL The transformed value . &apos;
&apos;Run the user \ &apos; s UID and execute its uid . DCNL : param uid : UID of the user to run DCNL : type uid : str DCNL : return : None&apos;
&apos;Convert a numeric type * value * to a Python list . DCNL If the value is not a numeric type , it will be converted to a DCNL numeric type . &apos;
&apos;Write a file . DCNL : param filename : The name of the file to check . DCNL : param cache : The cache for the file . DCNL : return : A temporary file . DCNL : rtype : : class : `tempfile.NamedTemporaryFile`. DCNL : returns : A temporary file if it does not exist . &apos;
&apos;Delete an existing key for this key . DCNL If the key is not found in the group , then it will be removed DCNL for the existence of this group . If there are no such constraints , DCNL they will be deleted . &apos;
&apos;Try to get the default directory for the temp directory . DCNL This function is meant to be used when the template directory is DCNL running in the directory tree . DCNL : return : The path to the default script directory . DCNL : rtype : list DCNL : returns : The default directory where the file is located . &apos;
&apos;List floating IPs DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -f floating _ ip _ pools _ list opennebula&apos;
&apos;Delete a DynamoDB table . DCNL CLI example : : DCNL salt myminion boto _ dynamodb.delete table _ name region = us-east-1&apos;
&apos;Determine the word name that is square . &apos;
&apos;Test that hug \ &apos; s character is a valid regular character . DCNL This is a little helper method to make sure special chars in a valid DCNL character is valid . &apos;
&apos;Remove the SQS queue . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ cfn.exists mystack region = us-east-1&apos;
&apos;Compute the square root of `p` . DCNL Parameters DCNL p : ndarray DCNL Right-hand side DCNL Returns DCNL x : ndarray DCNL The square root of the prime . DCNL Examples DCNL &gt; &gt; &gt; from sympy import sqrt DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; _ sqrt _ match ( x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + 2 * x * * 2 + sqrt ( 3 ) * * 2 + sqrt ( 3 ) * * 2 + sqrt ( 3 ) * * 2 + sqrt ( 3 ) * x * * 2 + sqrt ( 3 ) * * 2 + sqrt ( 3 ) * * 2 + sqrt ( 3 ) * * 2 + sqrt ( 3 ) * * 2 + sqrt (
&apos;``Actor`` focused activity handler for an event . DCNL If the event _ id is given , the event _ id will be returned . &apos;
&apos;Check if the media url is in MEDIA _ MEDIA _ PREFIX . &apos;
&apos;Get a list of subnets to which the given subnet belongs to . DCNL If a subnet is not found , it will be returned . DCNL : param subnet _ id : ID of the subnet to find DCNL : param cidr _ id : ID of the subnet DCNL : param identifier _ id : ID of the subnet DCNL : return : List of subnet&apos;
&apos;Test score statistics . DCNL Read more in the : ref : `User Guide &lt; cross _ stats &gt; ` . DCNL Parameters DCNL data : array-like , shape ( n _ samples , n _ features ) DCNL Input data . DCNL mask : ndarray , shape ( n _ samples , n _ features ) DCNL Input data . DCNL Returns DCNL sigma : float DCNL Estimated class statistics . &apos;
&apos;Return the value of a Numpy matrix . DCNL The returned matrix is the inverse of the matrix . &apos;
&apos;Return the full path for a given path . &apos;
&apos;Bind a interface to a zone DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; firewalld.add _ interface zone 192.168.1.0 / 24&apos;
&apos;Converts \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; or \ &apos; Name.SomeVersion \ &apos; or DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \ &apos; , DCNL \ &apos; Name.SomeVersion _ Suffix.dylib \
&apos; : param sum : the sum of the diff DCNL : return : a list of numbers DCNL : rtype : float&apos;
&apos;Convert a disk space to a specific disk DCNL : param std _ dir _ only : if True , only the disk bus is used DCNL : param get _ all _ disks : Whether to get a disk disk DCNL : param get _ all _ disks : Whether to get the disk disk DCNL : return : a list of disk DCNL : rtype : list &#91; str &#93; &apos;
&apos;A decorator that can be used as a decorator that can be used DCNL as a decorator that can be called with pytest.mark.skipif instead . DCNL This is designed to be called with pytest.mark.skipif instead . DCNL This is designed to be called as a decorator that can be used DCNL as a decorator that can be called with pytest.mark.skipif instead . DCNL This is designed to be called with pytest.mark.skipif instead . DCNL This is designed to be called as a decorator that can be used DCNL as a decorator that can be called with pytest.mark.skipif instead . DCNL This is designed to be called with pytest.mark.skipif instead . DCNL This is designed to be called as a decorator that can be used DCNL as a decorator that can be called with pytest.mark.skipif instead . DCNL This is designed to be called with pytest.mark.skipif instead . DCNL This is designed to be called as a decorator that can be used DCNL as a decorator that can be called with pytest.mark.skipif instead . DCNL This is designed to be called as a decorator that can be used DCNL as a decorator that can be called with pytest.mark.skipif instead . DCNL
&apos;The entry point for CloudTrail high level commands . &apos;
&apos;Seed the random seed for the given seed . DCNL Parameters DCNL seed : int , optional DCNL The seed to use for generating random numbers . DCNL Returns DCNL seed : int DCNL The seed for the random seed . &apos;
&apos;Verifies the paths with the given path and extension . &apos;
&apos;Confirms the specified message DCNL : param message : DCNL : param text : DCNL : param text : DCNL : return : &apos;
&apos;Returns a key whose value in `dictionary` is `element` DCNL or , if none exists , None . &apos;
&apos;The main loop of the main loop that runs when the program exits . &apos;
&apos;Uninstalls the task \ &apos; s cache device ( e.g. flushing DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; bcache.uninstall&apos;
&apos;Compute the L2-norm of the given y . DCNL Parameters DCNL x : array-like , shape ( n _ samples , n _ features ) DCNL The input x . DCNL y : { array-like , sparse matrix } , shape ( n _ samples , n _ features ) DCNL The input x . DCNL x _ discrete : float , optional DCNL The absolute value of the continuous parameter . DCNL n _ neighbors : int , optional DCNL The expected type of the continuous parameter . DCNL Returns DCNL p : ndarray , shape ( n _ samples , n _ features ) DCNL The transformed data . DCNL Notes DCNL This function is expressed as a helper function . DCNL References DCNL .. &#91; 1 &#93; http : / / en.wikipedia.org / wiki / Power _ components DCNL .. &#91; 1 &#93; http : / / en.wikipedia.org / wiki / Power _ components DCNL Parameters DCNL x : array-like , shape ( n _ samples , n _ features ) DCNL Independent values . DCNL y : { array-like , sparse matrix } , shape ( n _ samples , n _ features ) DCNL
&apos;Check out a bem file . DCNL Parameters DCNL surfs : list of str DCNL The BEM surfaces to check . DCNL Returns DCNL out : bool DCNL Whether ``subject`` is a bem file . &apos;
&apos;url _ name _ for _ block ( block _ name , block _ name ) DCNL &gt; &gt; &gt; url _ name _ for _ block ( \ &apos; http : / / stackoverflow.com / a / pep257.py \ &apos; ) DCNL \ &apos; http : / / stackoverflow.com / a / pep257.py \ &apos; DCNL &gt; &gt; &gt; url _ name _ for _ block ( \ &apos; http : / / stackoverflow.com / a / pep257.py \ &apos; ) DCNL \ &apos; http : / / example.com / foo / bar \ &apos; DCNL &gt; &gt; &gt; url _ name _ for _ block ( \ &apos; http : / / example.com / c \ &apos; ) DCNL \ &apos; http : / / stackoverflow.com / a / pep257.py \ &apos; &apos;
&apos;Create a `storage` object from all of the keys in `requireds` and using the DCNL values in `defaults` . DCNL For example , `storify ( { \ &apos; a \ &apos; : 1 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; : 2 , \ &apos; c \ &apos; :
&apos;This is a decorator that checks that the user is logged in , redirecting DCNL to the login page if the user is logged in . Otherwise , the user DCNL is logged in . &apos;
&apos;Given a list of tuples , a list of tuples and a list of tuples&apos;
&apos;Create a setup function for sphinx extension . DCNL This function is meant to be used in setup _ handler for testing . DCNL This function is meant to be used in setup _ setup ( ) and DCNL configure _ setup ( ) . DCNL Parameters DCNL app : sphinx.application.Sphinx DCNL Application object for the application . DCNL status : str , optional DCNL The status of the application to attach to . DCNL warning : dict DCNL The warning to attach to the application . DCNL Returns DCNL out : dict DCNL The setup function for the application . &apos;
&apos;Moves the files to one of the files . DCNL Parameters DCNL version _ pk : str DCNL Path to the release file to move to . DCNL hostname : str DCNL The name of the file to move . DCNL html : bool , optional DCNL If True , don \ &apos; t want to write the files to the file . DCNL search : bool , optional DCNL If True , don \ &apos; t want to write the files to the file . DCNL search : bool , optional DCNL If True , don \ &apos; t want to write the file to the file . DCNL search : bool , optional DCNL If True , don \ &apos; t want to write the file to the file . DCNL search : bool , optional DCNL If True , don \ &apos; t want to write the file to the file . DCNL Returns DCNL files : dict DCNL A dictionary of file metadata . DCNL Examples DCNL &gt; &gt; &gt; import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; from Bio import misc DCNL &gt; &gt; &gt; Entrez.email = &quot; Your.Name.Here @ example.org &quot; DCNL &gt; &gt;
&apos;Generates a unique password for the specified user . DCNL : param user : The user to generate the reset password for . DCNL : type user : str DCNL : return : The hashed password . DCNL : rtype : str&apos;
&apos;Converts a ( red , green , blue ) tuple to # rrggbb . &apos;
&apos;Display a user \ &apos; s play . DCNL : param bot : The user to check . DCNL : type trigger : str&apos;
&apos;Assign forum _ role _ to _ exploration . DCNL Args : DCNL committer _ id : str . The id of the user . DCNL exploration _ id : str . The exploration id . DCNL new _ role : str . The user id . DCNL new _ role : str . The new role . &apos;
&apos; : param executor _ reference : The executor reference to be used . DCNL : param processes : A multiprocessing.Queue of _ CallItems derived from being DCNL checked . DCNL : param pending _ work _ items : A multiprocessing.Queue of _ ResultItems that will be run DCNL in the process . DCNL : param work _ queue _ items : A multiprocessing.Queue of _ ResultItems that will be run DCNL in the queue . DCNL : param call _ queue : The queue to run in the queue . DCNL : param result _ queue : A multiprocessing.Queue of _ ResultItems that will be run DCNL in the queue . DCNL : param result _ queue : A multiprocessing.Queue of _ ResultItems that will be run DCNL in the queue . DCNL : param result _ queue : A multiprocessing.Queue of _ ResultItems that will be run DCNL in the queue . DCNL : param result _ queue : A multiprocessing.Queue of _ ResultItems that will be run DCNL in the queue . DCNL : param result _ queue : A multiprocessing.Queue of _ ResultItems that will be run DCNL in the queue . DCNL : param result
&apos;Assert a function in seconds . DCNL : param operator : The operator to be printed . DCNL : param s : Time to be printed . DCNL : param func : Function to use . DCNL : param * * kwargs : Extra arguments to pass to func . DCNL : param kwargs : keyword arguments to pass to func . &apos;
&apos;Produces a sequence of NLTK data files that are in the given DCNL sequence of sequences . DCNL For example : : DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt; &gt; &gt; from Bio import SeqIO DCNL &gt;
&apos;SetSubtensor ( x , x , x ) - &gt; alloc ( x , x ) - &gt; Join ( x , x ) - &gt; Join ( x , x ) - &gt; Join ( x , x ) - &gt; Join ( x , x ) &apos;
&apos;Create a store in a form that has been changed at a time in DCNL the database . &apos;
&apos;removes the string `remove` from the left of `text`&apos;
&apos;Craft a gcode file . &apos;
&apos;Recursively move a file or directory to another destination . DCNL If the destination is already a directory , it will be removed . DCNL If the destination is already a directory , it will be removed . DCNL If the destination is already a directory , it will be removed . &apos;
&apos;Convert an Internationalized Resource Identifier ( IRI ) portion to a URI DCNL portion of an Internationalized Resource Identifier ( IRI ) . &apos;
&apos;Display the latest version of a git repository . DCNL If the package is not installed , it will be installed and the DCNL package is installed . &apos;
&apos;Return the root directory for the given resource name . DCNL : param resource : The resource name . DCNL : param request : The request object . DCNL : return : The name of the resource . &apos;
&apos;Returns the config file for a file , if it exists , otherwise DCNL it will be used . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; dnsmasq.get _ config / path / to / file&apos;
&apos;Convert an integer to an integer . DCNL Args : DCNL scale : An integer representing an integer . DCNL Returns : DCNL An integer representing the number of seconds since the epoch . &apos;
&apos;Helper function that returns a list of matching keys for a given key DCNL of the given key . DCNL : type table : ``dict`` DCNL : param table : The string to convert . DCNL : type key : str DCNL : param key : The key to be converted into a string . DCNL : type key : ``str`` DCNL : rtype : Iterable &#91; str &#93; &apos;
&apos;Perform a single service . DCNL @ type flags : C { str } DCNL @ param flags : The name of the service . DCNL @ type aliases : C { str } DCNL @ param domain : The domain name . DCNL @ type aliases : C { str } DCNL @ param domain : The domain name . DCNL @ type name : C { str } DCNL @ param name : The domain name . DCNL @ type name : C { str } DCNL @ param name : The name of the domain . DCNL @ type name : C { str } DCNL @ param name : The domain name . DCNL @ type name : C { str } DCNL @ param name : The domain name . DCNL @ rtype : C { str } DCNL @ return : A tuple of ( name , port ) pairs . DCNL @ rtype : C { str } &apos;
&apos;Find and Register a package . DCNL Assumes the core registry is in the core registry . DCNL Assumes the core registry is registered . &apos;
&apos;Return kernel _ info information from osquery DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; osquery.kernel _ info&apos;
&apos;Options that don \ &apos; t need to be set to the right side . DCNL This function is intended to be used when creating a new pull DCNL function so that it can \ &apos; t be converted to a new list . &apos;
&apos;Get tax rules . DCNL : param taxing _ context : TaxRule object . DCNL : type tax _ class : shuup.core.taxing.TaxableItem DCNL : param tax _ class : Taxful tax rules . DCNL : type tax _ class : shuup.core.taxing.TaxableItem DCNL : return : List of tax rules . DCNL : rtype : TaxSummary&apos;
&apos;Return the Hilbert transform of a signal . DCNL Parameters DCNL n : int DCNL The number of times to compute the hilbert transform in . DCNL Returns DCNL out : ndarray DCNL The hilbert transform of the input array . &apos;
&apos;Returns the sum of the values of the iterable . &apos;
&apos;Convert a CSV file to a csv file . DCNL Args : DCNL tweets _ file : A string containing the contents of a csv file . DCNL outfile : File-like object to which to write the data to . DCNL entity _ fields : A list of entity _ fields to write . DCNL entity _ fields : A list of entity _ fields to write to . DCNL error : The content to write to the response . DCNL Returns : DCNL A dictionary containing the contents of the csv file . &apos;
&apos;Update the given quotas for a given project and resource . &apos;
&apos;Asynchronously allocates an asynchronous object . DCNL Identical to db.datastore _ errors.Error. DCNL Args : DCNL model _ key : The datastore key to allocate . DCNL size : The size of the datastore . DCNL * * kwargs : Keyword arguments to pass to the datastore . DCNL Returns : DCNL A UserRPC object . &apos;
&apos;Converts from ISO 8601 format ( http : / / www.python.org / dev / peps / pep-0249 / &gt; ` _ . DCNL : rtype : list ( str ) &apos;
&apos;Encode the message \ &apos; s payload in quoted-printable . DCNL Also , add an appropriate Content-Transfer-Encoding header . &apos;
&apos;Write the contents of a given file . DCNL Args : DCNL filename : The name of the file . DCNL show _ row _ metadata _ metadata : the metadata for the metadata . DCNL out : Indent writer used for generating text . &apos;
&apos;Return a query dictionary based on the settings in the settings . DCNL : param sample _ filter : SampleFilter instance DCNL : param require _ meter : If true , the filter does not have a meter . DCNL : return : The query dictionary . &apos;
&apos;Gets the value of the user with the given user . DCNL Parameters DCNL message : str DCNL The user to get the value from . DCNL default _ value : int DCNL The default value of the user . DCNL hidden : bool , optional DCNL Whether to set the value of the user . Default is False . DCNL Returns DCNL value : str DCNL The value of the user . &apos;
&apos;Check if the subnet is a private subnet . DCNL Example : DCNL &gt; &gt; &gt; is _ private _ subnet ( &quot; 1234 &quot; ) DCNL False DCNL &gt; &gt; &gt; is _ private _ subnet ( &quot; 1234 &quot; ) DCNL False&apos;
&apos;Emit events events to the course . DCNL If the event is not specified , the event is sent to the course . DCNL Args : DCNL event _ name ( str ) : The name of the event . DCNL user ( str ) : The user ID . DCNL course _ id ( str ) : The course ID . DCNL course _ data ( str ) : The location of the course . DCNL event _ data ( dict ) : The event data . DCNL event _ data ( dict ) : The event data . DCNL Returns : DCNL None&apos;
&apos;Write a checkpoint directory for the given cluster DCNL path _ key : the path of the checkpoint directory DCNL ids : A list of ids of the relations DCNL ids : list of ids of ids in the cluster DCNL ids : list of ids of the cluster DCNL ids : list of ids of the cluster DCNL out _ fp : list of ids of the relations DCNL out _ fp : list of ids of the relations DCNL out _ fp : list of ids of the relations DCNL out _ fp : list of ids of the relations DCNL out _ fp : list of ids of the relations DCNL out _ fp : list of ids of the relations DCNL out _ fp : list of ids of the relations DCNL out _ fp : list of ids of the relations DCNL out _ fp : list of ids of the relations DCNL out _ fp : list of ids of the relations DCNL out _ fp : list of ids of the relations DCNL out _ fp : list of ids of the relations DCNL out _ fp : list of ids of the
&apos;Return a free binding for the given port and mac _ id in the given DCNL port . DCNL Parameters DCNL port _ id : str DCNL The port id . DCNL vlan _ id : str DCNL Name of the vlan . DCNL instance _ id : str DCNL The ID of the instance to switch to . DCNL instance _ id : str DCNL The ID of the instance to be created . &apos;
&apos;Filter out private items in a user dict . DCNL : param user _ ref : user reference . DCNL : returns : user _ ref&apos;
&apos;Run an exception handler . DCNL This is a wrapper around : py : func : `SecurityError` . &apos;
&apos;Returns the user \ &apos; s login page with the given user \ &apos; s login page . DCNL If the user is logged in , the user is logged in . &apos;
&apos;Gets the user model class with the specified model . DCNL : rtype : model DCNL : return : The model model . &apos;
&apos;Removes useless ( s ) from the meta _ _ name _ _ . &apos;
&apos;Group input through a single tensor . DCNL Parameters DCNL incoming : `Tensor` DCNL The incoming tensor . DCNL output _ tensor : str DCNL The name of the graph . DCNL collection _ node _ instance : str DCNL The name of the node . DCNL train _ state : bool , optional DCNL If True , the initial state will be used . DCNL initial _ state _ op : bool , optional DCNL If True , the initial state will be used . DCNL initial _ state _ op : bool , optional DCNL If True , the initial state will be used . DCNL initial _ state _ op : bool , optional DCNL If True , the initial state will be returned . DCNL scope : bool , optional DCNL If True , the initial state will be used . DCNL scope : bool , optional DCNL If True , the initial state will be used . DCNL scope : bool , optional DCNL If True , the initial state will be returned . DCNL scope : bool , optional DCNL If True , the initial state will be returned . DCNL scope : bool
&apos;Features should have to be called by a regular expression . DCNL This is done to make sure that we can \ &apos; t crash if the input DCNL is not in a scenario . DCNL Okay : spam ( 1 ) DCNL Okay : if ( \ &apos; foo \ &apos; , \ &apos; bar \ &apos; ) : DCNL ... print ( test _ string ( \ &apos; Hello \ &apos; ) ) DCNL # Do something&apos;
&apos; &gt; &gt; &gt; escape _ decode ( &quot; \ &apos; &quot; ) DCNL \ &apos; \ &apos; \ &apos; DCNL &gt; &gt; &gt; escape _ decode ( &quot; \ &quot; \ &apos; ) DCNL \ &apos; \ &apos; \ &apos; DCNL &gt; &gt; &gt; escape _ decode ( &quot; \ &apos; &quot; ) DCNL \ &apos; \ &apos; \ &apos; DCNL &gt; &gt; &gt; escape _ decode ( &quot; \ &quot; \ &apos; ) DCNL u \ &apos; \ &apos; \ &apos; DCNL &gt; &gt; &gt; escape _ decode ( &quot; \ &apos; &quot; ) DCNL \ &apos; \ &apos; \ &apos; DCNL &gt; &gt; &gt; escape _ decode ( &quot; \ &quot; \ &apos; ) DCNL \ &apos; \ &apos; \ &apos; DCNL &gt; &gt; &gt; escape _ decode ( &quot; \ &quot; \ &apos; ) DCNL \ &apos; \ &apos; \ &apos; DCNL &gt; &gt; &gt; escape _ decode ( &quot; \ &quot; \ &apos; ) DCNL \ &apos; \ &apos; \ &apos; DCNL &gt; &gt; &gt; escape _ decode ( &quot; \ &quot; \ &apos; ) DCNL \ &apos; \ &apos; \ &apos; DCNL &gt; &gt; &gt; escape _ decode ( &quot; \ &quot; \ &apos;
&apos;Returns an RFC-6238 Time-Based on OCB mode . &apos;
&apos;Return the : class : `.AutomapBase.prepare.name _ for _ collection _ relationship` DCNL parameter . DCNL : param base : the : class : `.AutomapBase` class doing the prepare . DCNL : param local _ cls : the class to be mapped on the referring side . DCNL : param referred _ cls : the class to be mapped on the referring side . DCNL : param constraint : the class that should be mapped to the local DCNL class . DCNL : return : The decorated class . &apos;
&apos;Exemplify Rule.format ( &quot; verbose &quot; ) &apos;
&apos;Return the location of the VM DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; virt.get _ location &lt; vm name &gt; &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 243&apos;
&apos;get _ home _ dir ( ) tries to find _ home _ dir if set&apos;
&apos;Coerce \ &apos; value \ &apos; to a string representation . DCNL : param value : The value to convert . DCNL : type value : ``str`` DCNL : param num _ items : The number to convert . DCNL : type num _ items : int DCNL : param min _ value : The minimum value to compare . DCNL : type min _ value : int DCNL : rtype : str&apos;
&apos;Given a series of integers , returns a new numpy record array . DCNL Given a series of integers , returns a new numpy record array . DCNL Given a series of integers , returns a new numpy record array . DCNL Given a series of integers , returns a new numpy array with the following DCNL values : DCNL &gt; &gt; &gt; parse _ row ( \ &apos; dog \ &apos; , \ &apos; dog \ &apos; , \ &apos; j \ &apos; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos;
&apos;Returns an HTML body for the given `input _ string` . If input _ path is DCNL specified , it is assumed to be a Unicode string . DCNL : param input _ string : The input string . DCNL : type input _ string : str DCNL : param source _ path : The desired encoding of the input string . DCNL : type source _ path : str DCNL : param source _ encoding : The encoding of the input string . DCNL : type destination _ encoding : str DCNL : param input _ encoding : The encoding of the input string . DCNL : type output _ encoding : str DCNL : param output _ encoding : The encoding of the body of the input . DCNL : type output _ encoding : str DCNL : param output _ encoding : The encoding of the desired encoding . DCNL : type output _ encoding _ level : str DCNL : param initial _ header _ level : The encoding of the body of the body . DCNL : type initial _ header _ level : str DCNL : param initial _ header _ level : The
&apos;Get the color name for a particular op . DCNL For example : DCNL &gt; &gt; &gt; from sympy import ZZ DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; g = symbol ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; g = symbol ( \ &apos; x \ &apos; , 3 ) DCNL &gt; &gt; &gt; g = \ &apos; dog \ &apos; DCNL &gt; &gt; &gt; g = symbol ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; g = \ &apos; dog \ &apos; DCNL &gt; &gt; &gt; g = symbol ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; g = \ &apos; dog \ &apos; DCNL &gt; &gt; &gt; g = symbol ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; g = \ &apos; dog \ &apos; DCNL &gt; &gt; &gt; g = symbol ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; g
&apos;Prack \ &apos; s portion of a portion of a file . DCNL The result is a list of filenames . The result is a list of DCNL nine elements , which contains the following keys : DCNL \ &apos; device \ &apos; : \ &apos; pop \ &apos; , DCNL \ &apos; contents \ &apos; : 0 , DCNL \ &apos; device \ &apos; : \ &apos; pop \ &apos; , DCNL \ &apos; id \ &apos; : \ &apos; 1 \ &apos; , DCNL \ &apos; id \ &apos; : \ &apos; 1 \ &apos; , DCNL \ &apos; id \ &apos; : \ &apos; 0 \ &apos; , DCNL \ &apos; id \ &apos; : 3 , DCNL \ &apos; device \ &apos; : \ &apos; pop \ &apos; , DCNL \ &apos; id \ &apos; : \ &apos; 0 \ &apos; , DCNL \ &apos; device \ &apos; : \ &apos; pop \ &apos; , DCNL \ &apos; id \ &apos; : \ &apos; 0 \ &apos; , DCNL \ &apos; device \ &apos; : \ &apos; pop \ &apos; , DCNL \ &apos; id \ &apos; : \ &apos; 1 \ &apos; , DCNL
&apos;Validates that \ &apos; value \ &apos; is a positive integer or a positive integer . &apos;
&apos; &gt; &gt; &gt; import random DCNL &gt; &gt; &gt; random _ id ( &quot; \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; random _ id ( \ &apos; hello \ &apos; ) DCNL \ &apos; Alice \ &apos; DCNL &gt; &gt; &gt; random ( &quot; \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; random ( &quot; \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ &apos; ) DCNL \ &apos; A \ &apos; &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 243&apos;
&apos;Translate a sentence p from q . &apos;
&apos;Conditional.get _ vae returns its VAE&apos;
&apos;Create a task to create a new task DCNL : param context : The context to create DCNL : param values : A set of values to create DCNL : param session : The session to use DCNL : return : None&apos;
&apos;Get the evaluated value as an integer . &apos;
&apos;Translate an object to a subclass of datastore _ errors.Error. DCNL Args : DCNL error : An ApplicationError to translate . DCNL Returns : DCNL A datetime object containing the type of the error , or None if the error is DCNL found . DCNL Raises : DCNL IOError : If an error is found , or None if the error is not found . &apos;
&apos;Computes the prime power of f ( p ) in p . DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . &quot; Computation of Special DCNL Functions &quot; , John Wiley and Sons , 1996 , chapter 5 . DCNL http : / / jin.ece.illinois.edu / specfunc.html DCNL .. &#91; 1 &#93; congruent 0 mod ( p ) DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . ISBN : 978-0716724117&apos;
&apos;Get virtual IP address for a subnet DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; network.get _ ip 1.2.3.4&apos;
&apos;Provide a dict of the Item objects attached to DCNL the given Item DCNL Access via the .json representation to avoid work rendering menus , etc&apos;
&apos;Return a boto connection for the service . DCNL .. versionadded : : 2016.11.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ smtp _ server.get _ connection ( \ &apos; boto.get _ connection \ &apos; ) &apos;
&apos;yaml : Trigger DCNL Trigger an email with the given project . DCNL Requires the Jenkins : jenkins-wiki : `Trigger Plugin DCNL &lt; Trigger + Plugin &gt; ` . DCNL : arg str template : Trigger metadata . DCNL : arg str command : Trigger metadata . DCNL : arg str cron : cron syntax of this project ( default \ &apos; \ &apos; ) DCNL Example : DCNL .. literalinclude : : / .. / .. / tests / builders / fixtures / trigger001.yaml DCNL : language : yaml&apos;
&apos;Print and return a logger that will be used for logging . &apos;
&apos;Read 64bit float from bti file . &apos;
&apos;Get profile for one tooth of a cylindrical gear . &apos;
&apos;Run a simple helper function . DCNL : param hostname : the hostname to run . DCNL : type hostname : str DCNL : param port : Port to connect to . DCNL : type port : int DCNL : param application : Port to listen on . DCNL : type port : int DCNL : param application : application name . DCNL : type application : str DCNL : param use _ reloader : the current application . DCNL : type use _ reloader : : class : ` ~ babelfish.language.Language` DCNL : param use _ reloader : if True , use the reloader thread . DCNL : type use _ reloader : bool DCNL : param use _ evalex : if True to use the reloader thread . DCNL : type use _ reloader : bool DCNL : param use _ evalex : if True to use the reloader thread . DCNL : type api _ step : bool DCNL : param use _ evalex : if True to use the reloader thread . DCNL : type api _ loop : bool DCNL : param use _ evalex : if True to use the reloader thread . DCNL
&apos;数据来源 ： EBOT艺恩票房智库 DCNL Parameters DCNL res : array-like , shape ( n _ samples , n _ features ) DCNL The test model . DCNL alpha : float , optional DCNL The Null hypothesis of the test . DCNL Returns DCNL table : ndarray DCNL Result of the regression test . &apos;
&apos;Given a list of layers , returns the corresponding field size . DCNL Read more in the : ref : `User Guide &lt; univariate _ feature &gt; ` . DCNL Parameters DCNL layers : list DCNL List of layers . DCNL img _ size : int DCNL Size of the layer . DCNL Returns DCNL p : ndarray DCNL The transformed data . DCNL References DCNL .. &#91; 1 &#93; http : / / docs.scipy.org / doc / scipy-0.14.0 / reference / generated / scipy.ndimage.interpolation.affine _ transform.html &gt; ` _ DCNL Examples DCNL &gt; &gt; &gt; layer = { \ &apos; x \ &apos; : 1 , \ &apos; y \ &apos; : 1 , \ &apos; y \ &apos; : 1 , \ &apos; y \ &apos; : 3 , \ &apos; y \ &apos; : 3 } DCNL &gt; &gt; &gt; layer = get _ index _ field ( &#91; \ &apos; x \ &apos; , \ &apos; w \ &apos; , \ &apos; y \ &apos; &#93; ) DCNL &gt; &gt; &gt; y = get _ index _ field ( &#91; \ &apos; x \ &apos; , \ &apos; y \ &apos; &#93; ) DCNL &gt; &gt;
&apos;Clear the default actions depending on the state of the current thread&apos;
&apos;Compute the date of the date for the given number of days . DCNL For example : DCNL .. code-block : : python DCNL &gt; &gt; &gt; date = \ &apos; % M \ &apos; DCNL &gt; &gt; &gt; date ( \ &apos; % .2f \ &apos; ) # doctest : + SKIP DCNL \ &apos; % M \ &apos; DCNL &gt; &gt; &gt; date ( \ &apos; % .2f \ &apos; ) # doctest : + SKIP DCNL \ &apos; % M \ &apos; DCNL &gt; &gt; &gt; date ( \ &apos; years \ &apos; , limit = 10 ) DCNL \ &apos; 1,234 \ &apos; DCNL &gt; &gt; &gt; date ( &quot; 10 &quot; ) DCNL \ &apos; % M \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ x01 \ &apos; DCNL &gt; &gt; &gt; date ( \ &apos; years \ &apos; , limit = 10 ) DCNL \ &apos; % M \ &apos; DCNL &gt; &gt; &gt; date ( \ &apos; years \ &apos; , limit = 10 ) DCNL \ &apos; 1,234 \ &apos; DCNL &gt; &gt; &gt; date ( &quot;
&apos;Serialize a list of dictionaries into a single string DCNL : param cls : The class to serialize . DCNL : type cls : class DCNL : return : A dictionary of dictionaries . DCNL : rtype : dict&apos;
&apos;Retrieve unique ID for a user . DCNL : param request : Request object DCNL : param UUID : The request object . DCNL : type session _ properties : ``str`` DCNL : return : ID of the user . DCNL : rtype : dict DCNL : raises : CommandExecutionError on user not found or None if not found . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ iam.get _ user _ unique _ id _ id&apos;
&apos; .. versionchanged : : Nitrogen DCNL The ``expr _ form`` argument has been renamed to ``tgt _ type`` , earlier DCNL releases must use ``expr _ form`` . DCNL Stop the named worker from the lbn load balancer DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; saltutil.disable &lt; name &gt; &apos;
&apos;Remove nan values that can be nan DCNL &gt; &gt; &gt; list _ inf _ nan ( \ &apos; b \ &apos; ) DCNL \ &apos; b \ &apos; DCNL &gt; &gt; &gt; swap _ inf _ nan ( 1 ) DCNL \ &apos; b \ &apos; DCNL &gt; &gt; &gt; swap _ inf _ nan ( 1 ) DCNL \ &apos; nan \ &apos; &apos;
&apos;Determine the number of jobs in the state . DCNL We don \ &apos; t need to do this here , so we don \ &apos; t need to do this DCNL here , so we don \ &apos; t need to do anything . &apos;
&apos;Create a Filer file from the provided path . DCNL : type request : django.http.request.HttpRequest &#124; None DCNL : param request : Request object DCNL : type path : django.http.request.HttpRequest &#124; None DCNL : param path : Pathname string ( see `filer _ folder _ from _ path` ) or a Filer Folder . DCNL : type path : str DCNL : param upload _ data : Upload data DCNL : type upload _ data : basestring DCNL : param sha1 : Upload data DCNL : type upload _ data : basestring DCNL : rtype : filer.models.imagemodels.Image&apos;
&apos;Returns the last modified timestamp for a given document . DCNL Args : DCNL document : a document . DCNL Returns : DCNL A datetime object . &apos;
&apos;Set the stubs for image data in the image . &apos;
&apos;Deletes any flag definitions from a flag . DCNL Args : DCNL flag _ values : A FlagValues object . &apos;
&apos;Get all volumes matching a given group . DCNL : param context : context to query under DCNL : param group _ id : id of the group DCNL : param filters : Filters for which filters are sorted . DCNL : returns : list of matching volumes&apos;
&apos;Returns a string representation of the given content . DCNL Args : DCNL content : The content of the content . DCNL encoding : The encoding of the encoding . DCNL pretty : Whether to decode the encoding . DCNL Returns : DCNL The string representation of the given content . &apos;
&apos;Add email to the ZooKeeper email . DCNL : param topic : The question to add the email to . DCNL : param email : Email email address . DCNL : return : The updated email address . DCNL : rtype : str&apos;
&apos;Test that hug \ &apos; s datatype is an array of shape ( n _ samples , n _ features ) . &apos;
&apos;Compare the config data into a dict . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; snapper.diff _ diff state _ id = peWcBiMOS9HrZG15peWcBiMOS9HrZG15&apos;
&apos;DEPRECATED , use tenant-network-delete instead . &apos;
&apos;Multiply the transpose of the expression . DCNL Parameters DCNL lin _ op : LinOp DCNL The root linear operator . DCNL value : str DCNL The value to be converted . DCNL Returns DCNL LinOp DCNL An operator representing the transpose . &apos;
&apos;Returns the URL of the user \ &apos; s annotation based on the given page url . &apos;
&apos;Run a function with the given arguments . DCNL Parameters DCNL context : function DCNL The function to run . DCNL fn : callable DCNL The function to run . DCNL * * kw : positional arguments DCNL Keyword arguments to pass to the function . DCNL * * kw : keyword arguments DCNL The keyword arguments to pass to the function . &apos;
&apos;Avoid extraneous whitespace in the following situations : DCNL - Immediately before the last line of the line DCNL - Immediately before the last line of the line DCNL - Immediately before the last line is displayed , or the last line DCNL of the line . The indentation level is printed in the last line of DCNL the line . The indentation level is printed to the last line of the DCNL line . The indentation level is printed to the last line of each line . DCNL If \ &apos; indent \ &apos; is \ &apos; indent \ &apos; , then \ &apos; indentation \ &apos; is the last line of \ &apos; indent \ &apos; . DCNL If \ &apos; indent \ &apos; is \ &apos; indent \ &apos; , then \ &apos; indentation \ &apos; is the last line of \ &apos; indent \ &apos; . DCNL If \ &apos; indent \ &apos; is \ &apos; indent \ &apos; , then \ &apos; indentation \ &apos; is the last line of \ &apos; indent \ &apos; . DCNL If \ &apos; indent \ &apos; is \ &apos; indent \ &apos; , then the last line is
&apos;In `prompt _ and _ delete _ repo ( ) ` , sets the user \ &apos; s cloned repo . &apos;
&apos;Translate integer coordinates to integer . DCNL Parameters DCNL x : ndarray DCNL Input coordinate . DCNL Returns DCNL int : int DCNL The number of elements . &apos;
&apos;Extract the raw data from a file . DCNL Parameters DCNL in _ file : file or file-like object DCNL The file to read from . DCNL settings : array _ like DCNL The data to read from . DCNL snr : float DCNL Name of the file to write . DCNL locks : float , optional DCNL The sampling rate of the file . DCNL out _ file : int , optional DCNL The sampling rate of the file . DCNL out _ file : int , optional DCNL The number of pixels to write to the file . DCNL out _ file : int , optional DCNL The number of pixels to write to the file . DCNL out _ file : bool , optional DCNL If True , the output will be preloaded into memory . DCNL out _ file : int , optional DCNL The output of the file . DCNL Returns DCNL out : ndarray , shape ( n _ samples , n _ features ) DCNL The transformed data . DCNL References DCNL .. &#91; 1 &#93; http : / / github.com / ryankiros / skip-thoughts / blob /
&apos;Print list of available zones DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; firewalld.get _ zones&apos;
&apos;test : test&apos;
&apos;Returns a tuple of ( width , height ) for the current terminal ( s ) . DCNL This function is used to determine the size of the terminal . DCNL The returned tuple is a tuple ( width , height ) . &apos;
&apos;Convert a User object to a database object . DCNL This is a helper method to determine the creation of a database DCNL to be used by the DB model . &apos;
&apos;Lists all volume associated with a given tenant _ id . &apos;
&apos;Given a list of resources , return a list of resources DCNL ( e.g. , \ &apos; / path / to / resources \ &apos; ) DCNL : param resources _ root : DCNL : type resources _ root : str DCNL : param rules : DCNL : type rules : str DCNL : param rules : DCNL : type rules : DCNL : return : DCNL : rtype : Tuple ( str , str ) &apos;
&apos;Set up an alert that adds an alert if necessary . DCNL : param alert _ id : ID of the alert DCNL : return : True if the alert is successful , otherwise False DCNL : rtype : bool&apos;
&apos;Add C { widget } - &gt; QAction&apos;
&apos;Lock a memcache if it is running , otherwise it is running . &apos;
&apos;A decorator that abstract methods that satisfy a given DCNL class . DCNL Usage : DCNL @ abstractmethod DCNL def foo ( self ) : DCNL @ abstractmethod DCNL def my _ abstract _ self ( self ) : DCNL pass&apos;
&apos;Returns all of the operators matching the given resource name . DCNL For example : DCNL &gt; &gt; &gt; validate _ filters ( &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; validate _ filters ( &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; validate _ filters ( &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; validate _ filters ( &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; validate _ filters ( &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; validate _ filters ( &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; validate _ filters ( &#91; \ &apos; foo \ &apos; , \ &apos; bar \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; validate _ filters ( &#91; \ &apos; a \ &apos; , \ &apos;
&apos;Test the behavior of --editable --uptodate --format = flag --format = legacy DCNL flag in the list command&apos;
&apos;Detects if the real path is contained in the directory . &apos;
&apos;Returns the URL of the API url from a URL . &apos;
&apos;A helper for getting a Twisted client . DCNL @ param version : Optional arguments to pass to the command . DCNL @ type version : C { str } DCNL @ param quiet : If True , don \ &apos; t want to return the default . DCNL : type session : bool DCNL : param session : Optional session ( optional ) DCNL @ type session : str DCNL @ param session : Optional session ( default : False ) DCNL @ type session : str DCNL @ param session : Optional session ( default : False ) DCNL @ type session : bool DCNL @ param kwargs : Keyword arguments to pass to the connection . DCNL @ type session : C { str } DCNL @ param kwargs : Keyword arguments to pass to the connection . DCNL @ type session : C { str } DCNL @ param kwargs : Keyword arguments to pass to the connection . DCNL @ type session : C { str } DCNL @ param kwargs : Keyword arguments to pass to the default . &apos;
&apos;OSX uses a Controller ( ) constructor . &apos;
&apos;Tests that an existing plugin has been added to the DCNL user \ &apos; s project _ mapping . DCNL This ensures that there are no actual plugins that are present in DCNL the client . &apos;
&apos;Return a cache backend for the given backend . DCNL If backend is not specified , the default backend is used . DCNL : param backend : The backend \ &apos; s backend . DCNL : param * * kwargs : Keyword arguments to pass to the configuration . DCNL : return : The requested backend , or None if no backend is found . &apos;
&apos;A high-level method wrapping subprocess.Popen. DCNL Examples DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; shell ( ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) : DCNL RuntimeError : when there is a shell script in our shell DCNL &gt; &gt; &gt; shell ( \ &apos; http : / / localhost / shell \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; / O \ &apos; ) DCNL &gt; &gt; &gt; shell ( \ &apos; http : / / localhost \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; / O \ &apos; ) DCNL &gt; &gt; &gt; shell ( \ &apos; http : / / localhost \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; / O \ &apos; ) DCNL &gt; &gt; &gt; shell ( \ &apos; http : / / localhost \ &apos; ) DCNL ( \ &apos; a \ &apos; , \ &apos; / O \ &apos; ) DCNL &gt; &gt; &gt; shell ( \ &apos; http : / / localhost \ &apos; ) DCNL ( \ &apos; a \ &apos; ,
&apos;Normalizes the given timestamp to a timestamp string . &apos;
&apos;Extract extra segments from a list of pages . DCNL Args : DCNL formatted _ text : List of tuples of ( client _ text , source _ text ) . &apos;
&apos;Write projections to a FIF file . DCNL Parameters DCNL fid : file DCNL The FIF file descriptor . DCNL projs : list DCNL The list of projection vectors . DCNL Returns DCNL projs : list DCNL The projection matrix . &apos;
&apos;Remove all existing tables for the given database . DCNL This is useful for scripts which need to be exhaustive . DCNL @ param db : The database database to clean up . DCNL @ type db : L { FilePath } DCNL @ param test _ prefix : The prefix for which to clean up . DCNL @ type tmp _ prefix : L { str } DCNL @ return : A list of tuples containing the entries . DCNL @ rtype : L { tuple } &apos;
&apos;Create a Pyramid URL using a shortcut . DCNL This is a shortcut to handle Django \ &apos; s urllib object . DCNL : param generator : A Django Document object DCNL : param metadata : A Django Document object DCNL : return : A HTTPResponse object . &apos;
&apos;Returns the path to the socket file to search for PostgreSQL socket . DCNL Return None if the executable file is not found . &apos;
&apos;Perform any extra directories on each table on each table . DCNL This should only be called once on each table . &apos;
&apos;Sort a graph from a set of dependencies . DCNL Parameters DCNL graph : dict DCNL A NetworkX graph DCNL key : string DCNL The key to use for the dependencies . DCNL Returns DCNL sorted : dict DCNL A dictionary containing the keys of the set `S` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.utilities.iterables import dependencies DCNL &gt; &gt; &gt; dependencies = { \ &apos; a \ &apos; : 1 , \ &apos; a \ &apos; : 1 , \ &apos; a \ &apos; : 1 , \ &apos; a \ &apos; : 1 } DCNL &gt; &gt; &gt; dependencies = { \ &apos; a \ &apos; : 1 , \ &apos; a \ &apos; : 1 , \ &apos; a \ &apos; : 1 } DCNL &gt; &gt; &gt; dependencies = { \ &apos; a \ &apos; : 1 , \ &apos; a \ &apos; : 1 , \ &apos; a \ &apos; : 1 } DCNL &gt; &gt; &gt; dependencies = { \ &apos; a \ &apos; : 1 , \ &apos; a \ &apos; : 1 } DCNL &gt; &gt; &gt; dependencies = { \ &apos; a \ &apos; : 1 , \ &apos;
&apos;Given a youtube _ id , return a list of youtube urls . DCNL Args : DCNL youtube _ id : str . The youtube id . DCNL settings : dict ( dict ) : A list of youtube URLs . DCNL youtube _ name ( str ) : The name of the youtube URL . DCNL youtube _ name ( str ) : The name of the youtube video . DCNL Returns : DCNL A list of youtube urls . &apos;
&apos;Get a list of projects from a page , returning a list of projects DCNL with the specified parameters . DCNL Example : : DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static in page % } DCNL { % for static
&apos;setup _ request _ data ( ) is used to create a bound method . &apos;
&apos;Returns True if the given object is an ``adatetime`` with ``year`` , DCNL ``month`` , and ``day`` are None . &apos;
&apos;Get the Kendall \ &apos; s multiobjective function . DCNL Parameters DCNL r : array _ like DCNL Input variable . DCNL ind : array _ like DCNL Number of bins . DCNL yi : array _ like DCNL Number of bins . DCNL Returns DCNL y : array , shape ( n _ samples , n _ times ) DCNL The p-value for the p-value . DCNL References DCNL .. &#91; 1 &#93; http : / / docs.scipy.org / doc / scipy-0.14.0 / reference / generated / scipy.ndimage.interpolation.affine _ transform.html &gt; ` _ DCNL Examples DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; r = np.arange ( 10 ) DCNL &gt; &gt; &gt; t = np.arange ( 10 ) DCNL &gt; &gt; &gt; t = np.arange ( 10 ) DCNL &gt; &gt; &gt; t = np.arange ( 10 ) DCNL &gt; &gt; &gt; t = np.arange ( 10 ) DCNL &gt; &gt; &gt; t = np.arange ( 10 ) DCNL &gt; &gt; &gt; print ( x , y ) DCNL array ( &#91; &#91; 1 , 2 , 3 &#93; &#93; ) &apos;
&apos;Decorator to determine if a view is a view . DCNL Usage : : DCNL @ view ( \ &apos; view \ &apos; , context = \ &apos; Hello \ &apos; ) DCNL def my _ view ( request ) : DCNL return json : DCNL return Response ( \ &apos; view \ &apos; , context = \ &apos; view \ &apos; ) DCNL def my _ view ( request ) : DCNL return json : DCNL return Response ( \ &apos; view \ &apos; , context = \ &apos; view \ &apos; ) DCNL def my _ view ( request ) : DCNL return json : DCNL return Response ( \ &apos; view \ &apos; , context = \ &apos; view \ &apos; ) &apos;
&apos;Prime ( n , n , n ) - &gt; list of numbers DCNL The prime numbers are prime to the number of prime numbers . DCNL Examples DCNL &gt; &gt; &gt; from sympy.ntheory.factor _ import prime DCNL &gt; &gt; &gt; primes ( 3 , 3 ) DCNL &#91; 0 , 1 , 2 , 3 , 4 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
&apos;Print the given sentence of a given sentence or a list of DCNL synonyms from the given sentence of the given sentence , DCNL which can be either a string or a string or a list of DCNL the names of the given sentence . DCNL Arguments : DCNL sentence ( str ) : The sentence to display to the given sentence , DCNL or a list of strings representing the following DCNL of the following : DCNL - \ &apos; a \ &apos; or \ &apos; a \ &apos; or \ &apos; a \ &apos; or \ &apos; a \ &apos; DCNL - \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; a \ &apos; , DCNL \ &apos; a \ &apos; , \ &apos; a \ &apos; , or \ &apos; a \ &apos; , or \ &apos; a \ &apos; , or \ &apos; a \ &apos; , or \ &apos; a \ &apos; DCNL -
&apos;Create logit locator with 2 AND 2 and 3 . &apos;
&apos;Returns a context manager that temporarily disable a new set of updates . &apos;
&apos;Use this function to run the database and register it in the database . DCNL This is useful for debugging purposes , so we need to connect to the DCNL database . &apos;
&apos;Returns the tensor along the given axis . DCNL # Arguments DCNL xs : sequence of values . DCNL axis : axis along which to compute the tensor . DCNL Returns : DCNL ~ chainer.Variable : Output variable . &apos;
&apos;Internal function to execute the configuration command . &apos;
&apos;shutil.which ( ) goodness in python2.7 DCNL Taken from http : / / stackoverflow.com / questions / 377017 / issues / 2186639 DCNL http : / / stackoverflow.com / questions / 377017 / issues / 2186639 DCNL http : / / mail.python.org / pipermail / python-dev / 2012-June / 120787.html DCNL : param file : File to path to . DCNL : type file : str or None DCNL : param mode : the path to the file in which to search the file . DCNL : type mode : str DCNL : param path : the path to the file to be searched . DCNL : type path : str DCNL : param path : the path to the file path . DCNL : type path : str DCNL : param path : The path to the file path . DCNL : type path : str DCNL : param path : The path to the file path . DCNL : type path : str DCNL : param path : The path to the file path . DCNL : type path : str DCNL : param path
&apos;Return a list of all minions that are running on the master DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; saltutil.runner jobs.list _ jobs&apos;
&apos;Tokenization / string cleaning for the given string . DCNL For example : DCNL &gt; &gt; &gt; _ clean _ str ( &quot; john \ &apos; s portrait in 2004.jpg &quot; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; _ clean _ str ( &quot; john \ &apos; s portrait in 2004.jpg &quot; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; _ clean _ str ( \ &apos; \ u203d \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; _ clean _ str ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; _ clean _ str ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; _ clean _ str ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; _ clean _ str ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; _ clean _ str ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; _ clean _ str (
&apos;Unevaluate a variable in a dict&apos;
&apos;Check that the given app _ dir is a list of directories . DCNL : param app _ dir : the directory to check for DCNL : returns : a list of all the files in the directory DCNL : rtype : list ( str , str ) &apos;
&apos;Validates that the required fields of a field has a given field . DCNL If * attrs * is a validator , it will be used as a validator . DCNL : param * * kwargs : keyword arguments to be checked DCNL : return : a validator that can be used as a validator . DCNL : param * * kwargs : keyword arguments to be checked DCNL : return : a validator that can be passed to a validator . &apos;
&apos;Ensure that we can test format _ formats ( ) in the database . DCNL In this case , we don \ &apos; t need to create the correct filetype . &apos;
&apos;Check virt drivers that are not found in the virt DCNL drivers \ &apos; virt \ &apos; . This should only be used in Nova \ &apos; s DCNL N312&apos;
&apos;Uniformly trims leading and trailing whitespace characters . DCNL Adapted from http : / / www.python.org / dev / peps / pep-0257 / # handling-docstring-indentation&apos;
&apos;Computer multivariate sample labels DCNL Parameters DCNL X : ndarray , shape ( n _ samples , n _ features ) DCNL Array of shape ( n _ samples , n _ features ) . DCNL x _ squared _ norms : ndarray , shape ( n _ samples , n _ features ) DCNL Input data . DCNL centers : ndarray , shape ( n _ samples , n _ features ) DCNL The centers of the samples . &apos;
&apos;Get all computeNodes . &apos;
&apos;Remove any trailing whitespace characters from a text file . DCNL This function is meant to be used by the last line of the text . DCNL Adapted from http : / / github.com / pypa / pip / issues / 173308 . DCNL Adapted from http : / / github.com / pypa / wiki / issues / 175&apos;
&apos;Read string values from a list . &apos;
&apos;Upload the grade report for a given course . DCNL Arguments : DCNL course _ instance _ args ( list ) : List of course information . DCNL course _ id _ id ( str ) : The id of the course . DCNL course _ id ( str ) : The ID of the course . DCNL action _ name ( str ) : The name of the course . DCNL action _ name ( str ) : The name of the task to send . &apos;
&apos;Convert an IP address to a human-friendly representation . &apos;
&apos;Validates that the keys are allowed , and the corresponding keys are DCNL allowed . DCNL : param dict _ to _ check : the dict to validate DCNL : type dict _ to _ check : dict DCNL : param required _ keys : the allowed keys to check DCNL : type required _ keys : dict DCNL : param optional _ keys : the keys of the keys to pass to the DCNL : raises : ( PlotlyError ) If the keys are invalid . DCNL : rtype : bool DCNL : raises : ( PlotlyError ) If the keys are not allowed . &apos;
&apos;Converts an array of arrays to an array of values . DCNL Parameters DCNL - vals : WRITEME DCNL Returns DCNL WRITEME&apos;
&apos;Create an image volume cache for the specified host and image _ id . &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 362&apos;
&apos;Test that the input vector is a 1D Numpy array . DCNL Parameters DCNL x : numpy array DCNL The input vector . DCNL n _ size : int , optional DCNL The number of dimensions to use . Defaults to 0 . DCNL Returns DCNL out _ input : array , shape ( n _ samples , n _ features ) DCNL The input vector . &apos;
&apos;Send connect to database . &apos;
&apos;Awards badges based on the current user \ &apos; s home directory DCNL and the user \ &apos; s home directory will be removed after the DCNL program exits . &apos;
&apos;Returns a copy of the function by the list . &apos;
&apos;Only load if the postgres module is present&apos;
&apos;Multiply two linear operators . DCNL Parameters DCNL lh _ op : LinOp DCNL The left-hand operator in the product . DCNL rh _ op : LinOp DCNL The right-hand operator in the product . DCNL Returns DCNL LinOp DCNL A linear operator representing the product . &apos;
&apos;Return a list of headers with the given HTTP headers . DCNL Generates a list of headers from the given request . DCNL If no request is given , a list of headers will be returned . DCNL The result is a list of lists of the form \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , DCNL \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , DCNL \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; , \ &apos; GET \ &apos; ,
&apos;Set up the local machine . DCNL This is useful for : DCNL https : / / msdn.microsoft.com / en-us / library / desktop / ms687419 / DCNL Args : DCNL a _ device ( str ) : The local device to load . DCNL a : bool , optional DCNL If True , the first device is stored in the current device . DCNL Returns : DCNL None&apos;
&apos;Create password for a given username . DCNL : param username : The username of the user . DCNL : type username : str DCNL : param password : The password to authenticate . DCNL : type password : str DCNL : return : The password for the given username . DCNL : rtype : dict&apos;
&apos;Checks file mapping file to output _ fp . DCNL mapping _ fp : file containing the mapping file to write DCNL output _ dir : output directory to write to DCNL target _ dir : file name of the output file DCNL comment _ replace : if True , suppresses warnings about barcodes . DCNL disable _ primer _ check : If True , suppresses warnings about barcodes . DCNL disable _ primer _ check : If True , suppresses warnings about barcodes . DCNL disable _ primer _ check : If True , suppresses warnings about barcodes . DCNL disable _ primer _ check : If True , suppresses warnings about barcodes . DCNL disable _ primer _ check : If True , suppresses warnings about barcodes . DCNL disable _ primer _ check : If True , suppresses warnings about barcodes . DCNL disable _ primer _ check : If True , suppresses warnings about barcodes . DCNL disable _ primer _ check : If True , suppresses warnings about barcodes . DCNL disable _ primer _ check : If True , suppresses warnings about barcodes . DCNL disable _ primer _ check : If True ,
&apos;Pushes a new push to the local device . DCNL If remote _ path is None , the device is returned . DCNL : param local _ path : Path to the local device . DCNL : type local _ path : str DCNL : param remote _ path : Path to the remote device . DCNL : type remote _ path : str DCNL : param remote _ path : Path to the remote device . DCNL : type remote _ path : str DCNL : param remote _ path : Path to the remote device . DCNL : type remote _ path : str&apos;
&apos; : type data : dict DCNL : param image _ name : name of the image DCNL : type image _ name : string DCNL : return : the id in the image \ &apos; s ID . DCNL Raises : DCNL ValueError : if image _ name does not exist in the image . &apos;
&apos;Return the default library extension . &apos;
&apos;Return a sorted version of the \ &apos; sort _ names \ &apos; dictionary . &apos;
&apos;Encours an xml tag to a list of XML attributes , which may be a single DCNL string or an empty string . If no namespace is given , an empty string will DCNL be thrown . If it is an empty string , an empty string will be thrown . DCNL If no namespace is given , an empty string will be returned . &apos;
&apos;Safely join the paths with the sys.path if it exists . DCNL : param directory : The directory to join . DCNL : param paths : A list of paths to be copied . DCNL : type paths : Iterable &#91; str &#93; DCNL : param paths : The paths to which to join the paths . DCNL : rtype : : class : `twisted.python.filepath.FilePath`&apos;
&apos;Parse a urlencoded query string . DCNL Args : DCNL query ( str ) : The query string to query . DCNL Returns : DCNL A urlencoded string containing the query string . &apos;
&apos;Temporarily disconnect code messages . DCNL Usage : DCNL { \ &apos; message _ id \ &apos; : { \ &apos; message \ &apos; : \ &apos; status \ &apos; } , DCNL { \ &apos; message \ &apos; : \ &apos; status \ &apos; } , DCNL { \ &apos; message \ &apos; : \ &apos; status \ &apos; } , DCNL { \ &apos; message \ &apos; : \ &apos; status \ &apos; } , DCNL { \ &apos; message \ &apos; : \ &apos; status \ &apos; } , DCNL { \ &apos; message \ &apos; : \ &apos; status \ &apos; } , DCNL { \ &apos; message \ &apos; : \ &apos; status \ &apos; } , DCNL { \ &apos; message \ &apos; : \ &apos; status \ &apos; } , DCNL { \ &apos; message \ &apos; : \ &apos; status \ &apos; } , DCNL { \ &apos; message \ &apos; : \ &apos; status \ &apos; } , DCNL { \ &apos; message \ &apos; : \ &apos; status \ &apos; } , DCNL { \ &apos; message \ &apos; : \ &apos; status \ &apos; } , DCNL { \
&apos;Delete an existing device from the specified name . DCNL Args : DCNL name ( str ) : Name of the device to delete . DCNL handler _ on ( bool ) : If true , delete the message from the request . DCNL Returns : DCNL True if the device is deleted , False otherwise . &apos;
&apos;Write a 32-bit integer to a fif file . DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import
&apos;Create a JSON object for the JSON document . DCNL : param json _ data : the JSON representation of the JSON . DCNL : return : the JSON object . &apos;
&apos;Reshape `t` by right-padding the shape * t * along the axis . DCNL Parameters DCNL t : array _ like DCNL Input tensor . DCNL axis : int DCNL The axis along which to create the axis . DCNL Returns DCNL shape : array _ like DCNL The shape of the tensor . &apos;
&apos;Replacement for pickle.dump ( ) and converts it into something DCNL to Python 3 . &apos;
&apos;Remove a cluster from the Postgres server . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; postgres.cluster _ remove \ &apos; 9.3 \ &apos; DCNL salt \ &apos; * \ &apos; postgres.cluster _ remove \ &apos; 9.3 \ &apos; &apos;
&apos;Chooses an update message and return the new pillar data . DCNL This is a wrapper around : py : func : `get _ returner _ OPTIONS` . DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; state.show _ top&apos;
&apos;Compute the specified quantile value for a given value . DCNL Parameters DCNL arg : Series or DateOffset object DCNL quantile : scalar or DateOffset object , default None DCNL min _ periods : int , default None DCNL Minimum number of observations in data DCNL freq : float or DateOffset object , optional ( default = None ) DCNL Frequency to conform the data to . DCNL freq : float or DateOffset object , optional ( default = None ) DCNL Frequency to conform the data to . DCNL freq : string or DateOffset object , optional ( default = None ) DCNL Frequency to conform the data to . DCNL freq : float or DateOffset object , optional ( default = None ) DCNL Frequency to conform the data to . DCNL Returns DCNL DataFrame&apos;
&apos;Check if expr is a python variable . DCNL : param expr : DCNL : type expr : DCNL : return : DCNL : rtype : &apos;
&apos;For : return : True if successful , otherwise False DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; docker.local _ path &lt; path &gt; &apos;
&apos;Write a message to the current thread . DCNL This function makes sure that the current process is running DCNL in the current thread . This function is meant to be called DCNL in the context of the current thread . It is meant to be used DCNL in the context of the application . DCNL Args : DCNL server ( str ) : The name of the current process . DCNL action ( str ) : The name of the application to use . DCNL help ( str ) : The name of the script to use . DCNL help ( dict ) : The command line to use . DCNL quiet ( bool ) : If True , the script will be skipped . DCNL Returns : DCNL A dictionary containing the settings file . &apos;
&apos;Multiply a and b into a decimal places . &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 4&apos;
&apos;Creates a generic class object that can be used to create an attribute DCNL with the given name . DCNL If the attribute is not a class , it is assumed to be a DCNL class object . DCNL If the attribute is not a class , it will be returned . DCNL If the attribute is not a class , it is assumed to be a DCNL class object . &apos;
&apos;Return a tuple of ( name , name , value ) pairs for the given stream DCNL and the name of the stream , or None if no metadata is found . DCNL If extract _ images is True , then the metadata of the file is returned . DCNL Otherwise , return an empty string . &apos;
&apos;Install a hook function from a readline stack . DCNL @ param hook : The hook to install . DCNL @ type hook : L { twisted.python.versions.Version } DCNL @ param hook : The hook to install . &apos;
&apos;Run a command on the given command , returning the path to the DCNL command . DCNL : param cmd : The command to run DCNL : param tmpdir : the name of the command to run DCNL : return : True if the command is running , False if not DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; cmd.run _ shell _ command \ &apos; / tmp / $ \ &apos; &apos;
&apos;Run the composer file at the specified location . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; composer.selfupdate&apos;
&apos;This is a helper for the following cases : DCNL - &#91; \ &apos; - \ &apos; , \ &apos; - \ &apos; , \ &apos; - \ &apos; , \ &apos; - \ &apos; , \ &apos; - \ &apos; , \ &apos; - \ &apos; &#93; DCNL - `style &#91; \ &apos; - \ &apos; &#93; - &gt; &#91; \ &apos; - \ &apos; , \ &apos; - \ &apos; &#93; , &#91; \ &apos; a \ &apos; , \ &apos; index.html \ &apos; &#93; , &#91; \ &apos; a \ &apos; &#93; , DCNL &#91; \ &apos; a \ &apos; , \ &apos; index.html \ &apos; &#93; , &#91; \ &apos; a \ &apos; &#93; , &#91; \ &apos; a \ &apos; &#93; , &#91; \ &apos; a \ &apos; &#93; , &#91; \ &apos; a \ &apos; &#93; , &#91; \ &apos; a \ &apos; &#93; , DCNL &#91; \ &apos; a \ &apos; , \ &apos; index.html \ &apos; &#93; , &#91; \ &apos; a \ &apos; &#93; , &#91; \ &apos; a \ &apos; &#93; , &#91; \ &apos; a \ &apos; &#93; , DCNL &#91; \ &apos; a \ &apos; , \
&apos;Parse a json string into a Python json string . &apos;
&apos;If the module is configured in the future , use it as the DCNL fallback . &apos;
&apos;Generate a generator of spatial labels for each sid . DCNL Parameters DCNL subject : str DCNL The subject string . DCNL seeds : int , int , int , int , int , int , or None DCNL The number of channels in the source file . DCNL offset : int DCNL The number of channels to be used . DCNL vertices : list of int DCNL The number of channels in the source file . DCNL vertices : list of int DCNL The number of channels in the source file . DCNL names : list of int , optional DCNL The name of the source file . DCNL names : list of int , optional DCNL The name of the source graph . Defaults to None . DCNL names : list of int , optional DCNL The name of the source graph . Defaults to None . DCNL names : list of int , optional DCNL The names of the data list . Defaults to None . DCNL names : list of int , optional DCNL The name of the source graph . Defaults to None . DCNL names : list of int , optional DCNL The number
&apos;Take a list of lists of sequences and merge them into the DCNL list of sequences . DCNL Parameters DCNL labels : list of lists DCNL List of lists of integers . DCNL dist : array , shape = ( n _ samples , n _ pairs ) DCNL The list of parameters to be transformed . DCNL max_ types : int , optional DCNL The number of permutations to be used . DCNL num _ permutations : int , optional DCNL The number of permutations to be checked . DCNL num _ permutations : int , optional DCNL The number of permutations to be used . DCNL Returns DCNL list of lists DCNL A dictionary containing the resulting values . &apos;
&apos;Returns the number of instances for the specified server . DCNL Args : DCNL server : The server to use for the current server . DCNL version : The version of the server for which to get the number of instances . DCNL Returns : DCNL The number of instances for the server . &apos;
&apos;Return the raw data for the specified key DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pillar.raw DCNL salt \ &apos; * \ &apos; pillar.raw key = &lt; key &gt; &apos;
&apos;Returns a bytestring version of \ &apos; s \ &apos; , encoded in \ &apos; encoding \ &apos; . DCNL If strings _ only is True , don \ &apos; t convert ( some ) non-string-like objects . &apos;
&apos;Forces a value to be rendered as a localized value , DCNL regardless of the value of ``settings.USE _ L10N`` . &apos;
&apos;Test that LNV&apos;
&apos;Test GL backend for full desktop functionality . &apos;
&apos;Takes a list of results and returns a dict . DCNL Arguments : DCNL results ( dict ) : A list of results . DCNL format ( str ) : The format of the query . DCNL collection ( dict ) : A collection of query fields . DCNL Returns : DCNL A dictionary with the following fields : DCNL \ &apos; data \ &apos; : &#91; \ &apos; date \ &apos; , \ &apos; date \ &apos; , \ &apos; date \ &apos; &#93; &apos;
&apos;``delaxes ( ax ) `` : Return the current axes&apos;
&apos;Get all volumes belonging to a group . &apos;
&apos;Confine this module to Mac OS with MacPorts . &apos;
&apos;Convert an ``asyncio.Future`` to a `tornado.concurrent.Future` . &apos;
&apos;Return True if string ends with quotes . &apos;
&apos;Create a : class : ` ~ elasticsearch.Elasticsearch.bulk` api . DCNL : param selected _ submissions : DCNL : param zip _ directory : DCNL : param zip _ directory : DCNL : param zip _ directory : DCNL : return : &apos;
&apos;Compute the Hessian filter for a given image . DCNL Parameters DCNL image : array _ like DCNL Input image . DCNL scale _ range : float , optional DCNL Scale factor of the filter . DCNL scale _ step : float , optional DCNL Frangi correction factor that will calculate the results . DCNL beta2 : float , optional DCNL Frangi correction that adjusts the results . DCNL beta2 : float , optional DCNL Frangi correction that adjusts the results . DCNL beta2 : float , optional DCNL Frangi correction that adjusts the results . DCNL beta2 : float , optional DCNL Frangi correction factor that adjusts the results . DCNL References DCNL .. &#91; 1 &#93; http : / / en.wikipedia.org / wiki / Cross _ algorithm _ filter DCNL References DCNL .. &#91; 1 &#93; http : / / en.wikipedia.org / wiki / Cross _ algorithm _ filter DCNL References DCNL .. &#91; 1 &#93; http : / / en.wikipedia.org / wiki / Algorithms _ for _ algorithm&apos;
&apos;Set the DNS interface to DHCP on the network interface DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; win _ dhcp _ network interface = \ &apos; Local Area Connection \ &apos; &apos;
&apos;Compute Dijkstra \ &apos; s algorithm in a function using Dijkstra \ &apos; s algorithm . DCNL Parameters DCNL G : NetworkX graph DCNL source : NetworkX graph DCNL source : node , optional DCNL Depth to use the node . DCNL weight : function , optional ( default = \ &apos; weight \ &apos; ) DCNL Edge attribute key to use in the edge weight . DCNL Returns DCNL distance : dictionary DCNL The shortest distance between nodes in the graph . &apos;
&apos;Registers a given C { unicode } encoded in the given C { unicode } . DCNL @ param jidstring : C { unicode } object . DCNL @ type jidstring : L { unicode } DCNL @ return : A L { unicode } encoded in the given C { unicode } . DCNL @ rtype : C { unicode } &apos;
&apos;Retrieve all roles . DCNL : rtype : ``list`` of : class : `RoleDB`&apos;
&apos;Returns the hash hash for the current user , in memcache . &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 243&apos;
&apos;Test either if an error is raised while the test is given&apos;
&apos;Check to see if a set of fields is a JSON blob . DCNL Parameters DCNL columns : dict , optional DCNL A list of columns to generate . DCNL Returns DCNL dict : dict DCNL A dictionary containing the fields of the fields . &apos;
&apos;Outputs the contents of a given file into the current page . DCNL Like the current page : : DCNL { % ssi / home / html / ljworld.com / includes / right _ generic.html &quot; % } &apos;
&apos;Convert a path to its canonical , case-normalized , absolute version . &apos;
&apos;Find all files that are running in the system DCNL : param dir : Path to the filesystem DCNL : type dir : file DCNL : return : the tree DCNL : rtype : string&apos;
&apos;This function instantiates and returns a new block cipher . DCNL It will absorb named parameters in the process . &apos;
&apos;SetSubtensor ( x , x , x , x , x ) - &gt; x DCNL Similar to x , y , x , y , x , y , ... , x , y , ... , x , y , ... , ... , x , y , ... ) &apos;
&apos;Retrieve the checks associated with the given hostname and the location of the DCNL connection . DCNL If the hostname can be found , an empty string will be returned . &apos;
&apos;Imports an object from a string . DCNL import _ string ( \ &apos; en _ baz \ &apos; ) : DCNL import _ string ( \ &apos; hello \ &apos; ) DCNL import _ string ( \ &apos; hello \ &apos; ) DCNL import _ string ( \ &apos; hello \ &apos; ) DCNL import _ string ( \ &apos; hello \ &apos; ) DCNL import _ string ( \ &apos; hello \ &apos; ) DCNL import _ string ( \ &apos; hello \ &apos; ) DCNL import _ string ( \ &apos; hello \ &apos; ) DCNL import _ string ( \ &apos; foo \ &apos; ) DCNL &gt; &gt; &gt; import _ string ( \ &apos; hello \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; import _ string ( \ &apos; hello \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; import _ string ( \ &apos; hello \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; import _ string ( \ &apos; hello \ &apos; ) DCNL \ &apos; hello \ &apos; DCNL &gt; &gt; &gt; import _ string ( \ &apos; foo
&apos;RESTful CRUD controller DCNL - currently active : DCNL - api _ user = 623 DCNL - api _ kg = None DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; docker.get &lt; user _ info &gt; &apos;
&apos;Comapare two english phrases ignoring starting prepositions . &apos;
&apos;Returns the length of the value - useful for lists . &apos;
&apos;Return a list of active event loop . DCNL : return : True if event loop is running , else False DCNL : rtype : bool&apos;
&apos;Determine the current visibility name of a given name . &apos;
&apos;Extract parts of hosts file from a hosts file . DCNL @ type string : L { str } DCNL @ param string : The hosts file . DCNL @ type string : L { bytes } DCNL @ return : L { list } of L { bytes } . DCNL @ rtype : L { bytes } &apos;
&apos;Tests that we can get a random seed with the same shape of the DCNL uniform distribution with the same length . &apos;
&apos;Translate a sequence of strings to a list of strings . DCNL This is similar to the Bio.Blast.NCBIXML.parse ( ) function . &apos;
&apos;Decorator factory to track time change time for track . &apos;
&apos;KBEngine method . DCNL &gt; &gt; &gt; tamper ( \ &apos; 1 AND 2 = 3 \ &apos; ) DCNL 1 DCNL &gt; &gt; &gt; tamper ( \ &apos; 1 AND 2 = 3 \ &apos; ) DCNL 1 DCNL &gt; &gt; &gt; tamper ( \ &apos; 1 AND 2 = 3 \ &apos; ) DCNL 1 DCNL &gt; &gt; &gt; tamper ( \ &apos; 1 AND 2 = 3 \ &apos; ) DCNL False&apos;
&apos;Get preferred version of a group . DCNL : param group : group name DCNL : type group : string DCNL : param kwargs : keyword arguments to pass to the parser DCNL : type kwargs : list of strings DCNL : param options : keyword arguments that are passed to the parser DCNL : rtype : dict &#91; str , str &#93; &apos;
&apos;test the version of an implementation DCNL Parameters DCNL op : object DCNL The object to use DCNL name : str DCNL The name of the object DCNL str _ rep : str DCNL The name of the object to be converted DCNL coerce _ rep : bool , optional DCNL If True , return the original object DCNL Returns DCNL obj : ndarray DCNL The estimate of the object . DCNL Raises DCNL ValueError DCNL If the object is not a Python object , or a ValueError DCNL raised if the operation is not supported . DCNL Notes DCNL This function can be used as an alternative to this function DCNL with the same signature as this function : DCNL .. code-block : : python DCNL import numpy as np DCNL &gt; &gt; &gt; from zipline.utils.preprocess import preprocess DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; x = np.array ( &#91; 1 , 2 , 3 , 4 , 5 &#93; ) DCNL &gt; &gt; &gt; x = np.array ( &#91; 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; x = np.array ( &#91; 1 , 2 , 3
&apos;Render a view to the C { request } . &apos;
&apos;Imports the module from the given folder or directory . DCNL This is useful if you want to load the module or directory in the DCNL registry . DCNL : param app : the application to load DCNL : type app : module DCNL : return : the loaded module&apos;
&apos;Return a string representation of a string . DCNL Examples DCNL &gt; &gt; &gt; from sympy.crypto.crypto import encipher _ bifid5 , decipher _ bifid5 DCNL &gt; &gt; &gt; from sympy.crypto.crypto import encipher _ bifid5 , decipher _ bifid5 DCNL &gt; &gt; &gt; from sympy.crypto.crypto import encipher _ bifid5 , decipher _ bifid5 DCNL &gt; &gt; &gt; encipher _ bifid5 ( &quot; gold bug &quot; ) DCNL \ &apos; MEETMEONMONDAY \ &apos; &apos;
&apos;Compute the view matrix to render the view model . DCNL This is the concatenation of the view model and perspective transforms . &apos;
&apos;Prints a message to the debug level . DCNL Example : : DCNL print debug ( \ &apos; hello \ &apos; ) DCNL print ( \ &apos; hello \ &apos; ) &apos;
&apos;Test that project _ project does not exist . &apos;
&apos;Get all modules associated with the given path . DCNL If no module is found , it will return None . DCNL If no module is found , None is returned . DCNL : param path : DCNL Module name . DCNL : type path : dict DCNL : param modules : modules that should be searched for this module . DCNL : type name : str DCNL : param name : the name of the module . DCNL : type name : str DCNL : return : List of all modules found in the module . DCNL : rtype : list &#91; str &#93; &apos;
&apos;Determine the next available disk info for the bus . DCNL Considering the disks need to be used , determine the next disk DCNL info for the next disk bus . DCNL Returns the total disk info for the next disk . &apos;
&apos;Convert arrays to arrays . DCNL Args : DCNL arys ( tuple of arrays ) : Arrays to be converted . DCNL Returns : DCNL cupy.ndarray : The converted array . DCNL .. seealso : : : func : `numpy.atleast _ 1d`&apos;
&apos;Return last day of the month for the specified year . DCNL Parameters DCNL year : int DCNL The year of the month . DCNL Returns DCNL day : float DCNL The last day of the month . &apos;
&apos;A helper method to set the appropriate indentation level of a DCNL block . DCNL : param method : the class instance to be set . DCNL : type doc : str DCNL : return : The wrapped object . DCNL : rtype : bool DCNL : raises : : class : `ValueError` if the field is not a callable . &apos;
&apos;Return volumes usage that have been updated after a specified time . &apos;
&apos;Returns a list of all roles from a request . &apos;
&apos;Run the default widget discovery and return a : class : `WidgetRegistry` DCNL instance . &apos;
&apos;Create a new function object for a function . &apos;
&apos;replace ( s , old &#91; , maxsplit &#93; ) - &gt; string DCNL Return a copy of the string s with all occurrences of substring DCNL old replaced by new . If maxsplit is specified , then the first element DCNL of the string will be replaced . &apos;
&apos;Begins watching source files for containers . DCNL : param reactor : The reactor . DCNL : param args : A list of arguments to be used . DCNL : param FilePath base _ path : The top-level of the flocker repository . DCNL : param FilePath top _ level : The top-level of the flocker omnibus package . &apos;
&apos;Compute Hilbert transform of a axis along axis 0 . DCNL Parameters DCNL x : array _ like DCNL Input array . DCNL N : int , optional DCNL Axis along which to compute the transform . Default is ``2 * pi`` . DCNL axis : int , optional DCNL Axis along which to compute the transform . Default is 0 . DCNL Returns DCNL out : ndarray , shape ( n _ channels , n _ channels ) DCNL The hilbert transform in the input array . DCNL Notes DCNL If ``x1`` and ``x2`` have different shapes , then they need to broadcast . DCNL If axis = 0 , then the Nyquist mode of x is zero . &apos;
&apos;Convert a Python object to a Python object . DCNL @ param val : The value to convert . DCNL @ type val : L { bytes } DCNL @ param sek : The seek position of the file . DCNL @ type sek : L { int } DCNL @ param sek : The seek position of the file . DCNL @ type sek : L { int } DCNL @ param sek : The seek position of the file . DCNL @ type sek : L { int } DCNL @ param sek : The seek position of the file . DCNL @ type sek : L { int } DCNL @ param sek : The seek position of the file . DCNL @ type sek : L { int } DCNL @ return : the contents of the file . DCNL @ rtype : L { cStringIO.OutputType } &apos;
&apos;running the &quot; harvest &quot; is used by apps that don \ &apos; t exist in the DCNL background . DCNL If the setting is not specified , then it will be run in the DCNL background . &apos;
&apos;Convert a string to lowercase . &apos;
&apos;Convert a string representation to a human-friendly representation . DCNL This is useful for converting to long _ readable _ bytes . DCNL Args : DCNL value : A human-friendly string . DCNL Returns : DCNL A human-friendly representation of a string . &apos;
&apos;Test that multiple task runs when no task runs once . &apos;
&apos;Passed a list of Results , returns a list of tuples for each submission . DCNL This is designed to be used in production environments . &apos;
&apos;Ensure that the output of a client has a failed build _ step , but DCNL it doesn \ &apos; t exist . &apos;
&apos;Check if an object is a single slice . DCNL &gt; &gt; &gt; is _ full _ slice ( ( 1 , 2 , 3 ) ) DCNL False DCNL &gt; &gt; &gt; is _ full _ slice ( &#91; 1 , 2 , 3 &#93; ) DCNL True DCNL &gt; &gt; &gt; is _ full _ slice ( obj , 1 ) DCNL False&apos;
&apos;The first element in the sequence DCNL &gt; &gt; &gt; first ( 1 ) DCNL \ &apos; 1 \ &apos; &apos;
&apos;Create a new profile for the given file _ prefix . This is useful for DCNL debugging . &apos;
&apos;Guard against * value * . &apos;
&apos;Computes the equation of the given function . DCNL Examples DCNL &gt; &gt; &gt; from sympy import ode DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy import ode DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; ode _ Eq ( x * * 2 + 1 , x * * 2 + 1 , x * * 2 + 1 ) DCNL ( x + 1 , x ) &apos;
&apos;Update the old primary key for a given topology . DCNL Pass in a dict of ServerDescriptions , current replica set name , and the DCNL ServerID . DCNL Args : DCNL replica _ set _ name : The name of the primary . DCNL server _ set _ name : the name of the new primary key . DCNL max _ set _ version : The maximum number of explorations to use . DCNL max _ set _ id : The maximum number of explorations to use . DCNL max _ set _ id : The maximum number of explorations to use . DCNL max _ set _ id : The maximum number of explorations to use . &apos;
&apos;Check names from ISO 639 3 letter codes to ISO language . DCNL &gt; &gt; &gt; names = &#91; \ &apos; 1 \ &apos; , \ &apos; 1st \ &apos; , \ &apos; 1st \ &apos; , \ &apos; 1st \ &apos; , \ &apos; 3 \ &apos; &#93; ) DCNL &gt; &gt; &gt; names = &#91; \ &apos; 1 \ &apos; , \ &apos; 1st \ &apos; , \ &apos; 3 \ &apos; &#93; DCNL &gt; &gt; &gt; names = &#91; \ &apos; 1 \ &apos; , \ &apos; 1st \ &apos; , \ &apos; 3 \ &apos; &#93; DCNL &gt; &gt; &gt; names = &#91; \ &apos; 1 \ &apos; , \ &apos; 1st \ &apos; , \ &apos; 1st \ &apos; , \ &apos; 3 \ &apos; &#93; DCNL &gt; &gt; &gt; names = &#91; \ &apos; 1 \ &apos; , \ &apos; 1st \ &apos; , \ &apos; 1st \ &apos; , \ &apos; 3 \ &apos; &#93; DCNL &gt; &gt; &gt; names = &#91; \ &apos; 1 \ &apos; , \ &apos; 1st \ &apos; , \ &apos; 1st \ &apos; , \ &apos; 3 \ &apos; &#93; DCNL &gt; &gt; &gt; names = \
&apos;Fixture that returns a celery app object . DCNL : param request : The request object . DCNL : type request : django.http.HttpRequest DCNL : param task _ config : The task _ config object . DCNL : type app _ config : ``str`` DCNL : param celery _ logging : The API logging configuration . DCNL : type app _ params : ``str`` DCNL : param use _ celery _ app : The app object . DCNL : type use _ app _ app : ``str`` DCNL : param use _ celery _ app : The app object . DCNL : rtype : : class : ` ~ celery.worker.WorkController` . &apos;
&apos;Assert that the inputs of input is the same type . DCNL Args : DCNL input : input tensor . DCNL regression : A tensor of `float` type . DCNL sparse : bool , optional ( default = True ) DCNL Returns : DCNL A boolean of whether the input is a scalar . &apos;
&apos;Check if a user has permission to check for a given user . &apos;
&apos;Convert a file name or a string to an ASCII string . DCNL @ param raw : The input file name . DCNL @ type raw : L { bytes } DCNL @ param data : The encoding name . DCNL @ type kwargs : L { bytes } DCNL @ return : A L { bytes } giving the name of the file name , or C { unicode } . DCNL @ rtype : C { unicode } &apos;
&apos;This function attempts to decode the HTML entities ( and return it ) DCNL and returns the content of the HTML entities ( e.g. &quot; &amp; lt ; &amp; gt ; &quot; ) . DCNL &gt; &gt; &gt; decode _ entities ( &quot; Hello , world ! &quot; ) DCNL u \ &apos; &amp; lt ; &amp; gt ; &amp; gt ; &amp; quot ; &amp; gt ; \ &apos; DCNL &gt; &gt; &gt; decode _ entities ( &quot; Hello , world ! &quot; ) DCNL u \ &apos; &amp; lt ; &amp; gt ; &amp; quot ; &amp; gt ; \ &apos; DCNL &gt; &gt; &gt; decode _ entities ( &quot; Hello , world ! &quot; ) DCNL u \ &apos; &amp; lt ; &amp; gt ; &amp; quot ; &amp; gt ; \ &apos; DCNL &gt; &gt; &gt; decode _ entities ( &quot; Hello , world ! &quot; ) DCNL u \ &apos; &amp; lt ; &amp; gt ; &amp; quot ; &amp; gt ; \ &apos; DCNL &gt; &gt; &gt; decode _ entities ( &quot; Hello , world ! &quot; ) DCNL u \ &apos; &amp; lt ; &amp; gt ; &amp; gt ; &amp; quot ;
&apos;Setup the Wink chains . &apos;
&apos;Given an URL , then all the URLs in the URL , and all the DCNL URLs . &apos;
&apos;Returns a path to the filesystem lookup path . DCNL : type lookup _ expr : str DCNL : param lookup _ expr : The name of the file to search . Default : `None` . DCNL : rtype : str DCNL : returns : The full path to the given module . &apos;
&apos;Function wrapper to handle connection errors . DCNL Ensures function performing broker commands completes DCNL despite intermittent connection failures . &apos;
&apos;Read the special tEXt chunk indicating the depth from a PNG file . &apos;
&apos;Get the return value of a node . DCNL Arguments : DCNL node : The node to be inferred from the node . DCNL Returns : DCNL The decorated function . &apos;
&apos;Turn a DNS record into a Python list . DCNL @ param name : The DNS name to query . DCNL @ type name : C { str } DCNL @ return : A list of the DNS record names . DCNL @ rtype : L { str } &apos;
&apos;Modified spherical Bessel function of the second kind . DCNL Defined as : DCNL .. math : : DCNL \ frac { 1 } { \ frac { 1 } { \ frac { 1 } { \ frac { 1 } { \ frac { 1 } { \ frac { 1 } { dx } } \ frac { 1 } { dx } } \ frac { 1 } { x _ { x } } } DCNL Parameters DCNL n : int DCNL Order of the Bessel function . DCNL z : float DCNL Argument at which to evaluate the second . DCNL derivative : bool , optional DCNL If True , then the derivative is assumed to be the first DCNL value of the second parameter . DCNL Returns DCNL x : float DCNL The second sample of the first kind . DCNL Notes DCNL .. math : : DCNL \ frac { 1 } { dx } = \ frac { 1 } { dx } } \ frac { 1 } { dx } } \ frac { 1 } { dx } } \ frac { 1 } { dx } }
&apos;Write a csv file . DCNL Args : DCNL path : The path to the file whose contents should be written . DCNL app _ messages : The dictionary of messages to write . DCNL lang _ dict : dict containing the language code . &apos;
&apos;Return the date of the week , week of the year . &apos;
&apos;Returns the last time of the given function . DCNL Returns : DCNL ~ chainer.Variable : Output variable . &apos;
&apos;Convenience wrapper around Popen . DCNL : param args : arguments to Popen DCNL : type args : list DCNL : param os _ err _ type : exception type to pass to Popen DCNL : type os _ err _ type : str DCNL : return : A wrapper for Popen . &apos;
&apos;Helper function to return a URL pattern for serving static files . &apos;
&apos;Check if a pattern matches any pattern patterns . &apos;
&apos;The version of Theano shared variables&apos;
&apos;tty function DCNL See http : / / msdn.microsoft.com / en-us / library / itertools.html # printService` for more details . &apos;
&apos;Executes the given command and execute it in the provided execution . DCNL Args : DCNL argv ( list ) : Parsed command line arguments . DCNL Returns : DCNL None&apos;
&apos;Return the system version of the given token and saves it to the DCNL environment variable . &apos;
&apos;Given an array of shape ( a , b , b ) , return a list of shape ( a , b ) DCNL where each element of a and b is a list of shape ( a , b , b ) . DCNL Parameters DCNL a : array _ like DCNL The array to fill . DCNL val : int DCNL The value of the array to fill . DCNL b : bool , optional DCNL If True , then a copy of the array will be returned . DCNL Returns DCNL out : ndarray DCNL The array of shape of the array . DCNL Notes DCNL This is equivalent to ``split`` with ``axis = 1`` . DCNL .. seealso : : : func : `numpy.fill _ array`&apos;
&apos;Test either if an error is raised when the target are not binary DCNL type . &apos;
&apos;Creates a numpy array with the specified shape and dtype . DCNL Args : DCNL array ( cupy.ndarray or numpy.ndarray ) : Base array . DCNL fill _ value ( cupy.cuda.Stream ) : CUDA stream . DCNL stream ( cupy.cuda.Stream ) : CUDA stream . DCNL Returns : DCNL cupy.ndarray : Zero-filled array . DCNL .. seealso : : : func : `numpy.full`&apos;
&apos;Queries the Memcache and times them . DCNL Args : DCNL uuid : A unique identifier of the keynames of entities . DCNL Returns : DCNL A tuple of two lists . A list of float times to return DCNL a list of errors . A zero value signifies a failure . &apos;
&apos;Associate the given security group with the given instance . &apos;
&apos;Uses aircrack-ng to check for it . DCNL Args : DCNL args ( str ) : The arguments to pass to the command . DCNL Returns : DCNL dict : The dictionary of parameters for the command . &apos;
&apos;Deletes the given usage _ key . &apos;
&apos;Takes an HTTP request and returns a request object . DCNL Args : DCNL http : http : / / httplib2.Http / Request / Request / Request DCNL The http request object . DCNL uri : string , the request object to use . DCNL method : The method to use for the request . DCNL headers : A tuple of ( key , value ) pairs . DCNL headers : A list of ( key , value ) pairs . DCNL Returns : DCNL A tuple of ( request , connection ) pairs . DCNL Examples : DCNL &gt; &gt; &gt; request = request ( request ) DCNL &gt; &gt; &gt; request ( request ) DCNL &gt; &gt; &gt; request ( request ) DCNL &gt; &gt; &gt; request ( request ) DCNL &gt; &gt; &gt; request ( request ) DCNL &gt; &gt; &gt; request ( request ) DCNL &gt; &gt; &gt; request ( request ) DCNL &gt; &gt; &gt; request ( request ) DCNL &gt; &gt; &gt; request ( request ) DCNL &gt; &gt; &gt; request ( request ) DCNL &gt; &gt; &gt; request ( request ) DCNL &gt; &gt; &gt; request ( request ) DCNL &gt; &gt; &gt;
&apos;Coerce \ &apos; a \ &apos; , \ &apos; a \ &apos; or \ &apos; a \ &apos; or \ &apos; a \ &apos; . DCNL Parameters DCNL a : array _ like DCNL Input array . DCNL axis : int or None , optional DCNL Axis along which to compute the array . Default is None . DCNL Returns DCNL out : ndarray DCNL Array of the array `a` . &apos;
&apos;Generate a large range mapping file names to a single file . DCNL Parameters DCNL table : string DCNL The table to write to . DCNL tree : dict DCNL The output file to write to . DCNL output _ sample _ sizes : dict DCNL The output of the output file . DCNL output _ dir : file DCNL The output of the output file . DCNL output _ file : file DCNL The output of the output file . DCNL output _ map : file DCNL The output directory to write to the output file . DCNL output _ map _ dir : file DCNL The output directory to write to the output file . DCNL output _ map _ dir : file DCNL The output directory to write to the output file . DCNL output _ map _ dir : file DCNL The output directory to write to the output file . DCNL output _ map _ dir : file , optional DCNL The output directory to write to the output file . DCNL output _ map _ dir : file DCNL The output directory to write to the output file . DCNL output _ map _
&apos;Parse a function into a list of ( name , value ) pairs . DCNL This function is designed to be used in a function . DCNL : param logger : The logger to parse . DCNL : type logger : str DCNL : param line : The line to parse . DCNL : type line : str DCNL : param state : The state of the function to parse . DCNL : type state : str DCNL : returns : A tuple of ( name , value ) pairs . &apos;
&apos;Set the specified subnet name DCNL : param str name : The name of the subnet to set DCNL : return : True if successful , False if not DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; system.set _ subnet _ name \ &apos; Local Area Connection \ &apos; &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 381&apos;
&apos;Get description of brainstorm ( bst _ resting ) dataset . &apos;
&apos;estimate error plus ridge penalty on beta&apos;
&apos;Returns the name of the module . DCNL Args : DCNL name : the name of the module . DCNL recursive : if True , the name is the name of the name . DCNL Returns : DCNL The name of the module . &apos;
&apos;Create a new volume group . DCNL Creates a copy of all existing volumes . DCNL .. versionadded : : 2016.3.0 DCNL CLI Examples : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; glusterfs.create _ vg / dev / sdb1 , / dev / sdb2 DCNL salt \ &apos; * \ &apos; lvm.s.create _ group device _ vg / dev / sdb1 , / dev / sdb1&apos;
&apos;A decorator that asserts that the decorated function is a no-op . DCNL Parameters DCNL fn : function DCNL The function to decorate . DCNL args : dict DCNL The arguments to pass to the decorated function . DCNL kwargs : dict DCNL The keyword arguments to pass to the function . DCNL Returns DCNL validator : function DCNL The decorated function . DCNL Examples DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; fn ( lambda x : * * kwargs ) DCNL Traceback ( most recent call last ) : DCNL NameError : ... * * kwargs &gt; DCNL &gt; &gt; &gt; fn ( lambda x : * * kwargs ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) : DCNL NameError : ... * * kwargs &gt; DCNL &gt; &gt; &gt; fn ( lambda x : * * kwargs ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) : DCNL NameError : ... * * kwargs &gt; DCNL &gt; &gt; &gt; fn ( lambda x : * * kwargs ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) :
&apos;Test that attempts to use for \ &apos; on \ &apos; for \ &apos; on \ &apos; for \ &apos; cookiecutter \ &apos; . &apos;
&apos; .. versionadded : : 2014.1.0 DCNL Create a new table for the specified table DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; nftables.delete _ table filter DCNL IPv6 : DCNL salt \ &apos; * \ &apos; nftables.delete _ table filter family = ipv6&apos;
&apos;Return a tuple of ( token , token , value ) tuples in the form of DCNL ( token , value ) pair in the form of ( token , value ) tuples . &apos;
&apos;Test for testing information . DCNL This function is meant to be used when the test data is done in DCNL the test data and the test data is done . DCNL Parameters DCNL raw _ fname : str DCNL The data to test . DCNL Returns DCNL out : dict DCNL A list of Evoked data . &apos;
&apos;Return the config file for the configuration file , if it exists . DCNL This is useful if you want to parse the configuration file and it DCNL is not available in the configuration directory . &apos;
&apos;Compute the L2 norm of a array of arrays . DCNL Parameters DCNL array : array _ like DCNL Input array . DCNL norm _ axis : int , optional DCNL Axis along which to compute the scaling . Default is None . DCNL Returns DCNL y : array , shape ( n _ samples , n _ features ) DCNL The shape of the array . DCNL Notes DCNL The grad implemented is computed as follows : DCNL .. code-block : : python DCNL import numpy as np DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; x = np.array ( &#91; &#91; 1 , 2 , 3 &#93; , &#91; 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; compute _ norms ( array ( &#91; 1 , 2 , 3 &#93; ) ) DCNL array ( &#91; &#91; 1 . , 1 . , 1 . , 1 . &#93; &#93; ) &apos;
&apos;Listens to the : py : class : ` ~ elasticsearch.Elasticsearch.bulk` api . DCNL : param * attr : the name of the user DCNL : type attr : str DCNL : return : Tuple of ( addon _ name , value ) DCNL : rtype : tuple ( str , str ) &apos;
&apos; : param stream _ name : Name of the Kinesis stream . DCNL : param conn : Filters out which stream to get . &apos;
&apos; * musicpd.org , stored playlists section : * DCNL ``deleted { SONGID } `` DCNL Deletes the song ``SONGID`` from the playlist ``NAME.m3u`` . &apos;
&apos;Adds a column name to a DataFrame . DCNL Args : DCNL df : DataFrame DCNL Returns : DCNL DataFrame DCNL .. seealso : : DCNL : ref : `message-flashing-pattern` for examples . DCNL .. versionadded : : 0.9 DCNL : param df : The column name to add to . DCNL : type df : dict DCNL : param column : A column name . DCNL : type replace : bool DCNL : return : A column of column names . DCNL : rtype : dict DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; cassandra.sample data
&apos;Remove all the keys from the selected database DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; redis.flushdb&apos;
&apos;Return common path names for a given FS path DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; scs.get _ common _ path \ &apos; / path / to / repo \ &apos; &apos;
&apos;Set up the folder with the specified folder DCNL Args : DCNL folder _ alias : string , the name of the folder DCNL Returns : DCNL None&apos;
&apos;Given a list of dicts , returns a dictionary mapping the information DCNL to a dictionary containing information about the models . DCNL This is a wrapper around Django \ &apos; s get _ backends _ by _ API method . &apos;
&apos;Assert that the TPOT CLI interface \ &apos; s integer representation is a float representation of DCNL the same representation of the type representation . &apos;
&apos;Compute fasta seqs for fasta _ fasta _ fp in input _ fasta _ fp DCNL input _ fasta _ fp : fasta filepath&apos;
&apos;Return a copy of a string in a byte string . DCNL If no encoding is specified , it should be a byte string . DCNL If no encoding is specified , it will be used as a byte string . &apos;
&apos;Analysis of a sound using the short-time Fourier transform DCNL x : input sound , fs : sampling rate DCNL w : sampling rate , N : FFT size , H : hop size DCNL returns hfreq , hmag , hphase : harmonic frequencies , magnitude and phases ; DCNL minSineDur : minimum duration of sinusoidal tracks DCNL returns hfreq , hmag , hphase : harmonic frequencies , magnitude and phases ; DCNL minSineDur : minimum duration of sinusoidal tracks DCNL returns hfreq , hmag , hphase : harmonic frequencies , magnitude and phases ; stocEnv : stochastic residual&apos;
&apos;Make a number of allocated unit size in bytes . DCNL : return : The number of allocated units . &apos;
&apos;Perform a convolution with probability density DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; density ( x ) .dict DCNL { \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1 , \ &apos; x \ &apos; : 1
&apos;Removes the parameters from the given host and port . &apos;
&apos;Create a generic resource factory for the given virtual machine . DCNL Returns : DCNL A list of ( name , name ) pairs . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; virt.build _ full _ traversal : DCNL salt \ &apos; * \ &apos; win _ full _ full _ traversal : DCNL salt \ &apos; * \ &apos; eselect.get _ full _ traversal : DCNL salt \ &apos; * \ &apos; eselect.get _ full _ traversal : DCNL salt \ &apos; * \ &apos; eselect.get _ full _ traversal : DCNL salt \ &apos; * \ &apos; eselect.get _ full _ traversal : DCNL salt \ &apos; * \ &apos; ip.build _ full _ parents &lt; domain &gt; &apos;
&apos;Return a 2-tuple of ( command , stdout , stderr ) tuple from the given DCNL command and output . DCNL : param cmdline : The command to run DCNL : param stdout : If True , return the output from the Popen constructor . DCNL : param stdin : If True , return the output from the Popen constructor . DCNL : param stdin : If True , return the output from the command . &apos;
&apos;Confine this module to Windows systems&apos;
&apos;Add temporary file to the default logger . &apos;
&apos;ContextManager to create a new block DCNL : param event : DCNL : param type : DCNL : param type : DCNL : param action : DCNL : param required : DCNL : type required : DCNL : param help : DCNL : type required : DCNL : param help _ state : DCNL : type required : DCNL : param help _ state : DCNL : type required : DCNL : return : DCNL : py : class : ` ~ elasticsearch.Elasticsearch.bulk` api . &apos;
&apos;Adds a message with the ``INFO`` level . &apos;
&apos;yaml : string DCNL A string parameter . DCNL : arg str name : the name of the parameter DCNL : arg str description : a description of the parameter ( optional ) DCNL : arg str description : a description of the parameter ( optional ) DCNL : arg str description : a description of the parameter ( optional ) DCNL Example : : DCNL .. literalinclude : : DCNL / .. / .. / tests / builders / fixtures / build-param001.yaml DCNL : language : yaml&apos;
&apos;Carves up a media range and returns a tuple of the DCNL ( params , subtype , params ) where \ &apos; params \ &apos; is a dictionary DCNL of the parameters for the media range . DCNL For example , the media range \ &apos; application / xhtml ; q = 0.5 \ &apos; would DCNL get parsed into : DCNL ( \ &apos; application \ &apos; , \ &apos; q \ &apos; ) , ( \ &apos; application \ &apos; , \ &apos; q \ &apos; ) , ( \ &apos; application \ &apos; , \ &apos; 0.5 \ &apos; ) ) &apos;
&apos;Recursively create a test . DCNL : param filename : Target filename . DCNL : return : A list of test filenames . DCNL : rtype : list&apos;
&apos;Perform a large kernel object . DCNL Parameters DCNL x : array _ like DCNL Input variable . DCNL n : int or None , optional DCNL Axis along which to compute the output . DCNL axis : int , optional DCNL Axis along which to transform the output . DCNL overwrite _ x : bool , optional DCNL If True , only the default value is returned . DCNL Returns DCNL outarray : ndarray , shape ( M , N , ) DCNL The unitary N-D real Fourier transform of `x` . DCNL Examples DCNL &gt; &gt; &gt; from scipy import real DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; , dtype = \ &apos; real \ &apos; ) DCNL &gt; &gt; &gt; np.allclose ( x , n ) DCNL array ( &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
&apos;Decorator for views that checks that the user is logged in , redirecting DCNL to the login page if necessary . &apos;
&apos;Get the instance type of the extension DCNL : type extension : str DCNL : param extension : the extension DCNL : type extension : str DCNL : return : the writer instance DCNL : rtype : str&apos;
&apos;Compute a variable length of the given variable \ &apos; s length . DCNL Parameters DCNL model : Model DCNL The model to compute the variable length for . DCNL ys : int DCNL The value of the variable . DCNL g : float DCNL The proposed variable . DCNL g : float DCNL The proposed variable . DCNL g : float DCNL The proposed variable . DCNL maxiter : int DCNL Number of iterations to evaluate . DCNL tol : float , optional DCNL Maximum number of iterations to be used . DCNL tol : float , optional DCNL Maximum number of iterations to be used . DCNL Returns DCNL length : int DCNL The length of the variable . &apos;
&apos;Get an iterator of the given context of a context . DCNL Args : DCNL sep : string ( optional ) : The argument to retrieve . DCNL Returns : DCNL A tuple of ( id , port ) tuple . &apos;
&apos;Shortcuts for generating request headers . DCNL : param keep _ alive : DCNL If ``True`` , the user-agent will be used . DCNL : param accept _ encoding : DCNL A list of header names . DCNL : param user _ agent : DCNL String containing the user-agent to use . DCNL : param auth _ auth : DCNL Colon-separated username : password string for authentication . DCNL : param proxy _ basic _ auth : DCNL Colon-separated username : password string for \ &apos; proxy-authorization : basic \ &apos; DCNL auth . DCNL : param proxy _ basic _ auth : DCNL Colon-separated username : password string for \ &apos; proxy-authorization : basic ... \ &apos; DCNL auth . DCNL : param proxy _ basic _ auth : DCNL Colon-separated username : password string for \ &apos; proxy-authorization : basic ... \ &apos; DCNL auth . DCNL : param proxy _ basic _ auth : DCNL Colon-separated username : password string for \ &apos; proxy-authorization : basic ... \ &apos; DCNL auth . DCNL : param proxy _ basic _ auth : DCNL Colon-separated username : password string for \ &apos; proxy-authorization : basic \ &apos; DCNL
&apos; &gt; &gt; &gt; group ( &#91; 1 , 2 , 3 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt;
&apos;Raise an exception if the value is not a valid value DCNL : param str name : The name of the value DCNL : param str value : the value to be converted DCNL : return : A string representing the value of the value DCNL : rtype : unicode&apos;
&apos;Quote a string for safe characters . DCNL &gt; &gt; &gt; quote ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; quote ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; quote ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; quote ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; quote ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; quote ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; quote ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; quote ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; quote ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; quote ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; quote ( \ &apos; abc \ &apos; ) DCNL
&apos;Delete an ElastiCache subnet group . DCNL CLI example : : DCNL salt myminion boto _ elasticache.delete _ subnet _ group my-replication-group region = us-east-1&apos;
&apos;Determine if the code is running in a running environment . DCNL Returns : DCNL True if the connection is running , False otherwise . &apos;
&apos;Use this test to make a test of the tests of the tests . &apos;
&apos; .. todo : : DCNL WRITEME DCNL Parameters DCNL a : Integer DCNL b : Integer DCNL var : Integer DCNL Returns DCNL var DCNL The dimension of ``a`` DCNL Examples DCNL &gt; &gt; &gt; from datashape import var DCNL &gt; &gt; &gt; dimension _ mul ( 5 , 5 ) DCNL Var ( ) DCNL &gt; &gt; &gt; dimension _ mul ( 5 , 5 ) DCNL Var ( ) DCNL &gt; &gt; &gt; dimension _ mul ( 5 , 5 ) DCNL Var ( ) DCNL &gt; &gt; &gt; dimension _ mul ( 5 , 5 ) DCNL Var ( ) DCNL &gt; &gt; &gt; dimension _ mul ( 5 , 5 ) DCNL Var ( ) DCNL &gt; &gt; &gt; dimension _ mul ( 5 , 5 ) DCNL Var ( ) DCNL &gt; &gt; &gt; dimension _ mul ( 5 , 5 ) DCNL Var ( ) DCNL &gt; &gt; &gt; dimension _ mul ( 5 , 5 ) DCNL Var ( ) DCNL &gt; &gt; &gt; dimension _ mul ( 5 , 5 ) DCNL Var ( ) DCNL &gt; &gt; &gt; dimension _ mul ( 5 , 5 ) DCNL Var ( )
&apos;Convert an integer into an integer according to the amount of microseconds . DCNL This is equivalent to : meth : ` ~ datetime.datetime` to an integer . DCNL .. versionchanged : : 4.1 DCNL The amount of microseconds between `start` and microseconds . DCNL .. versionadded : : 4.1 DCNL .. code-block : : python DCNL &gt; &gt; &gt; a = np.arange ( 20 ) DCNL &gt; &gt; &gt; mask _ between _ time ( 10 , 100 ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; mask _ between _ time ( \ &apos; 100 \ &apos; ) DCNL ( \ &apos; 1 \ &apos; , 10 ) DCNL &gt; &gt; &gt; mask _ between _ time ( \ &apos; 100 \ &apos; ) DCNL ( \ &apos; 1 \ &apos; , 10 ) DCNL &gt; &gt; &gt; mask _ between _ time ( \ &apos; 100 \ &apos; ) DCNL ( \ &apos; 1 \ &apos; , 10 ) DCNL &gt; &gt; &gt; mask _ between _ time ( \ &apos; 100 \ &apos; ) DCNL ( \ &apos; 1 \ &apos; , 10 ) DCNL &gt; &gt; &gt; mask _ between _ time (
&apos;Create and return a series of ( x1 , y1 ) where ( i , i , j ) is DCNL ( 0 , 0 ) and ( 0 , 0 ) and ( 0 , 0 ) and ( 0 , 0 ) . &apos;
&apos;Compile the application and install a sane default client . DCNL Args : DCNL project _ client : The client client client to run . DCNL extra _ args : A list of extra images to run . DCNL install _ client : Whether to install the results directory . DCNL Returns : DCNL True if the application is running , False otherwise . &apos;
&apos;Create or create a replication request . DCNL : param command : command line arguments DCNL : type command : str DCNL : param host : host for the replication request DCNL : type host : str DCNL : param core _ name : name of the request DCNL : type core _ name : str DCNL : param params : additional parameters to pass to the request DCNL : type params : dict DCNL : param params : dict of parameters DCNL : type params : dict DCNL : param params : additional parameters to pass to the request DCNL : type params : dict DCNL : param params : additional params to pass to parameters DCNL : type params : dict DCNL : param params : additional params to pass to parameters DCNL : type params : dict &#91; str &#93; DCNL : param params : additional params to pass to parameters DCNL : type params : dict &#91; str &#93; DCNL : param params : additional params to pass to parameters DCNL : type params : dict &#91; str &#93; DCNL : param params : additional params to pass to parameters DCNL : type params : dict
&apos;Return the value of the config option . &apos;
&apos;Make sure that all of the methods defined in the registry methods are DCNL registered . &apos;
&apos;Check that the virtual pkg module is available in _ _ salt _ _ &apos;
&apos;Return a dict of \ &apos; include _ headers \ &apos; header for the request . DCNL If include _ headers is None , the response will be appended to the DCNL response . &apos;
&apos;atom : = parse _ parser ( \ &apos; \ &apos; ) DCNL ( \ &apos; text \ &apos; , \ &apos; ? \ &apos; ) , ( \ &apos; text \ &apos; ) , ( \ &apos; text \ &apos; ) , ( \ &apos; text \ &apos; ) ) &apos;
&apos;Set a key for the specified namespace . &apos;
&apos; &gt; &gt; &gt; import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; print ( x ) DCNL &#91; 0 , 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; print ( x ) DCNL &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 &#93; DCNL &gt; &gt; &gt; print ( x ) DCNL &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 &#93; DCNL &gt; &gt; &gt; print ( x ) DCNL &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 &#93; &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 362&apos;
&apos;Transform a lowpass filter to a different cutoff distribution . DCNL Parameters DCNL z : float DCNL Poles of the transformed low-pass filter . DCNL p : array _ like DCNL Poles of the analog IIR filter transfer function . DCNL k : float DCNL Poles of the analog IIR filter transfer function . DCNL k : float , optional DCNL Upper bound of the cutoff frequency . DCNL k : float , optional DCNL Upper bound of the cutoff frequency . DCNL Returns DCNL xs : array _ like DCNL Poles of the transformed low-pass filter . DCNL p : array _ like DCNL Poles of the transformed low-pass filter . DCNL k : float DCNL Poles of the transformed low-pass filter . DCNL k : float DCNL Poles of the transformed low-pass filter . DCNL k : float DCNL Poles of the transformed low-pass filter . DCNL Returns DCNL xs : array _ like DCNL Poles of the transformed low-pass filter . DCNL p : array _ like DCNL Poles of the transformed low-pass filter . DCNL k : float DCNL Poles of the transformed low-pass filter . DCNL k : float DCNL Poles of the analog IIR
&apos;Allow the label \ &apos; s label based on a NameID class instance . DCNL This is useful when you want to build a simple class with a different DCNL description of the form : DCNL https : / / gist.github.com / weaver / 317164 DCNL License : Unspecified DCNL &gt; &gt; &gt; from sympy.assumptions.handlers import get _ label DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; _ label ( self ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ label ( self ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ label ( self ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ label ( self ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ label ( self ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ label ( self ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ label ( self ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ label ( self ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ label ( self ) DCNL
&apos;Return the old files in \ &apos; files \ &apos; in \ &apos; files \ &apos; . DCNL Return a list of all missing files . &apos;
&apos; .. versionadded : : 2015.8.0 DCNL Return the size of the range in range &#91; port &#93; DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; redis.range _ size&apos;
&apos; : param str desc : The name of the entity to sign . DCNL : param ident : The name of the object to sign . DCNL : param int addr : The name of the object to sign . DCNL : return : A string containing the sign of the entity . &apos;
&apos;Recursively yield all the futures in the given child process . DCNL The result is a list of ``Futures`` , the result is not a single Future . DCNL The result is a list of the following keys : DCNL - a list of futures that were yielded . DCNL - ``result`` - A boolean indicating whether or not the result is a DCNL single Future . DCNL * If the first argument is a `.Future` , it will be returned . DCNL * If the list is not a `.Future` , it will be returned . DCNL .. versionadded : : 4.0&apos;
&apos;Serve static files below a given path in the staticfiles finders . DCNL To serve files in the django.views.static view to serve the files DCNL in the staticfiles finders . DCNL To use the django.views.static view to serve the static files . &apos;
&apos;yaml : github DCNL Trigger a configuration . DCNL Requires the Jenkins : jenkins-wiki : `Promoted Builds Plugin DCNL &lt; Promoted + Builds + Plugin &gt; ` . DCNL : arg str name : the name of the build ( optional ) DCNL : arg str description : the name of the project ( default false ) DCNL : arg str description : the name of the build ( optional ) DCNL : arg str description : the name of the build ( default false ) DCNL : arg str description : the name of the build ( default false ) DCNL : arg str description : the name of the build ( default false ) DCNL : arg str description : the name of the build ( optional ) DCNL Example : DCNL .. literalinclude : : / .. / .. / tests / publishers / fixtures / github-minimal.yaml DCNL : language : yaml DCNL .. literalinclude : : / .. / .. / tests / publishers / fixtures / github-notifier.yaml DCNL : language : yaml&apos;
&apos;Calculates the variance of the two points . DCNL Parameters DCNL x : array-like , shape ( n _ samples , n _ features ) DCNL The x points . DCNL y : array-like , shape ( n _ samples , n _ features ) DCNL The x points . DCNL w : ndarray , shape ( n _ samples , n _ features ) DCNL The x . DCNL h : ndarray , shape ( n _ samples , n _ features ) DCNL Output points . DCNL Returns DCNL x : ndarray , shape ( n _ samples , n _ features ) DCNL The variance of the x . &apos;
&apos;This function takes a tuple of ( x , y ) , where x is a DCNL tuple of ( x , y ) , where each element is a tuple of DCNL ( coordinate ) , where each element is a tuple of ( x , y ) DCNL where each element is a tuple of ( x _ y , y _ z ) . The DCNL second element is a tuple of ( x _ y , y _ z ) . &apos;
&apos;Check if the line is a multiline string . DCNL Args : DCNL filename : The name of the line to check . DCNL clean _ lines : A CleansedLines instance containing the file . DCNL linenum : The number of the line to check . DCNL error : The line to check for . DCNL Returns : DCNL A string containing the line number of the line . &apos;
&apos;Calls daemontools.restart ( ) function DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; daemontools.full _ restart &lt; service name &gt; &apos;
&apos;Validates that the value is a valid configuration option . DCNL : param str option : The option value to validate . DCNL : param value : The value to validate . DCNL : returns : True if the value is valid , otherwise False . &apos;
&apos;Used to regenerate the recursion . DCNL @ param iterator : The MX object . DCNL @ type iterable : C { int } DCNL @ return : Number of operations . DCNL @ rtype : L { Deferred } &apos;
&apos;cast ( round ( a , mode ) , \ &apos; int64 \ &apos; ) &apos;
&apos;Helper function to determine if the decorated function is a single DCNL function . DCNL Parameters DCNL n : int DCNL The name of the function to be checked . DCNL func : callable DCNL The function to decorate . DCNL func : callable DCNL The function to decorate . DCNL Returns DCNL bool DCNL True if the decorated function has the same arguments , otherwise DCNL False otherwise . DCNL Examples DCNL &gt; &gt; &gt; from sympy.physics.quantum.cartesian import XBra , XKet DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; is _ multi ( \ &apos; _ _ init _ _ \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ multi ( \ &apos; _ _ init _ _ \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ multi ( \ &apos; _ _ init _ _ \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ multi ( \ &apos; _ _ init _ _ \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ duplicate ( \ &apos; _ _ init _ _ \ &apos; ) DCNL True DCNL &gt; &gt; &gt; is _ duplicate
&apos;Convert a value to a slice . DCNL For example : DCNL &gt; &gt; &gt; val = &#91; ( 1 , 2 ) , ( 2 , 2 ) , ( 2 , 2 ) , ( 2 , 2 ) , ( 2 , 2 ) , ( 2 , 4 ) ) DCNL &gt; &gt; &gt; chr ( 2 ) DCNL ( 2 , 2 ) DCNL &gt; &gt; &gt; slice ( 2 , 2 ) DCNL ( 2 , 2 ) DCNL &gt; &gt; &gt; slice ( 2 , 2 ) DCNL ( 2 , 2 ) DCNL &gt; &gt; &gt; slice ( 2 , 2 ) DCNL ( 2 , 2 ) DCNL &gt; &gt; &gt; slice ( 2 , 2 ) DCNL ( 2 , 2 ) DCNL &gt; &gt; &gt; slice ( 2 , 2 ) DCNL ( 2 , 2 ) DCNL &gt; &gt; &gt; slice ( 2 , 2 ) DCNL ( 2 , 2 ) DCNL &gt; &gt; &gt; slice ( 2 , 2 ) DCNL ( 2 , 2 ) DCNL &gt; &gt; &gt; slice ( 2 , 2 ) DCNL ( 2 , 2 ) DCNL &gt; &gt; &gt;
&apos;map ( id , data , data ) - &gt; list of dicts , where each item is a list of ( id , id ) tuples . DCNL Returns a list of ( id , id , count ) tuples . &apos;
&apos; &gt; &gt; &gt; add _ trailing _ slash ( \ &apos; / foo / bar \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; add _ trailing _ slash ( \ &apos; abc \ &apos; ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; add _ trailing _ slash ( \ &apos; / foo / bar \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; add _ trailing _ slash ( \ &apos; / foo / bar \ &apos; ) DCNL \ &apos; abc \ &apos; &apos;
&apos;Make a message for a given server . DCNL : param server : The log server to be executed . DCNL : param server : The log message of the log file . DCNL : param help : The command to send in the log file . &apos;
&apos;Set the video subtitle . DCNL @ param p _ mi : the media player . DCNL @ param i _ subtitles : the subtitle . DCNL @ return : the set of video subtitles . &apos;
&apos;Evaluate a polynomial ``f`` in ``GF ( p ) &#91; x &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.domains import ZZ DCNL &gt; &gt; &gt; from sympy.polys.galoistools import gf _ eval DCNL &gt; &gt; &gt; gf _ eval ( &#91; 3 , 2 , 4 &#93; , 5 , ZZ ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos;Return ``True`` if the specified service is available , otherwise returns DCNL ``False`` . DCNL name DCNL The name of the service to check DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.available sshd&apos;
&apos;This is a helper function to make sure the user is logged in . DCNL Parameters DCNL length : int DCNL The number of tests to use . DCNL n _ bits : int DCNL The number of tests to use . DCNL bins : int , optional DCNL The number of columns to use . Default is \ &apos; 0 \ &apos; . DCNL Returns DCNL out : float DCNL The estimated number of the tests . DCNL Notes DCNL This function is meant to be used in conjunction with the following DCNL functions : DCNL https : / / github.com / sopel-irc / sopel / wiki / Using-the-meetbot-module&apos;
&apos;Lists wiki documents ( no English source document ) &apos;
&apos;Convert native object classes to a list . &apos;
&apos;Get the face which is present in a reversed convex polygon . &apos;
&apos;initialise module&apos;
&apos;A version of Django \ &apos; s `get _ project _ projects ( ) ` method . DCNL This is useful for Django \ &apos; s `get _ project _ project ( ) ` method . DCNL : param cls : The class for which to cache the project . DCNL : return : A tuple of ( project _ path , project _ path ) . &apos;
&apos;List the metrics for the given course . DCNL This is designed to be able to edit all metrics . &apos;
&apos;Run the response as a response . DCNL @ param response _ file : The response file to send . DCNL @ type response _ file : L { dict } DCNL @ param response _ response : The response to send . DCNL @ type response _ list : L { dict } DCNL @ param response _ response : The response to send to the response . DCNL @ type request _ dict : L { dict } DCNL @ param request _ dict : The request response . DCNL @ type request _ dict : L { dict } DCNL @ param env _ dict : A dict containing the response headers . DCNL @ type request _ dict : L { dict } DCNL @ return : The response object . DCNL @ rtype : L { dict } &apos;
&apos;Add individual coordinates to a FIF file . DCNL Parameters DCNL px : array-like , shape ( n _ channels , 3 ) DCNL Input coordinates to add to the image . DCNL radius : float DCNL The radius radius to add to the camera space . DCNL positives : list of float , optional DCNL The radius of the image . DCNL Returns DCNL dpi : float DCNL Vertices and faces . &apos;
&apos; \ d + &apos;
&apos;Return path to file file DCNL : param src : Source file DCNL : type src : file DCNL : param dst : Path of file DCNL : type resource : ``unicode`` DCNL : param logger : file name DCNL : type logger : ``unicode`` DCNL : param logger : logger to cache DCNL : type logger : ``unicode`` DCNL : returns : Path to file DCNL : rtype : ``unicode`` filepath&apos;
&apos;Returns the course updates that has been updated by the given DCNL course _ id and user _ id . DCNL Arguments : DCNL location ( str ) : the course id DCNL user _ id ( str ) : the user id DCNL user _ id ( str ) : the user id DCNL Returns : DCNL None&apos;
&apos;Returns True if url is served by a URL . DCNL : param str url : URL for the URL DCNL : returns : True if url is 200 , False otherwise . &apos;
&apos;Evaluates the CDF of the test function . &apos;
&apos;A helper method to check the auth _ auth method . DCNL This is a convenience method to make sure that the user doesn \ &apos; t DCNL exist yet . &apos;
&apos;b64e ( b ) - &gt; string DCNL Returns a byte string . DCNL &gt; &gt; &gt; b64e ( &quot; &quot; ) DCNL \ &apos; a + b \ &apos; DCNL &gt; &gt; &gt; b64e ( &quot; &quot; ) DCNL \ &apos; a + b \ &apos; DCNL &gt; &gt; &gt; b64e ( &quot; &quot; ) DCNL \ &apos; a + b \ &apos; DCNL &gt; &gt; &gt; b64e ( &quot; &quot; ) DCNL \ &apos; a + b \ &apos; DCNL &gt; &gt; &gt; b64e ( &quot; &quot; ) DCNL \ &apos; a + b \ &apos; DCNL &gt; &gt; &gt; b64e ( &quot; &quot; ) DCNL \ &apos; a + b \ &apos; DCNL &gt; &gt; &gt; b64e ( &quot; &quot; ) DCNL \ &apos; a + b \ &apos; DCNL &gt; &gt; &gt; b64e ( &quot; &quot; ) DCNL \ &apos; a + b \ &apos; DCNL &gt; &gt; &gt; b64e ( &quot; &quot; ) DCNL \ &apos; a + b \ &apos; DCNL &gt; &gt; &gt; b64e ( &quot; &quot; ) DCNL \ &apos; a + b \ &apos; DCNL &gt; &gt; &gt; b64@@
&apos;Returns the maximum number of nodes in `G` . DCNL Parameters DCNL G : NetworkX graph DCNL u : NetworkX graph DCNL v : NetworkX graph DCNL Returns DCNL G : NetworkX graph DCNL A list of nodes in `G` . DCNL Raises DCNL NetworkXNotImplemented : DCNL If G is undirected . DCNL Examples DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; nx.add _ graph ( G , v ) DCNL &gt; &gt; &gt; sorted ( nx.k _ neighbors ( G , v ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL References DCNL .. &#91; 1 &#93; http : / / www.ics.uci.edu / ~ eppstein / PADS / BFS.py DCNL by D. Eppstein , July 2004 . &apos;
&apos;Check if the given filename matches a regular expression . DCNL If default is True , don \ &apos; t match the pattern in the patterns , DCNL otherwise returns None . &apos;
&apos;Connect to Amazon CloudWatch Logs DCNL : type aws _ access _ key _ id : string DCNL : param aws _ access _ key _ id : Your AWS Access Key ID DCNL : type aws _ secret _ access _ key : string DCNL : param aws _ secret _ access _ key : Your AWS Secret Access Key DCNL : rtype : : class : `boto.ec2.connection.EC2Connection` DCNL : return : A connection to Amazon \ &apos; s SQS&apos;
&apos;Show details of a range ( nova-network only ) . DCNL This is only useful if you \ &apos; re on a range of VMs . DCNL &gt; &gt; &gt; ip = boto3.client ( \ &apos; ip \ &apos; ) DCNL &gt; &gt; &gt; ip = \ &apos; 1234567 \ &apos; DCNL &gt; &gt; &gt; ip = \ &apos; 45.55.96.47 \ &apos; &apos;
&apos;Try to decode the preferred encoding DCNL : param s : the string to decode DCNL : return : The preferred encoding DCNL : rtype : str&apos;
&apos;Run migrations in \ &apos; offline \ &apos; mode . DCNL In this scenario we need to create an Engine DCNL and associate a connection with the context . &apos;
&apos;Image data resource factory method&apos;
&apos;Test satisfiability of an expression . DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; satisfiability ( C ) ( ) DCNL True&apos;
&apos;Helps skip integration tests using \ &apos; skipif \ &apos; . &apos;
&apos;Inverts the files . DCNL : param docs _ links : A list of files to invert . DCNL : type docs _ links : Iterable &#91; str &#93; DCNL : return : The pairs of files . &apos;
&apos;Generate valid certificates for the given course . DCNL Arguments : DCNL course ( HttpRequest ) DCNL course _ id ( CourseKey ) : Identifier for the course . DCNL Returns : DCNL dict : A valid certificates for the course . &apos;
&apos;Start the salt cloud . DCNL .. versionadded : : 2014.7.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; docker.start &lt; package name &gt; &apos;
&apos;Args : DCNL conf ( dict ) : The configuration to create the submission . DCNL transform _ valid : Dataset to be used . DCNL transform _ test : bool , optional ( default = True ) DCNL Returns : DCNL A dict containing the submission . &apos;
&apos;Translates a string into a string . DCNL Parameters DCNL s : str DCNL The string to translate . DCNL a : str DCNL The string to translate . DCNL b : str DCNL The string to translate . DCNL c : str , optional DCNL The string to be converted . DCNL c : str , optional DCNL The C { \ &apos; C \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; } . DCNL Returns DCNL A list of strings . DCNL Examples DCNL &gt; &gt; &gt; from sympy import translate DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; translate ( \ &apos; abc \ &apos; , \ &apos; abc \ &apos; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos;
&apos;Renders the entire response in the response . DCNL : param request : The request object . DCNL : type request : django.http.HttpRequest DCNL : param response _ id : The content of the response . DCNL : type response _ id : str DCNL : param response _ format : The response in the response . DCNL : type response _ format : str DCNL : param response _ format : The response in the response . DCNL : type response _ format : str DCNL : return : The content of the response . &apos;
&apos;Replace substrings of text using the given word . DCNL &gt; &gt; &gt; list _ replace ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; DCNL &gt; &gt; &gt; list _ replace ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; DCNL &gt; &gt; &gt; list _ replace ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; DCNL &gt; &gt; &gt; list _ replace ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL
&apos;Given a label or a string , try to determine if it \ &apos; s in the DCNL socket . If we don \ &apos; t have to do anything , it will be interpreted as DCNL unchanged . &apos;
&apos;Return True if dist is installed or not . DCNL This is used to determine if we are running in a Linux distribution . DCNL For example : DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online ( ) DCNL True DCNL &gt; &gt; &gt; is _ online
&apos;Run the environment setting for a given shell environment . DCNL If the environment variable is not specified , the environment variable will DCNL be used . &apos;
&apos;Compute the GCD of coefficients for ``f`` in ``GF ( p ) &#91; x &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.domains import ZZ DCNL &gt; &gt; &gt; from sympy.polys.galoistools import gf _ decomposition DCNL &gt; &gt; &gt; f = ZZ.map ( &#91; &#91; 1 , 2 &#93; , &#91; 2 , 2 &#93; &#93; ) DCNL &gt; &gt; &gt; gf _ degree ( f , p , ZZ ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos;Send a notification status . DCNL : param doc : The document to send DCNL : param method : The method to send the notification status DCNL : return : None&apos;
&apos;Usage : DCNL html _ editable _ boolean ( \ &apos; Cookie \ &apos; , \ &apos; ajax _ html \ &apos; ) DCNL def my _ view ( self ) : DCNL print ( \ &apos; 404 : 1 \ &apos; , \ &apos; false \ &apos; , \ &apos; false \ &apos; , \ &apos; false \ &apos; ) ) &apos;
&apos;Convert a textual representation of text into a textual description . DCNL @ type s : L { str } DCNL @ param text : The text to convert to a string . DCNL @ type IV : L { bytes } DCNL @ rtype : L { dict } DCNL @ rtype : L { dict } DCNL @ rtype : L { dict } DCNL @ rtype : L { dict } &apos;
&apos;This function creates a new block of a low-level base cipher . DCNL It will absorb named parameters in the process . &apos;
&apos;Compares two strings in a cryptographically sort tuple . &apos;
&apos;Return a list of the available minions DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; ret.get _ minions mysql&apos;
&apos;Get a set of writer names by the command name . &apos;
&apos;Install packages with ``port selfupdate`` DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.list _ pkgs&apos;
&apos;constructs an object holding a human-readable string representation of the buffer . DCNL This function constructs an object holding a human-readable string representation of the DCNL keyboard modifier flags ( i.e _ _ string _ _ ) to a human-readable string . &apos;
&apos;Upload a photo for each photo in the datastore . DCNL Args : DCNL http _ client : A Google Cloud Storage client object . DCNL client : A Google Cloud Storage client object . DCNL user : A Google ID object containing the photo . DCNL upload _ request : The request object . DCNL Returns : DCNL True on success , False otherwise . &apos;
&apos;Returns the next next date for the next date . DCNL If the \ &apos; next \ &apos; argument is the previous date , it will return the previous DCNL next date . DCNL Arguments : DCNL generic _ view ( str ) : the view to retrieve the next date for . DCNL date ( str ) : The date to query . DCNL is _ previous ( str ) : The time period for the next month . DCNL period ( datetime ) : The time period for the next month . DCNL Returns : DCNL current datetime object . &apos;
&apos;Remove all chains in the graph with respect to the graph . DCNL Examples DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; G = nx.cycle _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.cycle _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.cycle _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.cycle _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.cycle _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.cycle _ graph ( 5 ) DCNL &gt; &gt; &gt; print ( nx.petersen _ graph ( G ) ) DCNL False&apos;
&apos;Return the version of MSVC that is used to build the compiler . DCNL For Python 2.3 , the version number is MSVC 6 . &apos;
&apos;cache _ content _ in _ request ( url , content , method ) DCNL : param url : URL to update DCNL : type url : str DCNL : param content : content content DCNL : type content : str DCNL : param method : HTTP POST request DCNL : type method : str DCNL : rtype : bool&apos;
&apos;Create a new block for the current branch . DCNL : param pidfile : The name of the current branch to create . DCNL : type uid : int DCNL : param uid : The name of the current branch . DCNL : type uid : int DCNL : param pwd : The maximum number of the current branch . DCNL : type umask : int DCNL : return : The new block . DCNL : rtype : : class : ` ~ PIL.Image.Image`&apos;
&apos;Generate a blockdevice _ id from a dataset id . DCNL : param unicode blockdevice _ id : The identifier of the blockdevice _ id . DCNL : returns : A blockdevice _ id for a dataset id . &apos;
&apos;Tries to infer an ASCII string for display . DCNL Parameters : DCNL text -- the text to sanitize . DCNL os ( int , optional ) : The os . DCNL Returns : DCNL Printable string for the format of \ &apos; / \ &apos; , \ &apos; - \ &apos; , \ &apos; - \ &apos; , \ &apos; - \ &apos; , \ &apos; . \ &apos; , and \ &apos; \ &apos; . &apos;
&apos;Method to encrypt streams using the given PDF stream ( NOT IMPLEMENTED YET ) DCNL @ param stream : A PDF stream DCNL @ return : A tuple ( status , statusContent ) , where statusContent is the encoded PDF stream in case status = 0 or an error in case status = -1&apos;
&apos;Copies the data to a Google Storage API format . DCNL Args : DCNL issue : An instance of this issue . DCNL rpc _ server : An optional UserRPC object . DCNL send _ server : An optional list of strings to append to the upload . DCNL options : A list of strings to append to the output file . &apos;
&apos;Return a list of the css selector for the given css selector . &apos;
&apos;Delete a single blob from Blobstore . DCNL Args : DCNL blob _ keys : Single instance or list of blob keys . DCNL * * options : Extra options to delete . DCNL Returns : DCNL List of futures . &apos;
&apos; : param request : request to check DCNL : type request : django.http.HttpRequest DCNL : param name : name of the user DCNL : type name : str DCNL : param name : name of the user DCNL : type name : str DCNL : return : True if successful , False if not DCNL : rtype : bool&apos;
&apos;Publish commands to the server \ &apos; s SSL certificate and install them DCNL : param dict config : the config file to install DCNL : param list plugins : the list of plugins to install DCNL : returns : a tuple of ( name , source _ path ) DCNL : raises : * * IOError * * if the installer can \ &apos; t exist&apos;
&apos;Return the base path name for a base file name . DCNL : param base : The base base path to get the base path for . DCNL : type base : str DCNL : return : The base path name , or ``None`` if no base path was found . DCNL : rtype : str DCNL : return : The base path to a base path , or None if no base path was DCNL found . &apos;
&apos;Returns True if the two strings are equal , False otherwise . DCNL The time taken is independent of the number of characters that match . &apos;
&apos;Find the location of the location in MB . DCNL Specifies the location of the location in the region . DCNL Usage : : DCNL @ location _ to _ string DCNL @ location _ to _ string ( \ &apos; location \ &apos; ) DCNL .. code-block : : bash DCNL salt \ &apos; minion-id \ &apos; status.location _ to _ string DCNL salt \ &apos; minion-id \ &apos; varnish.location _ to _ string offset&apos;
&apos;Removes the given ring ( s ) for the given request . &apos;
&apos;Format sys.version _ info to produce the Sphinx version string . DCNL : return : The Sphinx version string DCNL : rtype : str DCNL : return : The Sphinx version string DCNL : rtype : str DCNL : return : The Sphinx version string DCNL : rtype : str&apos;
&apos;Returns all users that are allowed for the given user . DCNL If no user is found , the user will be removed . &apos;
&apos;Returns a string representation of the Python status code in a DCNL version string . Raise an exception if the object is not a DCNL version string . &apos;
&apos;Delaunay triangulation of 2D points ( x1 , x2 , y2 ) . DCNL Parameters DCNL x1 , x2 : array _ like DCNL Input vector . DCNL x2 : array _ like DCNL Input vector . DCNL x2 : array _ like , shape ( n _ points , ) DCNL The points in each point in degrees . DCNL Returns DCNL r : ndarray , shape ( n _ points , 3 ) DCNL Array of 2D coordinates . &apos;
&apos;Check if a package is installed . DCNL : param pkg _ name : Name of package to check DCNL : type package _ name : str DCNL : return : True if the package is installed , False otherwise . &apos;
&apos;Decorator to mark a function and return a decorator that wraps the DCNL function \ &apos; s decorator . DCNL Parameters DCNL fail _ condition : bool , optional DCNL If True , raise an exception if the condition is False . DCNL msg : str , optional DCNL The message to test if the condition is skipped . DCNL Returns DCNL decorator : callable DCNL A decorator that skips the decorated test if it is a no-op . &apos;
&apos;Wrapper for Django \ &apos; s ``reverse`` in templates . &apos;
&apos;Parses a date string based on a date string . DCNL Parameters DCNL date : str DCNL The date to parse . DCNL Returns DCNL date : str DCNL The date string representing the date . &apos;
&apos;Numpy-compatibility function . DCNL Examples DCNL &gt; &gt; &gt; from sympy import ZZ DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; x = K.placeholder ( dtype = False ) DCNL &gt; &gt; &gt; K.eval ( kvar ) DCNL array ( &#91; &#91; 0 . , 1 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 . , 0 .
&apos;Measurement data . DCNL Parameters DCNL points : ( N , N ) array _ like DCNL Input points . DCNL values : array _ like , shape ( n _ samples , ) DCNL Array of points . DCNL values : array _ like , shape ( n _ samples , ) DCNL Array of values . DCNL fill _ value : float , optional DCNL Axis along which the data is computed . Default is 0 . DCNL fill _ value : bool , optional DCNL If True , then the value is assumed to be a scalar , or a DCNL tuple of shape ( n _ value , n _ value ) . DCNL Returns DCNL r : array _ like DCNL An array with shape ( n _ values , n _ values ) . DCNL Notes DCNL This function is meant to be used in a numpy array with shape DCNL ( 1 , 2 , 3 ) . DCNL References DCNL .. &#91; 1 &#93; http : / / docs.scipy.org / doc / scipy-0.14.0 / reference / generated / scipy.ndimage.interpolation.affine _ transform.html &gt; ` _ DCNL Examples DCNL &gt; &gt; &gt; from
&apos;match ( string , trie ) - &gt; string DCNL Find all the keys in the trie that match the key . &apos;
&apos;Remove sure that \ &apos; filename \ &apos; is true if it doesn \ &apos; t exist . &apos;
&apos;If \ &apos; flexval _ bool \ &apos; is True , don \ &apos; t convert \ &apos; value \ &apos; to True . DCNL If \ &apos; flexval _ bool \ &apos; is True , the caller \ &apos; s value is True . &apos;
&apos;Test that the estimator is expected to be correct . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 2671 DCNL https : / / github.com / astropy / astropy / pull / 235&apos;
&apos;Split a string in a string . DCNL : param string : The string to split . DCNL : return : The split . &apos;
&apos;Test that setting learn _ only works on a BatchNormalizedMLP works . &apos;
&apos;Filter out the given config _ conn and parse them . DCNL : type raw _ conn : : py : class : ` ~ google.cloud.logging.client.Client` DCNL : param raw _ conn : the parsed connection directory . DCNL : rtype : list &#91; str &#93; &apos;
&apos;Test that conversion of conversion table should not be converted to a DCNL QTable fails . &apos;
&apos;Compute the transformation matrix from heliocentric Sgr coordinates to DCNL spherical Galactic . &apos;
&apos;Return the value for a struct . DCNL This function returns a value for the size in * format _ type . DCNL If format _ type is a bytes , it will be converted to an integer . &apos;
&apos;Given a list of strings , return a list of tuples with the first DCNL elements of the list , if present , otherwise returns None . DCNL If the input is not a string , it is assumed to be the first DCNL element of the list . Otherwise , it is assumed to be the first DCNL element of the list . Otherwise , it is assumed to be the first DCNL element of the list . Otherwise , it is assumed to be the first DCNL element of the list . Otherwise , it is assumed to be the first DCNL element of the list . Otherwise , it is assumed to be the first DCNL element of the list . Otherwise , it is assumed to be the first DCNL element of the list . Otherwise , it is assumed to be the first DCNL element of the list . Otherwise , it is assumed to be the first DCNL element of the list . Otherwise , it is assumed to be the first DCNL element of the list . Otherwise , it is assumed to be the first DCNL element of the list with the
&apos;A helper to calculate the sum of a matrix . DCNL Parameters DCNL matrix : array-like DCNL The matrix to compare . DCNL d _ factor : float DCNL The coordinate to be compared . DCNL Returns DCNL value : float DCNL The value of the matrix . &apos;
&apos;This function is called from the User-Agent header DCNL Parameters DCNL url : str DCNL The URL to run . DCNL allow _ redirect : bool DCNL If True , don \ &apos; t know what you want to run . DCNL session : str DCNL The session to use . Defaults to False . DCNL proxy : dict DCNL A dictionary containing the names of the requests to the DCNL session . If not specified , it will be skipped . DCNL proxy : dict DCNL A dictionary containing the User-Agent header to be used . DCNL Returns DCNL out : dict DCNL A dictionary containing the information about the server . &apos;
&apos;This function returns a Pyramid WSGI application . &apos;
&apos;Determine if the point is inside a loop for the number of points . &apos;
&apos;Create an email based on a student . DCNL : param source _ name : Name of the addon . &apos;
&apos;Returns a generator that yields a SQLAlchemy ORM for the same arguments . DCNL Example : : DCNL &gt; &gt; &gt; from cassandra.query import fill _ gaps ( ) DCNL &gt; &gt; &gt; fill _ gaps ( * * kwargs ) : DCNL ... return ( * * kwargs ) DCNL &gt; &gt; &gt; fill _ gaps ( * * kwargs ) : DCNL ... return ( * * kwargs ) DCNL &gt; &gt; &gt; fill _ gaps ( * * kwargs ) : DCNL ... return ( * * kwargs ) DCNL &gt; &gt; &gt; fill _ gaps ( * * kwargs ) : DCNL ... return ( * * kwargs ) DCNL &gt; &gt; &gt; fill _ gaps ( * * kwargs ) : DCNL ... return ( * * kwargs ) DCNL &gt; &gt; &gt; fill _ gaps ( * * kwargs ) : DCNL ... return ( * * kwargs ) DCNL &gt; &gt; &gt; fill _ gaps ( * * kwargs ) : DCNL ... return ( * * kwargs ) DCNL &gt; &gt; &gt; fill _ gaps ( * * kwargs ) : DCNL ... return ( * * kwargs ) DCNL &gt;
&apos;Add tweets to the specified user . DCNL : param user : The user to send . &apos;
&apos;gradient of the gradient of the expression . DCNL Parameters DCNL x : array _ like DCNL Input variable . DCNL lower _ bound : float DCNL The upper bound of the interval . DCNL upper _ bound : float DCNL The upper bound of the interval . DCNL Returns DCNL Nothing DCNL Examples DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; x = np.array ( &#91; &#91; 1 , 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; grad _ clip ( x , upper _ bound ( x ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; grad _ clip ( x , upper _ bound ( x ) ) DCNL &#91; ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 ,
&apos;Merge a list of tile dictionaries into a list of tiles . &apos;
&apos;Return the contents of a VM DCNL vm _ name DCNL The name of the VM to run DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; virt.hook &lt; vm name &gt; &apos;
&apos;Perform a surface to the surface . DCNL Parameters DCNL intrad : float DCNL The surface to use . DCNL coils : dict DCNL The sphere to use . DCNL coils : dict DCNL The coils . DCNL coils : dict DCNL The coils . DCNL rmag : ndarray , optional DCNL The coils . It should be \ &apos; meg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , DCNL \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , DCNL \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , DCNL \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \ &apos; eeg \ &apos; , \
&apos;Compute ``f * * n`` in ``GF ( p ) &#91; x &#93; `` in ``GF ( p ) &#91; x &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.domains import ZZ DCNL &gt; &gt; &gt; from sympy.polys.galoistools import gf _ pow _ mod DCNL &gt; &gt; &gt; gf _ pow _ mod ( ZZ.map ( &#91; 3 , 2 , 2 , 4 &#93; ) , 5 , ZZ ) DCNL &#91; 3 , 2 , 3 &#93; &apos;
&apos;Given two arrays , compute any overlap between two elements . DCNL The overlap is the same as `x` and `y` . DCNL Args : DCNL x ( ~ chainer.Variable ) : Input variable . DCNL y ( ~ chainer.Variable ) : Input variable . DCNL Returns : DCNL ~ chainer.Variable : Output variable . &apos;
&apos;List the jobs from the jobs cache DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; saltutil.find _ job &lt; job id &gt; &apos;
&apos;Choose multiple options from a list . &apos;
&apos;Compare two versions and return the version number based on the DCNL specified version string . Return None if no version was specified . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.version _ version _ spec &gt; DCNL salt \ &apos; * \ &apos; pkg.version _ version _ spec &gt; &apos;
&apos;Return a list of file descriptors DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; ceph.partition _ list&apos;
&apos;Creates a directory . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; file.mkdir / path / to / link&apos;
&apos;List subscriptions for a project . &apos;
&apos;Returns the indefinite or definite article for the given word . &apos;
&apos;notify _ url _ handler ( request ) - &gt; HttpResponse DCNL Templates : http : / / stackoverflow.com / a / 16630836&apos;
&apos;If a boolean value is None , return True , False otherwise . DCNL Otherwise , return False . &apos;
&apos;Make sure that the correct frame is expected to be correct . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 2671 DCNL https : / / github.com / astropy / astropy / issues / 243&apos;
&apos;Return a random integer . &apos;
&apos;Usage : DCNL has _ staff ( attrname , 54 ) DCNL Only true if accessing _ obj is a staff lock . &apos;
&apos;Given a set of parameters , calculate the referenced objects for each DCNL gyp file . &apos;
&apos;Add test data to test data . DCNL Parameters DCNL data : array _ like DCNL The data data . DCNL Returns DCNL fig : instance of Evoked DCNL The Evoked data . DCNL See Also DCNL test _ evokeds&apos;
&apos; &gt; &gt; &gt; module _ s1 ( 2 ) DCNL &#91; 1 , 2 , 3 , 4 &#93; DCNL &gt; &gt; &gt; module _ s1 ( 2 ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; module _ s1 ( 2 ) DCNL &#91; 1 , 2 , 3 , 4 &#93; &apos;
&apos;Helper function for requests.get ( ) . &apos;
&apos;Run all tests that have to be run in tests . &apos;
&apos;data method , writes data to data register&apos;
&apos;Checks to see if the executable is executable&apos;
&apos;Ensure the option is present in the config . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; trafficserver.option _ present name = ipv6&apos;
&apos;Send a WSGI application to a WSGI app . DCNL Args : DCNL environ : the WSGI environment to validate . DCNL start _ response : HTTP response to send to the application . &apos;
&apos;Attach total points to each object of the queryset . DCNL : param queryset : A Django projects queryset object . DCNL : param as _ field : Attach the points as an attribute with this name . DCNL : return : Queryset object with the additional `as _ field` field . &apos;
&apos;Create an IIS virtual directory . DCNL .. code-block : : yaml DCNL site0-apppool : DCNL win _ iis.remove _ vdir : DCNL - site : site0 DCNL - sourcepath : C : \ inetpub \ site0 DCNL - apppool : site0 DCNL - sourcepath : C : \ inetpub \ site0 DCNL - apppool : site0 DCNL - sourcepath : C : \ inetpub \ site0 DCNL - apppool : site0 DCNL - sourcepath : C : \ inetpub \ site0 DCNL - apppool : site0 DCNL - sourcepath : C : \ inetpub \ site0 DCNL - apppool : site0 DCNL - sourcepath : C : \ inetpub \ site0 DCNL - apppool : site0 DCNL - sourcepath : C : \ inetpub \ site0 DCNL - apppool : site0 DCNL - sourcepath : C : \ inetpub \ site0 DCNL - apppool : site0 DCNL - sourcepath : C : \ inetpub \ site0 DCNL - apppool : site0 DCNL - sourcepath : C : \ inetpub \ site0 DCNL - apppool : site0 DCNL - sourcepath : C : \ inetpub \ site0 DCNL - apppool : site0 DCNL - sourcepath : C : \
&apos;Extra arguments to use when zipline \ &apos; s automated tests run this . &apos;
&apos;Run the tests in the given package . DCNL : param package : The package to run . DCNL : type package : ``list`` of : class : `subprocess.Popen` DCNL : param package : The package to run . DCNL : rtype : list &#91; str &#93; &apos;
&apos;Test rgb to hsl color function&apos;
&apos;Given a NetworkX graph , return a new graph object . DCNL Parameters DCNL A : graph DCNL A NetworkX graph DCNL create _ using : bool , optional DCNL If True , create a new graph for each node in the graph . DCNL Returns DCNL G : NetworkX graph DCNL A NetworkX graph DCNL Raises DCNL NetworkXError DCNL If the graph is not a directed graph . DCNL Examples DCNL &gt; &gt; &gt; from networkx.algorithms import bipartite DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; from _ graph ( G , create _ using = nx.DiGraph ( ) ) DCNL &gt; &gt; &gt; from _ graph ( G , create _ using = nx.DiGraph ( ) ) DCNL &gt; &gt; &gt; from _ graph ( G , create _ using = nx.DiGraph ( ) ) DCNL &gt; &gt; &gt; from _ graph ( G , create _ using = nx.DiGraph ( ) ) DCNL &gt; &gt; &gt; from _ graph ( G , create _ using = nx.DiGraph ( ) ) DCNL &gt; &gt; &gt; print ( d ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt;
&apos;Test whether a tool is a tool shed . &apos;
&apos;Set the partition for a partition DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; partition.set / dev / sda 1 \ &apos; / tmp / \ &apos; &apos;
&apos;Create a URL for a given editable URL . DCNL : param url _ req : an editable url object . DCNL : type url _ req : str DCNL : param default _ url : The default URL to use for the URL . DCNL : type default _ VCS : bool DCNL : return : The parsed url . DCNL : rtype : dict&apos;
&apos;Process the xml element by the manipulationFunction . &apos;
&apos;Filters a sequence of arguments and adds it to the constructor of the DCNL constructor . If you don \ &apos; t use this decorator , you can pass it to the DCNL constructor of the constructor . If you don \ &apos; t have the same arguments , DCNL you can use this decorator . DCNL .. sourcecode : : jinja DCNL { { users &#124; map ( &quot; odd &quot; ) } } DCNL .. sourcecode : : jinja DCNL { { users &#124; map ( &quot; odd &quot; ) } } DCNL .. sourcecode : : jinja DCNL { { users &#124; map ( &quot; odd &quot; ) } } DCNL .. sourcecode : : jinja DCNL { { users &#124; map ( &quot; odd &quot; ) } } DCNL .. sourcecode : : jinja DCNL { { users &#124; map ( &quot; odd &quot; ) } } DCNL .. sourcecode : : jinja DCNL { { users &#124; map ( &quot; odd &quot; ) } } DCNL .. sourcecode : : jinja DCNL { { users &#124; map ( &quot; odd &quot; ) } } DCNL .. sourcecode : : jinja DCNL { { users &#124;
&apos;Ensure that we don \ &apos; t want to build the root entry . &apos;
&apos;Test that there are no newline in the table . DCNL Return the line with no newline . &apos;
&apos;Returns the model \ &apos; s content . DCNL : return : &apos;
&apos;Delete an image location from the request . DCNL Args : DCNL req : HttpRequest object DCNL location _ data : string containing the location of the request DCNL id : string id of the request DCNL Returns : DCNL None&apos;
&apos;Convert a pd.Timedelta to a number of seconds&apos;
&apos;Package purges are not supported , this function is idempotent . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package name &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt;
&apos;Helper function to determine if match item is in a string . DCNL : param n : The number of elements to search for . DCNL : type n : int DCNL : param num : The number of elements to search for . DCNL : type num : int DCNL : return : The match index , or None if no match was found . DCNL : rtype : str&apos;
&apos;Test whether a variable is a Theano vector . &apos;
&apos;Show the details of the minion DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -f show _ key my-azure name = my _ key DCNL salt-cloud -f show _ key my-azure name = my _ key DCNL salt-cloud -f show _ key my-azure name = my _ key DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -f show _ key joyent keyname = mykey&apos;
&apos;Return adjacency representation of a graph . DCNL Parameters DCNL graph : graph DCNL An undirected graph . DCNL directed : bool , optional ( default = False ) DCNL If True , all nodes in the graph will be excluded from the given graph . DCNL Returns DCNL adjacency _ graph : graph DCNL The adjacency matrix of the graph . DCNL Notes DCNL This function returns the adjacency matrix of the graph . DCNL Examples DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; graph = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; graph = nx.complete _ graph ( 5 ) DCNL &gt; &gt; &gt; G.add _ node ( 1 ) DCNL &gt; &gt; &gt; G.add _ node ( 1 ) DCNL &gt; &gt; &gt; G.add _ node ( 1 ) DCNL &gt; &gt; &gt; G.add _ node ( 1 ) DCNL &gt; &gt; &gt; G.add _ node ( 1 ) DCNL &gt; &gt; &gt; G.add _ node ( 1 ) DCNL &gt; &gt; &gt; G.add _ node ( ) DCNL &gt; &gt; &gt; G.add _
&apos;Return a list of name names from the node&apos;
&apos;Returns the matrix X and Y. DCNL Parameters DCNL px : array-like DCNL Discrete probability distribution of random variable X DCNL py : array-like DCNL Discrete probability distribution of random variable X DCNL pxpy : array-like , shape ( n _ samples , ) DCNL The random variable X and Y. DCNL Returns DCNL rho : float DCNL The converged eigenvector&apos;
&apos;Sends a task to the new task . &apos;
&apos;Checks that the given image is available in the given image . &apos;
&apos;Publishes the exploration to DCNL publish _ exploration _ and _ msec . DCNL Args : DCNL committer _ id : str . ID of the committer . DCNL exp _ id : str . ID of the exploration . &apos;
&apos;Compute 1D tensor of 1D convolution . DCNL Args : DCNL inputs : input tensor . DCNL factor : factor . DCNL scope : Optional scope for op _ scope . DCNL Returns : DCNL A UserRPC object . DCNL Raises : DCNL ValueError : if `dim _ ordering` is neither `tf` or `th` . &apos;
&apos;Logout handler , raising an error if it is not an admin . &apos;
&apos;Remove all the files in the command DCNL : param files : Path to the command DCNL : param argv _ max : Maximum number of files to strip DCNL : return : List of strings&apos;
&apos; .. todo : : DCNL WRITEME&apos;
&apos;Clean up HTML links on HTML , removing tags untouched . &apos;
&apos;Reads the object at the given name and returns it . DCNL If the file is not found , returns None . &apos;
&apos;Solve a threshold graph with a given set of labels . DCNL Parameters DCNL labels : RAG DCNL The Region Adjacency Graph . DCNL rag : RAG DCNL The Region Adjacency Graph . DCNL rag : RAG DCNL The Region Adjacency Graph . DCNL in _ place : bool , optional DCNL Whether to normalize the threshold from the graph . &apos;
&apos;Adds a new profile to the user \ &apos; s profile . DCNL Templates : https : / / docs.djangoproject.com / en / dev / dev / Using-the-meetbot-module&apos;
&apos;Display a box box for a given page . DCNL Parameters DCNL context : dict DCNL The source of the box . DCNL source : str DCNL The web page of the box . DCNL text : str DCNL The source area of the box . DCNL show _ help : bool DCNL Show show _ help ( ) for the command line . DCNL show _ help : bool DCNL Show show _ help ( ) for the command line . &apos;
&apos;Computes the L1 norm of a given position DCNL Parameters DCNL vel : array-like DCNL The velocity of the vectors . DCNL Returns DCNL y : array , shape ( n _ samples , n _ features ) DCNL The vector of velocity vectors . DCNL Examples DCNL &gt; &gt; &gt; from sympy import numpy DCNL &gt; &gt; &gt; from sympy import Symbol DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; from sympy import Symbol DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; from sympy import Symbol DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; from sympy import Symbol DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; from sympy import Symbol DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; from sympy import Symbol DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; from sympy import Symbol DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; from sympy import
&apos;Embed data for a resource level . DCNL : return : a tuple of ( name , name , value ) pairs DCNL : rtype : tuple&apos;
&apos;Delete an instance type . &apos;
&apos;Generate an XML file for the given source file . DCNL This is used to determine the file name in the file . DCNL For example : DCNL &gt; &gt; &gt; generate _ module ( &quot; hello &quot; ) DCNL \ &apos; python \ &apos; DCNL &gt; &gt; &gt; generate _ module ( src ) DCNL \ &apos; python \ &apos; DCNL &gt; &gt; &gt; generate _ module ( src ) DCNL \ &apos; python \ &apos; DCNL &gt; &gt; &gt; generate _ module ( src ) DCNL \ &apos; python \ &apos; DCNL &gt; &gt; &gt; generate _ module ( src ) DCNL \ &apos; python \ &apos; DCNL &gt; &gt; &gt; generate _ module ( src ) DCNL \ &apos; python \ &apos; DCNL &gt; &gt; &gt; generate _ module ( src ) DCNL \ &apos; python \ &apos; DCNL &gt; &gt; &gt; generate _ module ( src ) DCNL \ &apos; python \ &apos; DCNL &gt; &gt; &gt; generate _ module ( src ) DCNL \ &apos; python \ &apos; DCNL &gt; &gt; &gt; generate _ module ( src ) DCNL \ &apos; python \ &apos; DCNL &gt; &gt; &gt; generate _ module ( \ &apos; /
&apos;Context manager that creates a new WSGI app with the given app . DCNL Usage : : DCNL with _ set _ overrides ( ) : DCNL ... requests.get ( \ &apos; My Test Site \ &apos; ) : DCNL ... requests.get ( \ &apos; My Test Site \ &apos; ) : DCNL ... requests.get ( \ &apos; My Test Site \ &apos; ) DCNL &gt; &gt; &gt; with set _ state ( ) : DCNL ... requests.get ( \ &apos; My Test Site \ &apos; ) DCNL &gt; &gt; &gt; with set _ state ( ) : DCNL ... requests.get ( \ &apos; My Test Site \ &apos; ) DCNL &gt; &gt; &gt; with .set _ state ( ) : DCNL ... requests.get ( \ &apos; My Test Site \ &apos; ) DCNL &gt; &gt; &gt; with set _ state ( ) : DCNL ... requests.get ( \ &apos; My Test Site \ &apos; ) DCNL &gt; &gt; &gt; with set _ state ( ) : DCNL ... requests.get ( \ &apos; My Test Site \ &apos; ) DCNL &gt; &gt; &gt; with set _ state ( ) : DCNL ... requests.get ( \ &apos; My Test Site \
&apos;Returns a list of supported languages . &apos;
&apos;Check if a uri looks like a valid URI . DCNL Args : DCNL uri : str , URI to validate . DCNL Returns : DCNL True if the uri looks like a valid URI , False otherwise . &apos;
&apos;Build a new model for a specific model . DCNL We use the same as : func : ` ~ chainer.cuda.memoize` to generate a new DCNL model with the same size as the same size . DCNL Parameters DCNL net : Model instance DCNL A dictionary containing the following format : DCNL 1 , 2 , 3 , 3 , 3 , 4 , 3 , 4 , 4 , 5 , 3 , 4 , 5 , 3 , 4 , 5 , 3 , 4 , 5 , 3 , 4 , 5 &#93; DCNL net _ size : int , optional DCNL The number of time units to use . Default is 0 . DCNL Returns DCNL res : dict DCNL A dictionary with the following keys : DCNL 1 , 2 , 3 , 3 , 3 , 2 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 4 , 3 , 3 , 3 , 3 , 3 , 4 , 3 , 3 , 3 , 3 , 4 , 3 , 3 , 3 , 4 , 3 , 3 , 4 ,
&apos;Return the ssh _ interface type to connect to . Either \ &apos; public _ ips \ &apos; ( default ) DCNL or \ &apos; public _ ips \ &apos; . &apos;
&apos;Return the configured vm DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; virt.get _ cloud &lt; vm name &gt; &apos;
&apos;Computes the dot product of a sparse matrix . DCNL Parameters DCNL x : array _ like DCNL A sparse matrix . DCNL y : { array-like , sparse matrix } , shape ( n _ samples , n _ features ) DCNL The sparse matrix . DCNL grad _ sparse : bool DCNL Whether or not the sparse matrix should be dense . DCNL Returns DCNL sparse _ matrix : sparse matrix DCNL The dot product of the sparse matrix . DCNL Notes DCNL The grad implemented is structured . &apos;
&apos;Parse the owner of a string using the given type . DCNL Args : DCNL type ( str ) : type to be parsed DCNL options ( dict ) : options string to be parsed DCNL fatal ( bool ) : If true , don \ &apos; t do anything . DCNL Returns : DCNL string ( str ) : The owner of the owner . &apos;
&apos;Parse an xml string . DCNL Args : DCNL xml _ string : A string containing the default xml string . &apos;
&apos;Get the domain of the Linux distribution DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; system.set _ release \ &apos; Local Area Connection \ &apos; &apos;
&apos;Get all Subscription objects for the given project . DCNL : param project : The project . DCNL : return : A list of UUIDs . &apos;
&apos;Given a function , return a tuple of ( x , y ) tuples . DCNL Parameters DCNL function : function DCNL The function to create . DCNL x : array _ like DCNL Input array . DCNL y : array _ like , shape ( n _ samples , ) DCNL The y values . DCNL Returns DCNL d : array , shape ( n _ samples , n _ features ) DCNL The array of values in x and y . &apos;
&apos;Turn an iterable of elements into a list of columns . DCNL Examples DCNL &gt; &gt; &gt; from sympy import pprint DCNL &gt; &gt; &gt; from sympy.abc import A , b DCNL &gt; &gt; &gt; a = ( \ &apos; a \ &apos; , 2 ) , ( \ &apos; a \ &apos; , 2 ) , ( \ &apos; a \ &apos; , 2 ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; b \ &apos; , 1 ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos;
&apos;Get the URL for a particular project . DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; postgres.api _ view
&apos;Given a name of a release group , remove the groups in the DCNL release group . DCNL Parameters DCNL name : str DCNL The name of the release group . DCNL Returns DCNL non _ release _ groups : str DCNL The name of the release group . DCNL Examples DCNL &gt; &gt; &gt; remove _ non _ release _ groups ( \ &apos; ch \ &apos; ) DCNL \ &apos; ch \ &apos; DCNL &gt; &gt; &gt; remove _ non _ release _ groups ( \ &apos; ch \ &apos; ) DCNL \ &apos; ch \ &apos; DCNL &gt; &gt; &gt; remove _ non _ release _ groups ( \ &apos; ch \ &apos; ) DCNL \ &apos; ch \ &apos; DCNL &gt; &gt; &gt; remove _ non _ release _ groups ( \ &apos; ch \ &apos; ) DCNL \ &apos; ch \ &apos; DCNL &gt; &gt; &gt; remove _ non _ release _ groups ( \ &apos; ch \ &apos; ) DCNL \ &apos; ch \ &apos; DCNL &gt; &gt; &gt; remove _ non _ release _ groups ( \ &apos; ch \ &apos; ) DCNL \ &apos; ch \ &apos; DCNL &gt; &gt; &gt; remove
&apos;Return whether ``obj`` is a file-like object . &apos;
&apos;Returns a list of ( scheme , port ) tuples , which are accessible as a two-tuple . DCNL ( None , None ) , or None if there is a two-tuple of ( username , port ) . DCNL Otherwise , returns None . &apos;
&apos;Change the name of a temporary file to a temporary file . DCNL If the input is not a temporary file , it will be created . &apos;
&apos;Converts a string to HTML ( or all ) of plain text . &apos;
&apos;very nice python implementation of : class : `ArrowFactory &lt; arrow.factory.ArrowFactory &gt; ` ``get`` . &apos;
&apos;Get logger by name . DCNL Args : DCNL name : The name of the logger . &apos;
&apos;overwrite _ database ( db , coords ) - &gt; dict ( db _ id , coords ) &apos;
&apos;Return the L1 distance of a matrix . DCNL Regression test for https : / / github.com / numba / numba / issues / 381&apos;
&apos;Get the path directory path . &apos;
&apos;Simple view to echo back info about uploaded files for tests . &apos;
&apos;Set a connection to manager that can be used to communicate with a DCNL socket . DCNL Registers the connection to the socket , if necessary . DCNL @ type socket : C { str } DCNL @ param socket : The socket to write to . DCNL @ type conn : L { dict } DCNL @ return : A tuple of ( name , connection ) . DCNL @ rtype : dict&apos;
&apos;A version of Python \ &apos; s urllib.quote _ plus ( ) function that can operate on DCNL unicode strings . This can be used as a subsequent iri _ to _ uri ( ) call DCNL without double-quoting occurring . &apos;
&apos;This function takes a mock object and returns it as a generator . DCNL : param mock : a mock object . DCNL : param read _ data : ( optional ) Dictionary , bytes , or file-like object to read from . DCNL : param read _ data : DCNL A function that takes a keyword argument and returns it . &apos;
&apos;Parses a UTC date and return a UTC date string . DCNL If no timezone is specified , the UTC time is used . DCNL : param raw : Date to use in UTC . DCNL : param assume _ utc : if True , use a UTC datetime in UTC . DCNL : param as _ utc : If True , use the UTC timezone in UTC . DCNL : return : the parsed date , or None if no date is found . &apos;
&apos;Get all the actions for the given list of possible actions . DCNL Parameters DCNL order : scalar ( int , ndim = 1 ) DCNL The index of the list of the actions . DCNL base : scalar ( int ) DCNL The index of the form of the list . DCNL Returns DCNL languages : ndarray ( float , ndim = 1 ) DCNL Array of all the actions in the list . DCNL Examples DCNL &gt; &gt; &gt; from blaze import symbol DCNL &gt; &gt; &gt; from blaze import symbol DCNL &gt; &gt; &gt; x = np.array ( &#91; &#91; 1 , 2 , 3 &#93; , &#91; 2 , 4 &#93; &#93; ) DCNL &gt; &gt; &gt; list ( get _ datetime _ actions ( &#91; 1 , 2 , 4 &#93; ) ) DCNL &#91; ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) ,
&apos;Make sure the \ &apos; name \ &apos; parameter can be used as a \ &apos; + \ &apos; &apos;
&apos;Downloads an existing device from the master and push it to the server . DCNL This is done by the : py : func : ` ~ ckanext.datastore.logic.action.datastore _ download _ file` . DCNL This function is intended to be called from the master config . DCNL : param data : The data to be sent to the server . DCNL : param session : The session to use for the server . DCNL : returns : A tuple of ( device _ key , local _ key ) where the data is being updated DCNL on the server . &apos;
&apos;Gets the auth token for the current user . DCNL Args : DCNL user ( User ) : The user to retrieve the auth token for . DCNL Returns : DCNL A dictionary containing the keys of the auth token . &apos;
&apos;Modify a monitor . DCNL hostname DCNL The host / address of the bigip device DCNL username DCNL The iControl REST username DCNL password DCNL The iControl REST password DCNL monitor _ type DCNL The type of monitor to modify DCNL name DCNL The name of the monitor to modify DCNL name DCNL The name of the monitor to modify DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; bigip.modify _ monitor bigip admin admin my-pool 10.2.2.1 : 80&apos;
&apos;Create a sample from a model for a given platform&apos;
&apos;Test that an error message is raised . &apos;
&apos;Get the text of an object \ &apos; s text . DCNL Parameters DCNL ob : object DCNL The object to get the text for . DCNL Returns DCNL text : str DCNL The text of the object . &apos;
&apos;Wrapper for allowing delivery of .load command via PM&apos;
&apos;Try to return a string from C { fmtString } and C { fmtString } and C { fmtDict } . DCNL @ param fmtString : The C { unicode } -format string to use . DCNL @ type fmtDict : C { str } DCNL @ return : A string representation of C { fmtString } and C { fmtString } and C { fmtDict } . DCNL @ rtype : L { str } &apos;
&apos;Get the arounds from the loop , if it doesn \ &apos; t exist . &apos;
&apos;Returns a list of all the MAC addresses . DCNL Args : DCNL n ( str ) : The name of the client to get . DCNL Returns : DCNL A list of the IP addresses . &apos;
&apos;Build an HTTP error message to stderr . &apos;
&apos;definition : LITERAL&apos;
&apos;Initialize the clipboard \ &apos; s settings . DCNL Return the clipboard settings . &apos;
&apos;Find the setup class of the decorated class . DCNL This function will only be used to setup the fixtures of the DCNL decorated function . DCNL Parameters DCNL func _ item : str DCNL The class to attach to the decorated function . DCNL Returns DCNL setup : callable DCNL The class that will be used to the decorated function . &apos;
&apos;Return all unique elements in elems but preserving order . &apos;
&apos;Updates cohort settings for a course . DCNL Arguments : DCNL course : A CourseCohortSettings object . DCNL Returns : DCNL A CourseCohortSettings object . DCNL Raises : DCNL ValueError : if cohort is invalid . &apos;
&apos;Creates the reverse URL for the given app . DCNL Usage : : DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { % app _ reverse % } DCNL { %
&apos;Takes an HTTP header header and returns the headers of the header DCNL header . &apos;
&apos;Ensure that the specified path exists DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; lxc.create _ exists name&apos;
&apos;Converts a shell-like wildcard pattern to a regular expression . DCNL This function converts the regex into a string that can be converted to DCNL a single string . &apos;
&apos;Read and save the file and save it into the file format . DCNL This is useful for debugging . DCNL Parameters DCNL G : file or file-like object DCNL The file to send the data to . DCNL Filenames ending in .gz or .bz2 will be compressed . DCNL filename : string , optional DCNL The name of the file to save . DCNL Returns DCNL data : dict DCNL A dictionary with the data in the format : DCNL &#91; \ &apos; secret \ &apos; , \ &apos; secret \ &apos; &#93; , ( \ &apos; secret \ &apos; , \ &apos; secret \ &apos; ) &#93; &apos;
&apos;adjust correlation matrix to 1D DCNL Parameters DCNL corr _ vec : ndarray DCNL correlation matrix DCNL param _ p _ val : int DCNL val _ val _ val : int DCNL num _ permutations : int DCNL number of permutations to be written DCNL num _ permutations : int DCNL the number of permutations to be written DCNL num _ permutations : int DCNL the number of permutations to be written DCNL num _ permutations : integer DCNL the number of permutations to be converted DCNL num _ permutations : int DCNL the number of permutations to be converted DCNL num _ permutations : int DCNL the number of permutations to be converted DCNL num _ permutations : integer DCNL the number of permutations to be converted DCNL num _ permutations : int DCNL the number of permutations to be converted DCNL num _ permutations : integer DCNL the number of permutations to be converted DCNL num _ permutations : integer DCNL the number of permutations to be converted DCNL num _ permutations : integer DCNL the number of permutations to be converted DCNL num _ permutations : integer DCNL the number of permutations to be written
&apos;Check that the .mark _ done \ &apos; s done in .mark _ done ( ) . &apos;
&apos; &gt; &gt; &gt; dict _ union ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; dict _ union ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; dict _ union ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; dict _ union ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos;
&apos;Return True if the named service is disabled , false otherwise DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.disabled &lt; service name &gt; &apos;
&apos;Args : DCNL path _ generator ( str ) : Path to which path to be copied to the target directory . DCNL target _ predicate ( list ) : Path to target directory which should be used . DCNL target _ args ( list &#91; str &#93; ) : Path to target directory . DCNL extra _ paths ( list ) : list of paths to pass to the target directory . DCNL extra _ paths ( list ) : List of extra paths to pass to the target directory . DCNL Returns : DCNL path ( str ) : Path to the target path to `target` . &apos;
&apos; .. versionadded : : 2016.3.0 DCNL Return monit configuration DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; monit.reload&apos;
&apos;Update the review request ID for the current site . DCNL : param site _ id : The ID of the current site to update . DCNL : return : A tuple of ( status _ id , status _ id , status _ id ) &apos;
&apos;This is a helper for : meth : `frape.cache` DCNL : param r : a recipe id DCNL : param name : the name of the resource DCNL : param attr : the name of the resource DCNL : return : True if the changes succeeded . DCNL : rtype : bool&apos;
&apos;Tries to find the module from a module . DCNL Parameters DCNL module : module DCNL The module to find . DCNL paths : list , optional DCNL The path to the module to search for . DCNL Returns DCNL module : str DCNL Path to the module . &apos;
&apos;Args : DCNL doc ( dict ) : doc string DCNL meta ( dict ) : metadata dictionary DCNL format _ data ( dict ) : report data DCNL Returns : DCNL dict ( dict ) : dictionary containing column titles and values in the docs&apos;
&apos;Create an RPC object for the given deadline in seconds . DCNL Args : DCNL deadline : Optional deadline in seconds for the operation ; the default DCNL is a system-specific deadline ( typically 5 seconds ) . DCNL callback : Optional callable to invoke on completion . DCNL Returns : DCNL An apiproxy _ stub _ map.UserRPC object specialized for this service . &apos;
&apos;Attempt to find the default access key for comprehensive theming . &apos;
&apos;Verifies that a model is accessed . DCNL : param descriptor : A model descriptor . DCNL : param timeout : The timeout in which to cache the model . DCNL : return : A SQLAlchemy model object . &apos;
&apos;Turn all sequences to tuples in the given sequence . &apos;
&apos;Method to run a bug in a thread . &apos;
&apos; .. todo : : DCNL WRITEME&apos;
&apos;Light version of C { _ _ indexer _ _ } , but it \ &apos; s not in the same DCNL method . DCNL Parameters DCNL val : str DCNL The expected type of the test . DCNL opitonal : list DCNL A list of integers that can be used to construct the DCNL expression . DCNL Examples DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt; import numpy as np DCNL &gt; &gt; &gt;
&apos;Retrieves the account \ &apos; s account DCNL : param str name : The name of the account DCNL : return : The created account DCNL : rtype : str DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; shadow.get _ account _ created name&apos;
&apos;Return the information for a given IP address . DCNL This can be used to determine the user \ &apos; s release . DCNL For example : DCNL http : / / www.debian.org / doc / blob / master / issues / 63248.aspx DCNL : param str ip : the name of the profile DCNL : param str ip : the name of the profile DCNL : returns : a string containing the profile information DCNL : rtype : tuple DCNL : returns : The information about the profile DCNL : rtype : str DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; win _ smtp _ server.get _ ip _ name \ &apos; \ &apos; DCNL salt \ &apos; * \ &apos; win _ smtp \ &apos; Local Area Connection \ &apos; &apos;
&apos;Auto Generate a Layer . DCNL This is a simple way to provide a custom value for a layer in the DCNL model . DCNL This is useful for debugging purposes , in order to provide a DCNL simple way to provide a model in the database . DCNL Example : : DCNL &gt; &gt; &gt; from lasagne.layers import InputLayer , DenseLayer DCNL &gt; &gt; &gt; x = InputLayer ( ( 5 , 5 , 5 ) ) DCNL &gt; &gt; &gt; print ( x ) DCNL 3 DCNL &gt; &gt; &gt; x = InputLayer ( ( 5 , 5 , 5 ) ) DCNL &gt; &gt; &gt; print ( x ) DCNL 3 DCNL &gt; &gt; &gt; x = InputLayer ( ( 5 , 5 ) ) DCNL &gt; &gt; &gt; print ( x ) DCNL 3 DCNL &gt; &gt; &gt; x = InputLayer ( ( 5 , 5 ) ) DCNL &gt; &gt; &gt; print ( x ) DCNL 3 DCNL &gt; &gt; &gt; print ( x ) DCNL 3 DCNL &gt; &gt; &gt; x = InputLayer ( ( 5 , 5 ) ) DCNL &gt; &gt; &gt; print ( x ) DCNL 3 DCNL &gt; &gt;
&apos;Always return False . DCNL @ param path : The path to the filesystem . DCNL @ type path : C { str } DCNL @ return : C { False } if the filesystem is not a symbolic link . DCNL @ rtype : L { bool } &apos;
&apos;generate ( random _ func , randfunc : callable ) : callable DCNL Function to generate a random string of bits . DCNL If randfunc is omitted , then Random.new ( ) .read is used . &apos;
&apos;Filters the contents of a block . DCNL Sample usage : : DCNL { % filter escape % } DCNL { % endfilter % } &apos;
&apos;Replace text with \ &apos; to _ row \ &apos; with \ &apos; to _ row \ &apos; with \ &apos; to _ row \ &apos; . &apos;
&apos;Factorization of the input array with respect to the right axis . DCNL Parameters DCNL x : array _ like DCNL Input array . DCNL k : int DCNL The number of columns in the array . DCNL Returns DCNL x : array _ like DCNL The array with the same shape as x . &apos;
&apos;Given a URL , return the URL for the given URL . DCNL @ param url : The URL to get the URL for . DCNL @ type url : str DCNL @ return : The URL . DCNL @ rtype : L { str } &apos;
&apos;Return true if \ &apos; source \ &apos; is newer than the target \ &apos; source \ &apos; . DCNL Raises DistutilsFileError if \ &apos; source \ &apos; doesn \ &apos; t exist . &apos;
&apos;Restores the course \ &apos; s pci _ location ( if it \ &apos; s available ) &apos;
&apos;Makes a normal encoder . DCNL @ param dict : A L { dict } object . DCNL @ type dict : L { dict } DCNL @ param indent : If True , the encoding will be converted to a string . DCNL @ type indent : bool DCNL @ return : A L { dict } representation of the normal L { dict } . DCNL @ rtype : L { dict } &apos;
&apos;A wrapper around : meth : `url _ decode` but decodes a stream . DCNL : param stream : the stream to be decoded DCNL : param charset : the charset to be used DCNL : param decode _ empty : if True , return the iterator over the given DCNL : class : `sorted` documentation . &apos;
&apos;Deletes the specified subnet DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; neutron.delete _ subnet subnet-name DCNL : param subnet : ID or name of subnet to delete DCNL : param profile : Profile to build on ( Optional ) DCNL : return : True ( Succeed ) or False&apos;
&apos;Alias for a container DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; daemontools.pid &lt; pid name &gt; &apos;
&apos;Returns total LUN ID for LUN IDs . &apos;
&apos;Create a copy of the original object and asserts that it DCNL does not match the original object . DCNL : param original : the original object DCNL : param match : the original object DCNL : return : The new instance&apos;
&apos;Return a list of all top jobs that match the minion DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; docker.top &lt; minion id &gt; &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 4098&apos;
&apos;Execute self-command line . DCNL This function is meant to be called before running in the future . DCNL This function is meant to be called before running in the future . DCNL This function is meant to be used in conjunction with ``register _ command _ options ( ) DCNL instead of doing anything . &apos;
&apos;Evaluate the given value at the given p and p . DCNL This function is the same as the : py : func : ` ~ p` DCNL : param z : z to be converted DCNL p : array _ like DCNL : param k : number of points DCNL : type k : int DCNL : param fs : the number of points DCNL : type fs : array _ like DCNL : return : the transfer function DCNL : rtype : array _ like ( float , float ) &apos;
&apos;Remove the tests \ &apos; s configuration . &apos;
&apos;Formats a date as a human friendly representation of a release . &apos;
&apos;Try to find the position of a line in the given depth . DCNL Parameters DCNL line : int DCNL The line of the line DCNL depth : int DCNL The depth of the line DCNL Returns : DCNL True if the line is the same , False otherwise . DCNL Raises : DCNL ValueError : if the line is not a fixed position . &apos;
&apos;Returns the URL to the login view of the login view . &apos;
&apos;Computes the eigenvalues of the given toolbox by the given toolbox . DCNL This is a helper function that computes the union of the nodes DCNL of the given toolbox by the given toolbox by the DCNL longuest sequence . DCNL Parameters DCNL population : sequence DCNL A dictionary of lists of rows and values . DCNL rows : list of lists DCNL A dictionary of values for each row . DCNL function : callable DCNL A dictionary of values to be used as the values of the nodes . DCNL Yields : DCNL A list of lists of lists of values that are the same shape as the DCNL dictionary of the values . The values are the same as the DCNL probability of each entry in the list of values . DCNL Examples DCNL &gt; &gt; &gt; from networkx.algorithms import bipartite DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; B = { \ &apos; A \ &apos; : 1 , \ &apos; c \ &apos; : 1 , \ &apos; c \ &apos; : 1 , \ &apos; c \ &apos; : 1 , \ &apos; c \ &apos;
&apos;Like repr ( ) , but UTF-8-encodes Unicode if necessary . &apos;
&apos;Register a method to be used as a method . DCNL : param response _ type : The API method to decorate . DCNL : param add _ api _ doc : The type of the API method to decorate . DCNL : param add _ api _ doc : The type of the API method to use . DCNL : returns : The decorated method . DCNL : rtype : : class : ` ~ google.cloud.logging.client.Client` DCNL : param response _ type : The API method to decorate . DCNL : type add _ api _ doc : : class : `Request` . DCNL : param add _ api _ doc : The type of the API method to use . DCNL : returns : The decorated method . DCNL : rtype : : class : `Response` DCNL : returns : The decorated method . &apos;
&apos;Build the hardware \ &apos; s line to a human readable format . DCNL Return None if the compiler is not formatted . &apos;
&apos;Parse date into ISO 8601 format . DCNL : param dt : datetime object DCNL : type dt : datetime DCNL : return : Tuple of ( date , date , date ) pairs DCNL : rtype : tuple&apos;
&apos;Creates a new instance . DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ iam.create _ image myinstance&apos;
&apos;Compute the sentence \ &apos; s sentence \ &apos; s sentence . DCNL See http : / / en.wikipedia.org / wiki / Edgeworth _ sentence / DCNL http : / / en.wikipedia.org / wiki / Edgeworth _ sentence DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; sentences _ i = &#91; ( 1 , 2 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , (
&apos;Check if we \ &apos; re running in Python 2 . DCNL Returns : DCNL True if we \ &apos; re running , False otherwise . &apos;
&apos;run _ script ( ) host ( host ) &apos;
&apos;Add a cohort to a course . DCNL Arguments : DCNL course _ key ( CourseKey ) : The course key to add . DCNL name ( str ) : Name of the course to add . DCNL assignment _ type ( str ) : The type to add to . DCNL Returns : DCNL A CourseCohortSettings object . DCNL Raises : DCNL ValueError : if a cohort is invalid . &apos;
&apos; .. versionadded : : 2015.8.0 DCNL Delete an affinity group associated with the account DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -f delete _ affinity _ group my-azure name = my _ group my-azure name = my _ group&apos;
&apos;Sampling version of univariate series . DCNL References DCNL .. &#91; 1 &#93; Zhang , Shanjie and Jin , Jianming . &quot; Computation of Special DCNL Functions &quot; , John Wiley and Sons , 1996 , chapter 5 . DCNL http : / / jin.ece.illinois.edu / specfunc.html DCNL .. &#91; 2 &#93; NIST Digital Library of Mathematical Functions . DCNL http : / / en.wikipedia.org / wiki / Power _ solvers.py DCNL References DCNL .. &#91; 1 &#93; Zhang , Shanjie and Jin , Jianming . &quot; Computation of Special DCNL Functions &quot; , John Wiley and Sons , 1996 , chapter 5 . DCNL http : / / jin.ece.illinois.edu / specfunc.html DCNL .. &#91; 2 &#93; NIST Digital Library of Mathematical Functions . DCNL http : / / en.wikipedia.org / wiki / Power _ solvers.py DCNL Examples DCNL &gt; &gt; &gt; from sympy import sqrt DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; from sympy import sqrt DCNL &gt; &gt; &gt; from sympy import sqrt DCNL &gt; &gt; &gt; from sympy import sqrt DCNL &gt; &gt; &gt; from sympy import sqrt DCNL &gt; &gt; &gt; from sympy.abc import x DCNL
&apos;When a user has been deleted at the end of the user , we update DCNL the user \ &apos; s answers to the user \ &apos; s answers . &apos;
&apos;Interpolate peak signal using parabolic interpolation DCNL mX , pX : magnitude and phase spectrum , ploc : locations of peaks DCNL returns iploc , ipmag , ipphase : interpolated peak value , magnitude and phase values&apos;
&apos;Parse the encoding of the given file path . DCNL Returns a tuple of ( filename , line _ line , line _ line ) . &apos;
&apos;Ignore CTRL + C ( SIGINT ) . &apos;
&apos;Create the temporary directory for the given temporary directory . DCNL This is useful when you want to create a temporary directory . DCNL : param str suffix : Path to the directory to create . DCNL : param prefix : Optional prefix for the temporary directory . DCNL : param parent : Optional prefix for the temporary directory . DCNL : param parent : The parent directory to use for the temporary directory . DCNL : returns : The temporary directory . DCNL : rtype : str DCNL : returns : The temporary directory . DCNL : rtype : : class : `twisted.python.filepath.FilePath`&apos;
&apos; : param dir : The directory to write the directory to DCNL : param ext : the extension to use DCNL : returns : The path to the directory tree DCNL : rtype : str&apos;
&apos;cyclic _ pattern ( size , start = None , start = None ) - &gt; ( start , end ) DCNL &gt; &gt; &gt; cyclic _ pattern ( \ &apos; http : / / de.wikipedia.org / wiki / Elf ( Begriffskl \ xe4rung ) \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; cyclic _ pattern ( \ &apos; http : / / de.wikipedia.org / wiki / Elf ( Begriffskl \ xe4rung ) \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; cyclic _ pattern ( \ &apos; http : / / de.wikipedia.org / wiki / Elf ( Begriffskl \ xe4rung ) \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; cyclic _ pattern ( \ &apos; http : / / de.wikipedia.org / wiki / Elf ( Begriffskl \ xe4rung ) \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; cyclic _ pattern ( \ &apos; http : / / de.wikipedia.org / wiki / Elf ( Begriffskl \ xe4rung ) \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; cyclic _ pattern (
&apos;Plots x . DCNL xs : sequence of values DCNL ys : sequence of values DCNL options : keyword args passed to pyplot.bar&apos;
&apos;Serialize the given object to a Pandas DataFrame . DCNL Parameters DCNL obj : object DCNL The object to dump . DCNL fp : str , optional DCNL The file-like object to dump . DCNL dtype : bool , optional DCNL If True , don \ &apos; t need to be pretty-printed with the default value . DCNL default _ bool : bool , optional DCNL If True , don \ &apos; t overwrite any errors . DCNL default _ bool : bool , optional DCNL If True , don \ &apos; t overwrite any errors . Default is True . DCNL default _ bool : bool , optional DCNL If True , don \ &apos; t overwrite any errors . Default is True . DCNL default _ bool : bool , optional DCNL If True , don \ &apos; t overwrite any errors . Default is True . DCNL default _ bool : bool , optional DCNL If True , don \ &apos; t overwrite any errors . DCNL default _ bool : bool , optional DCNL If True , don \ &apos; t overwrite any errors . DCNL default _ bool : bool , optional DCNL If True
&apos;Replaces leading and trailing whitespace characters in text . DCNL Also strips leading and trailing whitespace . DCNL : param text : text to encode DCNL : param sep : the string to be converted DCNL : return : sanitized string DCNL : rtype : str&apos;
&apos;Returns a list of characters from a string , starting with punctuation . DCNL &gt; &gt; &gt; find _ email ( \ &apos; Hello , world ! \ &apos; ) DCNL u \ &apos; A \ &apos; DCNL &gt; &gt; &gt; find _ email ( \ &apos; A \ &apos; ) DCNL u \ &apos; A \ &apos; DCNL &gt; &gt; &gt; find _ email ( u \ &apos; A \ &apos; ) DCNL u \ &apos; A \ &apos; DCNL &gt; &gt; &gt; find _ email ( u \ &apos; A \ &apos; ) DCNL u \ &apos; A \ &apos; DCNL &gt; &gt; &gt; find _ email ( u \ &apos; A \ &apos; ) DCNL u \ &apos; A \ &apos; DCNL &gt; &gt; &gt; find _ email ( u \ &apos; A \ &apos; ) DCNL u \ &apos; A \ &apos; DCNL &gt; &gt; &gt; find _ email ( u \ &apos; A \ &apos; ) DCNL u \ &apos; A \ &apos; DCNL &gt; &gt; &gt; find _ email ( u \ &apos; A \ &apos; ) DCNL u \ &apos; A \ &apos; DCNL &gt; &gt; &gt; find _ email ( \ &apos;
&apos;Return the current record of a ratelimit for the given key _ prefix . DCNL If time _ slice is None , the default is returned . &apos;
&apos;Create and return an image based on a video sensor . DCNL : param vif : The video sensor configuration to use . DCNL : param config : The configuration file . DCNL : param add _ devices : The description of the notification . DCNL : param add _ devices : The description of the notification . &apos;
&apos;Watch / unwatch a user ( based on \ &apos; watch \ &apos; ) . &apos;
&apos;Returns a boolean of whether or not a flag is disabled , False otherwise . &apos;
&apos;Robust estimation of a fundamental matrix G DCNL correspondences using RANSAC ( ransac.py from DCNL http : / / www.scipy.org / Cookbook / RANSAC ) . DCNL fp : distance matrix from hom. coordinates . &apos;
&apos;Shortens a string to the specified number of characters . &apos;
&apos;Tests to see if the mouse click events will be used . &apos;
&apos;A helper to get a list of expected types of expected type of DCNL https : / / github.com / astropy / astropy / pull / 1953 DCNL https : / / github.com / astropy / astropy / pull / 891&apos;
&apos;script _ fp : input file object DCNL response _ fp : output directory DCNL response _ name : string ( optional ) DCNL output _ dir : file name to write to DCNL output _ dir : string ( optional ) DCNL output _ dir : \ &apos; \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; html \ &apos; , \ &apos; jake \ &apos; , \ &apos; html \ &apos; , \ &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 4612&apos;
&apos;Get the browser , based on the server \ &apos; s browser , based on the server DCNL of the server . DCNL Args : DCNL browser : the location of the server \ &apos; s browser DCNL update _ app : the location of the browser DCNL order : the order of the browser ( defaults to os.environ ) . DCNL Returns : DCNL The requested browser , or None if no browser is found . &apos;
&apos;Wait until a given timeout is reached . DCNL : param reactor : The reactor . DCNL : param deferred : A callable that returns a callable . DCNL : param timeout _ sec : The maximum value of the timeout . DCNL : param reason : The reason to wait for the timeout . &apos;
&apos;Convert a row row into a JSON representation of the given row . DCNL For example : : DCNL &gt; &gt; &gt; row = { \ &apos; field \ &apos; : \ &apos; field \ &apos; } DCNL &gt; &gt; &gt; row _ from _ json ( row , row ) DCNL { \ &apos; field \ &apos; : 2 , \ &apos; data \ &apos; : 1 , \ &apos; data \ &apos; : 1 , \ &apos; data \ &apos; : 1 , \ &apos; data \ &apos; : 2 } DCNL &gt; &gt; &gt; row _ from _ json ( row , \ &apos; row \ &apos; ) DCNL \ &apos; dog \ &apos; DCNL &gt; &gt; &gt; row _ from _ json ( row ) DCNL { \ &apos; field \ &apos; : 2 , \ &apos; data \ &apos; : 1 , \ &apos; data \ &apos; : 1 , \ &apos; data \ &apos; : 1 , \ &apos; data \ &apos; : 2 } DCNL &gt; &gt; &gt; row _ from _ json ( row , \ &apos; field _ data \ &apos; ) DCNL \ &apos; dog \ &apos; DCNL &gt; &gt;
&apos;Return the contents of the CIX content in a CIX content . DCNL Raises an exception if the CIX content could not be found . &apos;
&apos;Turns an issue status code , returning a human-readable status string . DCNL This is meant to be used in the issue where we \ &apos; re doing the issue with DCNL an issue . &apos;
&apos;Smoke test that a graph involving a BatchNormalizedMLP transforms . DCNL This function creates a new array that can be used as a graph DCNL that can be used to create a graph with a different number of DCNL integers . DCNL Regression test for https : / / github.com / astropy / astropy / pull / 4042&apos;
&apos;Remove trailing trailing trailing whitespace from the content . &apos;
&apos;If the exit status is empty , it will exit if the parent is empty . If DCNL the exit status is empty , it will exit if the parent is empty . &apos;
&apos;Return a list of instances objects by name _ filter . DCNL Example : DCNL &gt; &gt; &gt; instances _ by _ name ( \ &apos; MyClass \ &apos; ) DCNL ( \ &apos; instances \ &apos; , \ &apos; instances \ &apos; ) DCNL &gt; &gt; &gt; instances _ by _ name ( \ &apos; instances _ name _ name \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; instances _ by _ name ( \ &apos; instances _ name _ name \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; instances _ by _ name ( \ &apos; instances _ name \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; instances _ by _ name ( \ &apos; instances _ name \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; instances _ by _ name ( \ &apos; instances _ name \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; instances _ by _ name ( \ &apos; instances _ name \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; instances _ by _
&apos;Generates sequence of xs and ps for a given alpha value . DCNL xmin : float DCNL high : float DCNL high : float DCNL high : float DCNL high : float DCNL high : float DCNL high : float DCNL Returns : float&apos;
&apos;Check if the named dependency is installed . DCNL : return : True if successful , otherwise False . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkgutil.check _ apt
&apos;Update the original loaders . DCNL This will preserve the original loaders . DCNL : param z : The original loaders . DCNL : return : The original loaders . &apos;
&apos;Converts all word ids to ids . DCNL : param data : data to be tokenized DCNL : type data : str DCNL : param id _ to _ word : id of the word DCNL : type id _ to _ word : str DCNL : return : DCNL : rtype : list&apos;
&apos;Compute Hilbert transform of a linear transform . DCNL Parameters DCNL x : array _ like DCNL Dependent values . DCNL Returns DCNL out : ndarray , shape ( n _ samples , n _ features ) DCNL The transformed data . DCNL Notes DCNL This function computes the linear Fourier transform of the sum of DCNL the two points . DCNL References DCNL .. &#91; 1 &#93; Zhang , Shanjie and Jin , Jianming . &quot; Computation of Special DCNL Functions &quot; , John Wiley and Sons , 1996 , chapter 5 . DCNL http : / / jin.ece.illinois.edu / specfunc.html DCNL .. &#91; 2 &#93; Zhang , Shanjie and Jin , Jianming . &quot; Computation of Special DCNL Functions &quot; , John Wiley and Sons , 1996 . DCNL http : / / jin.ece.illinois.edu / specfunc.html&apos;
&apos;Test installing a package with the correct target of the local package DCNL if it doesn \ &apos; t exist . DCNL Refs https : / / github.com / pypa / pip / issues / 326&apos;
&apos;Check a valid certificate check for a given var . DCNL This is a convenience method for generating a valid URL for a DCNL certificate . DCNL Parameters DCNL var : str DCNL The name of the application to check . DCNL x : str DCNL The name of the application to check . DCNL Returns DCNL valid : bool DCNL True if the raw data is valid , False otherwise . &apos;
&apos;Returns the list of all nodes in the graph . DCNL Parameters DCNL G : NetworkX graph DCNL source : node , optional DCNL Ending node for node DCNL cutoff : integer , optional DCNL Depth to stop the node . DCNL return _ label : list , optional DCNL Depth to stop the search . DCNL Returns DCNL list : list DCNL List of nodes in the graph . DCNL Examples DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; d = nx.all _ pairs _ graph ( G ) DCNL &gt; &gt; &gt; d = nx.all _ pairs ( G ) DCNL &gt; &gt; &gt; d = nx.all _ pairs ( G ) DCNL &gt; &gt; &gt; list ( nodes ) DCNL &#91; 0 , 1 , 2 &#93; DCNL &gt; &gt; &gt; list ( nodes &#91; \ &apos; node \ &apos; &#93; ) DCNL &#91; \ &apos; node \ &apos; , \ &apos; node \ &apos; , \ &apos; node \ &apos; &#93; DCNL &gt; &gt;
&apos;Return fingerprint of \ &apos; public _ key \ &apos; characters from \ &apos; public _ key \ &apos; . &apos;
&apos;Get response for when transport = cli . This is kind of a hack and mainly DCNL needed because these modules were originally written for NX-API . And DCNL not every command supports &quot; &#124; json &quot; when issuing commands containing \ &apos; show run \ &apos; . &apos;
&apos;Return hash information from osquery DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; osquery.hash&apos;
&apos;Load the Scotvote data and returns a Dataset class . DCNL Returns DCNL Dataset instance : DCNL See DATASET _ PROPOSAL.txt for more information . &apos;
&apos;URL decode a single string with the given encoding . DCNL : param s : the string to unquote . DCNL : param charset : the charset to be used . DCNL : param errors : the error handling to use . &apos;
&apos;Create and return serial number of serial serial number&apos;
&apos;Return True if the node is a master node , False otherwise . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion dockerng.is _ master _ node 1f9d2454d0872b68dd9e8744c6e7a4c66b86f10abaccc21e14f7f014f729b2bc&apos;
&apos;Retrieve config variables from the config config DCNL : param args : DCNL : type args : DCNL : return : DCNL : rtype : dict&apos;
&apos;Remove a document by name . DCNL : param doctype : DocType of the document to be removed . DCNL : param name : Name of the document to remove . DCNL : param assign _ to : Method to save the model from . &apos;
&apos;Create an IIS application pool . DCNL : param str name : The name of the IIS application pool . DCNL : return : A boolean representing whether all changes succeeded . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; win _ iis.remove _ apppool name = \ &apos; MyTestPool \ &apos; &apos;
&apos;DEPRECATED : List network interfaces associated with a baremetal node . &apos;
&apos;bound ( x , y ) - &gt; ( x1 , x2 , y2 ) &apos;
&apos;Returns the value of the primary key in an instance . DCNL If the value is not a string , it will return the value of the DCNL default value . Otherwise , returns the value of the object . DCNL Args : DCNL instance ( str ) : The instance to query . DCNL as _ string ( bool ) : If True , the default value will be returned . DCNL Returns : DCNL A string containing the first value of the object as a string . DCNL Raises : DCNL TypeError : If the object is not a string or an empty string . &apos;
&apos;Returns a between ``upper _ bound and lower _ bound . DCNL Parameters DCNL expr : Expression DCNL The expression to forward to . DCNL lower _ bound : float DCNL The upper bound bound to lower bound . DCNL upper _ bound : float DCNL The upper bound bound to lower bound . DCNL Returns DCNL LinOp DCNL An expression representing the upper bound . &apos;
&apos;Return the full path to the platform \ &apos; s URL . DCNL : return : The full path to the platform \ &apos; s URL . DCNL : rtype : str DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; system.get _ windows _ content&apos;
&apos;List all Launch Configurations . DCNL CLI example : : DCNL salt myminion boto _ asg.get _ all _ launch _ configurations&apos;
&apos;Try to find the actual path from the temp directory and return its full DCNL absolute path if it does not exist . &apos;
&apos;lettuce.STEP _ REGISTRY.load ( func , func ) append item to STEP _ REGISTRY&apos;
&apos;Return the full version of the current Linux distribution DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; iptables.get _ conf DCNL salt \ &apos; * \ &apos; iptables.get _ conf family = ipv6&apos;
&apos;Ensure that a layer is connected to the given layer . DCNL This function is meant to be used as a : class : `.Load` interface and supports DCNL both method-chained and standalone operation . DCNL Examples DCNL &gt; &gt; &gt; from networkx.algorithms import bipartite DCNL &gt; &gt; &gt; from lasagne.layers import InputLayer , DenseLayer DCNL &gt; &gt; &gt; x = np.array ( &#91; \ &apos; x \ &apos; , \ &apos; B \ &apos; , \ &apos; x \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; , \ &apos; B \ &apos; &#93; ) DCNL &gt; &gt;
&apos;Register all modules and renders it with a custom template engine . DCNL By default , only modules are added to the template engine . DCNL For example : : DCNL @ setup ( settings = &#91; &#93; ) DCNL def my _ view ( ) : DCNL pass DCNL For example : : DCNL @ setup ( settings ) DCNL def my _ view ( ) : DCNL pass&apos;
&apos;Get the absolute path to the base directories of the base DCNL directory set . DCNL Returns : DCNL ( str ) : The absolute path to the base directory set . &apos;
&apos;Calculate the central moment of the central difference between two DCNL parameters . DCNL Parameters DCNL a : array _ like DCNL Input array . DCNL num : int , optional DCNL Axis along which to compute the comparison . DCNL axis : int , optional DCNL Axis along which to compute the statistic . Default is 0 . DCNL Returns DCNL ret : ndarray , shape ( M , N ) DCNL The difference between the central difference between the central DCNL of the difference along the comparison . DCNL Examples DCNL &gt; &gt; &gt; from scipy import linalg DCNL &gt; &gt; &gt; a = np.arange ( 20 ) DCNL &gt; &gt; &gt; np.allclose ( a , b ) DCNL array ( &#91; 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
&apos;Compute the transfer function and poles . DCNL Parameters DCNL z : array _ like DCNL Input array . DCNL p : array _ like DCNL Input array . DCNL k : float , optional DCNL The value of the integration . DCNL Returns DCNL f : ndarray DCNL The transfer function to transform . DCNL Examples DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from sympy.abc import x , d DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; d = np.array ( &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 &#93; ) DCNL &gt; &gt;
&apos;Test to ensure function causes a redirect with HTTP 307 status code&apos;
&apos;Retrieve the load data for the specified job id DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; saltutil.find _ load &lt; jid &gt; &apos;
&apos;Parse feature files as defined by `feature _ files ( ) ` . DCNL Arguments : DCNL feature _ files ( str ) : Path to the feature file . DCNL language ( str , optional ) : The language in which to parse the file . DCNL Returns : DCNL list ( str ) : A list of feature files . &apos;
&apos;Lists the creds for given a cred _ id and tenant _ id&apos;
&apos;Sends the course grade course . DCNL Arguments : DCNL course _ key ( CourseKey ) : Identifier for the course . DCNL Returns : DCNL None&apos;
&apos;Compute the inverse of an inverse transform . DCNL This is used to calculate the inverse of the inverse of DCNL _ _ transform _ _ . DCNL This function computes the inverse of the inverse of the DCNL _ transform _ transform ( ) function . DCNL This function computes the inverse of the inverse of DCNL _ _ transform _ _ ( ) . DCNL This function computes the inverse of the inverse of DCNL _ _ transform _ _ ( ) . DCNL This function computes the inverse of the inverse of DCNL _ _ transform _ _ ( ) . DCNL This function computes the inverse of the inverse of the DCNL _ transform _ transform ( ) function . DCNL This function computes the inverse of the inverse of DCNL _ _ transform _ _ ( ) . DCNL This function computes the inverse of the inverse of the DCNL _ transform _ transform ( ) function . DCNL This function computes the inverse of the inverse of DCNL _ _ transform _ _ ( ) . DCNL This function computes the inverse of the inverse of DCNL _ _ transform _ _ ( )
&apos;return true if * obj * is iterable&apos;
&apos;Normalize the axis of a given axis . DCNL Parameters DCNL a : array _ like DCNL Input array . DCNL axis : int , optional DCNL Axis along which to operate . Default is 0 . DCNL Returns DCNL selem : ndarray DCNL The normalized array of shape ( 0 , 1 ) . DCNL Notes DCNL The first dimension is the same as `x` and `y` are the same as DCNL the same shape as `x` . DCNL Parameters DCNL a : array _ like DCNL Input array . DCNL axis : int , optional DCNL Axis along which to operate . Default is 0 . DCNL Returns DCNL selem : ndarray DCNL The normalized array of shape ( n , 1 ) . &apos;
&apos;Return the arithmetic mean of a `datetime` . DCNL Parameters DCNL create _ using : float , optional DCNL The number of pixels to convert . DCNL Returns DCNL r : float or float DCNL The `datetime` instance . &apos;
&apos;Save the load to the specified jid&apos;
&apos; : param user _ id _ or _ name : The user ID to check . DCNL : type user _ id _ name : str DCNL : return : ``True`` if the user is a effective user . DCNL : rtype : bool&apos;
&apos;Check if the length of an iterable matches an iterable of patterns . DCNL : param s : the string to match DCNL : type s : str DCNL : param iter : an iterable of words to search for DCNL : type iter : iter ( int ) DCNL : return : A tuple of ( s1 , s2 ) based on sequences DCNL : raises : * * ValueError * * if len ( s ) * = len ( s ) = = len ( s ) &apos;
&apos;Function to decide which key function to use . DCNL Defaults to ``default _ key _ func`` . &apos;
&apos;Return the weight boundary of a graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph . DCNL The weight graph is the weight of the weight graph .
&apos;Wrapper around Django \ &apos; s shlex.split ( ) method . &apos;
&apos;A helper function to mark all languages for a given container . DCNL Arguments : DCNL container ( container ) : Name of the container to select from . DCNL name ( str ) : Name of the node to select from . DCNL move _ to _ start ( bool ) : If True , do nothing . DCNL Returns : DCNL bool : True if all items are found , False otherwise . &apos;
&apos;Add the trace of the trace to a trace . &apos;
&apos;Computes the determinant of a function . DCNL Args : DCNL a ( Variable ) : A list of numbers . DCNL Returns : DCNL ~ chainer.Variable : Output variable . &apos;
&apos;Adds a request to the context . &apos;
&apos;Extract the content range from start and end . DCNL Args : DCNL start : Start number of bytes to get . DCNL end : End index . DCNL total : End of the chunk . DCNL Returns : DCNL A range of bytes . &apos;
&apos;Take a list of CSS files and return a list of CSS classes&apos;
&apos;Get the point in the loop to the point table . &apos;
&apos;Compute the composition of the model \ &apos; s model . DCNL Parameters DCNL mu : array _ like DCNL The data to be evaluated . DCNL u : { array-like , sparse matrix } , shape ( n _ samples , n _ features ) DCNL The data to use in the model . DCNL Returns DCNL f : ndarray DCNL The log model used in the model . &apos;
&apos;Test histogram of evoked data . DCNL This is meant to be used by test _ evoked _ writer ( ) . DCNL This is meant to be used by test _ evoked _ writer ( ) for testing . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 3294 . DCNL https : / / github.com / astropy / astropy / issues / 160&apos;
&apos;Creates the Euclidean distance for the given beam width DCNL Parameters DCNL G : NetworkX graph DCNL Returns DCNL out : ndarray , shape ( n _ samples , n _ features ) DCNL An array containing the coordinates of the first element in the DCNL ArrowVisual . DCNL Raises DCNL NetworkXError DCNL If the input is not a multigraph . DCNL Examples DCNL &gt; &gt; &gt; import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; pos = fig.add _ subplot ( 122 ) # right side DCNL &gt; &gt; &gt; G = fig.add _ subplot ( 122 ) # right side DCNL &gt; &gt; &gt; G = fig.add _ subplot ( 33 ) # doctest : + SKIP DCNL &gt; &gt; &gt; pos = fig.add _ subplot ( 122 ) # right side DCNL &gt; &gt; &gt; G = fig.add _ subplot ( 33 ) # doctest : + SKIP DCNL &gt; &gt; &gt; plt.gray ( ) # returns the output of the graph DCNL &gt; &gt; &gt; import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; G = fig.add _ subplot ( 51 ) DCNL &gt; &gt;
&apos;Helper method to retrieve the API type for the given type description . &apos;
&apos;Returns a list of all explorations from the given directory . DCNL Args : DCNL dir _ path ( str ) : path to the directory . DCNL Returns : DCNL List of tuples of the form ( file _ path , content _ path ) . &apos;
&apos;Check the creation of a set of dipoles . DCNL Parameters DCNL func : function DCNL The function to check . DCNL min _ dist _ to _ inner _ to _ inner _ to _ scalar _ to _ inner _ matrix : scalar DCNL The number of iterations to use . Default is \ &apos; meg \ &apos; or \ &apos; eeg \ &apos; . DCNL data : array-like , shape ( n _ samples , n _ features ) DCNL The data to check . Default is \ &apos; meg \ &apos; or \ &apos; eeg \ &apos; . DCNL data : array-like , shape ( n _ samples , n _ features ) DCNL The data to check . Default is \ &apos; meg \ &apos; or \ &apos; eeg \ &apos; . DCNL Returns DCNL p _ data : ndarray , shape ( n _ samples , n _ features ) DCNL The fitted covariance matrix . &apos;
&apos;Copy a snapshot . DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -f copy _ snapshot my-azure name = mysnapshot DCNL salt-cloud -f copy _ snapshot my-azure name = my _ snapshot name = mysnapshot DCNL salt-cloud -f copy _ snapshot my-azure name = my _ snapshot name = mysnapshot DCNL salt-cloud -f copy _ snapshot gce name = mysnapshot name = mysnapshot DCNL salt-cloud -f copy _ snapshot gce name = mysnapshot name = mysnapshot DCNL salt-cloud -f copy _ snapshot gce name = mysnapshot name = mysnapshot DCNL salt-cloud -f copy _ snapshot gce name = mysnapshot name = mysnapshot DCNL salt-cloud -f copy _ snapshot gce name = mysnapshot name = mysnapshot DCNL salt-cloud -f copy _ snapshot gce name = mysnapshot name = mysnapshot DCNL salt-cloud -f copy _ snapshot gce name = mysnapshot name = mysnapshot DCNL salt-cloud -f copy _ snapshot gce name = mysnapshot name = mysnapshot DCNL salt-cloud -f copy _ snapshot gce name = mysnapshot DCNL salt-cloud -f copy _ snapshot
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 120&apos;
&apos;Return True if the object is a class or class . DCNL &gt; &gt; &gt; class ( object ) : DCNL ... return _ _ doc _ _ DCNL &gt; &gt; &gt; class ( _ _ doc _ _ ) DCNL True DCNL &gt; &gt; &gt; class ( _ _ doc _ _ ) DCNL True DCNL &gt; &gt; &gt; class ( _ _ doc _ _ ) DCNL True DCNL &gt; &gt; &gt; class ( _ _ doc _ _ ) DCNL True DCNL &gt; &gt; &gt; class ( _ _ doc _ _ ) DCNL True DCNL &gt; &gt; &gt; class ( _ _ doc _ _ ) DCNL True DCNL &gt; &gt; &gt; class ( _ _ doc _ _ ) DCNL True DCNL &gt; &gt; &gt; class ( _ _ doc _ _ ) DCNL True DCNL &gt; &gt; &gt; class ( _ _ doc _ _ ) DCNL True DCNL &gt; &gt; &gt; class ( _ _ doc _ _ ) DCNL True DCNL &gt; &gt; &gt; class ( _ _ doc _ _ ) DCNL True DCNL &gt; &gt; &gt; class ( _ _ doc _ _ ) DCNL True DCNL &gt; &gt; &gt;
&apos;Update global state of a user to writer . DCNL : param sender : model instance to be saved DCNL : param kwargs : initial context to write to DCNL : return : updated instance&apos;
&apos;Computes the contents of a given jar with its contents . DCNL Args : DCNL jar _ path : Path to the jar with the contents of the jar . DCNL Returns : DCNL A list of the contents of the jar with the given jar . &apos;
&apos;Create a color for the given list of columns . DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; sensehat.color DCNL salt \ &apos; * \ &apos; sensehat.color \ &apos; { \ &apos; color \ &apos; : \ &apos; blue \ &apos; , \ &apos; color \ &apos; : \ &apos; blue \ &apos; , \ &apos; color \ &apos; : \ &apos; blue \ &apos; , \ &apos; color \ &apos; : \ &apos; blue \ &apos; , \ &apos; color \ &apos; : \ &apos; blue \ &apos; , \ &apos; color \ &apos; : \ &apos; blue \ &apos; , \ &apos; color \ &apos; : \ &apos; blue \ &apos; , \ &apos; color \ &apos; : \ &apos; blue \ &apos; , \ &apos; color \ &apos; : \ &apos; blue \ &apos; , \ &apos; color \ &apos; : \ &apos; blue \ &apos; , \ &apos; color \ &apos; : \ &apos; blue \ &apos; , \ &apos; color \ &apos; : \ &apos; blue \ &apos; , DCNL \ &apos; color \ &apos; : \ &apos;
&apos;Import module . DCNL : param module : The module to import . DCNL : type module : str DCNL : param imp : The name of the module . DCNL : type modules : C { str } DCNL : param package : The name of the package . DCNL : type package : str DCNL : param package : The name of the package . DCNL : type package : str DCNL : param package : The name of the package . DCNL : type package : C { str } DCNL : return : The imported module . DCNL : rtype : module&apos;
&apos;Display a dashboard widget for the given user \ &apos; s dashboard widget . DCNL The dashboard widget will be displayed in the dashboard widget and the DCNL dashboard widget . &apos;
&apos;Serialize all the YAML documents into a stream . DCNL If stream is None , return the produced string instead . DCNL If stream is None , return the produced string instead . &apos;
&apos;Select paths based on a BGP peer . DCNL Locally originating routes are supported by the Flexinet-Peer as a BGP peer . DCNL Returns None if no routes are found . &apos;
&apos;Make a AST node for graphviz layout program . DCNL Parameters DCNL G : graph DCNL A networkx graph DCNL prog : string DCNL Path of Graphviz layout program DCNL root : string , optional DCNL Path to Graphviz layout program DCNL args : list , optional DCNL A path to Graphviz layout program DCNL args : list DCNL The arguments for Graphviz layout program DCNL args : list DCNL The arguments for Graphviz layout program DCNL args : list DCNL The arguments for Graphviz layout program DCNL Returns DCNL pos : dict DCNL A dictionary containing positions keyed by node . &apos;
&apos;Returns a list of log tags for the given level . &apos;
&apos;Lists all of the tables in a given dataset . DCNL If no project is specified , then the currently active project is used . &apos;
&apos;Return the first item of a sequence . &apos;
&apos;Display the chamber dialog . &apos;
&apos; &lt; user &gt; - LARTs &lt; user &gt; &apos;
&apos;Given a URL , query it and return the URL . DCNL : param url : URL to query . DCNL : type url : string DCNL : param scheme : The scheme to query . DCNL : type allow _ fragments : bool DCNL : param allow _ fragments : If True , the URL will be appended to DCNL the query . DCNL : type allow _ fragments : bool DCNL : param allow _ fragments : If True , the URL will be appended to DCNL the query . DCNL : type allow _ fragments : bool DCNL : return : ( scheme , url , url , query ) DCNL : rtype : tuple ( str , str ) &apos;
&apos;Parse a list of tokens into a list of tokens . DCNL : param args : A list of strings to iterate over . DCNL : type args : Iterable &#91; str &#93; DCNL : return : A list of tokens . DCNL : rtype : dict&apos;
&apos;Given a policy name , describe its properties . DCNL Returns a dictionary of interesting properties . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ iot.describe _ policy mypolicy&apos;
&apos;Generate a ``GCEBlockDeviceAPI`` for use by policy . DCNL : param as _ params : DCNL : return : &apos;
&apos;atom : : \ &apos; ( \ &apos; \ &apos; ) DCNL ( \ &apos; ( \ &apos; ) \ &apos; ) &apos;
&apos; &gt; &gt; &gt; with _ test _ html ( ) # doctest : + ELLIPSIS DCNL Traceback ( most recent call last ) : DCNL print ( ) &apos;
&apos;Convert a binary string into a byte string . &apos;
&apos; : param job : The job to read from . DCNL : type job : str DCNL : param form : The file to read from . DCNL : type form : str DCNL : return : The query string . DCNL : rtype : dict&apos;
&apos;Log a message with severity \ &apos; DEBUG \ &apos; on the root logger . &apos;
&apos;Return True if zero is less than zero . &apos;
&apos;Wrapper for inserting an int64 FeatureList into a SequenceExample proto , DCNL e.g , sentence in list of ints&apos;
&apos;Returns a string identifying the Python implementation . DCNL Returns : DCNL str ( str ) : A string identifying the Python implementation . &apos;
&apos;Create a `Sort` from a single string criterion . DCNL `model _ cls` is a `Model` class , `Model` subclass , or `QuerySet` instance . &apos;
&apos;Add a resource . DCNL : param zone : Zone to add the resource to . DCNL : type zone : ``str`` DCNL : param resource _ type : The resource type . DCNL : type resource _ type : ``str`` DCNL : param resource _ type : The resource type . DCNL : type resource _ type : ``str`` DCNL : param kwargs : Additional keyword arguments to pass to the resource . DCNL : type kwargs : dict DCNL : return : The resource type . DCNL : rtype : dict DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; zonecfg.add _ resource tallgeese rctl name zone.max-locked-memory&apos;
&apos;Cast a string representation of a bit string to a single integer . &apos;
&apos;Create a file object for the given directory . DCNL Args : DCNL directory : Path of the directory to create . DCNL filename : The name of the file for which to create the file . DCNL scheme : The filename for the file . DCNL mode : The suffix for the file on the directory . &apos;
&apos;Parameters DCNL backend : str DCNL The name of the backend . DCNL Returns DCNL dpi : ndarray DCNL Dots per inch of the backend . &apos;
&apos;We need to create a course about students in the course . DCNL Arguments : DCNL course ( HttpRequest ) DCNL course _ id ( CourseKey ) : Identifier for the course . DCNL course _ key ( CourseKey ) : Identifier for the course . DCNL Returns : DCNL None&apos;
&apos;Return True if the given IP address is a private IP DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; network.is _ private 172.17.0.4&apos;
&apos;Compute the 1-norm of a matrix . DCNL Parameters DCNL a : array _ like DCNL Input array . DCNL calc _ q : bool , optional DCNL Whether to overwrite the matrix `a` . DCNL overwrite _ a : bool , optional DCNL Whether to overwrite the result . Default is True . DCNL check _ finite : bool , optional DCNL Whether to overwrite the result . Default is False . DCNL check _ finite : bool , optional DCNL Whether to check the result of the matrix `a` . DCNL Disabling may give a performance gain , but only finite numbers . DCNL Disabling may give a performance gain , but may improve performance . DCNL Disabling may give a performance gain , but may improve performance . DCNL Disabling may give a performance gain , but may improve performance . DCNL Disabling may give a performance gain , but may improve performance . DCNL Disabling may give a performance gain , but may improve performance . DCNL Disabling may give a performance gain , but may improve performance . DCNL Disabling may give a performance gain , but may improve performance . DCNL Disabling may give
&apos;Check if an object is a CUDA ndarray&apos;
&apos;Get the complex rotation matrix from a complex , matrix and complex . DCNL The complex matrix is expressed as a pair of lists , complex , complex , matrix , or complex . &apos;
&apos;Orthogonal dimension of dim along the given dimension . DCNL Parameters DCNL dim : integer DCNL The dimension of the dimension of the column . DCNL pad : int DCNL The length of the dimension of the dimension . DCNL Returns DCNL value : float DCNL The value of the specified dimension . &apos;
&apos;Return the indented line of a string \ &apos; s length . DCNL : param text : The text to be indented . DCNL : param prefix : The prefix to be indented . DCNL : param predicate : the function to be used . &apos;
&apos;Return the first item DCNL Parameters DCNL obj : dict-like object&apos;
&apos;Returns True if the url looks like a SSH URL scheme . DCNL : type url : str DCNL : param url : The URL to check . DCNL : type url : str DCNL : rtype : bool&apos;
&apos;Creates a class object for the given class and object . DCNL Parameters DCNL cls : class DCNL The class or object to be returned . DCNL ctype : str or None DCNL The object to get the object from . DCNL Returns DCNL obj : object DCNL The object instance . &apos;
&apos;Convert an axis scale to a scale factor . DCNL Parameters DCNL y : float DCNL The maximum value of the axis to scale . DCNL Returns DCNL y : float DCNL The maximum value of the plateau point . &apos;
&apos;This is a convenience function to create a new password for a particular DCNL user . If the user doesn \ &apos; t exist , the user will be removed . DCNL If the user doesn \ &apos; t exist , the user will be sent to a new user . DCNL If the user doesn \ &apos; t exist , the user will be sent to the user . DCNL If the user doesn \ &apos; t exist , the user will be removed . &apos;
&apos;Return supported _ items ( tuple of strings ) from the struct DCNL object . &apos;
&apos;Create a track of TrackInfo objects for a given track . DCNL Args : DCNL track ( list ) : List of track of track to track . DCNL position ( str ) : position of the project . DCNL stream _ title ( str , optional ) : title title to track . DCNL Returns : DCNL Tuple ( list , list ) : List of relevant objects . &apos;
&apos;Read the contents of all the files in the datastore file DCNL Args : DCNL repository : the file name to retrieve the files from . DCNL Returns : DCNL The list of all the files in the file file . &apos;
&apos;Return the parent type of an element . &apos;
&apos;Generate a log file for a given commit . DCNL : param repo : Path to the repository DCNL : param paths : Path to the repository DCNL : param paths : List of paths to iterate over DCNL : param outstream : Output stream to print ( defaults to stdout ) DCNL : param reverse : Whether to iterate over the results file DCNL : param name _ status : Whether to reverse the results DCNL : param name _ status : Whether to reverse the results DCNL : param name _ status : Whether to reverse the results DCNL : param name _ status : Whether to reverse the results DCNL : param name _ status : Whether to reverse the results DCNL : param name _ status : Whether to reverse the results DCNL : param name _ status : Whether to reverse the results DCNL : param name _ status : Whether to reverse the results DCNL : param name _ status : Whether to reverse the results DCNL : param name _ status : Whether to reverse the results DCNL : param name _ status : Whether to reverse the results DCNL : param name
&apos;Return the format for a rule DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; iptables.get _ rule _ handle filter INPUT DCNL IPv6 : DCNL salt \ &apos; * \ &apos; iptables.get _ rule _ handle filter INPUT family = ipv6&apos;
&apos;Convert domain names to names . DCNL Parameters DCNL domain _ obj _ list : list DCNL List of domain objects . DCNL Returns DCNL names : list DCNL List of domain names . &apos;
&apos;load json object from a dict DCNL Parameters DCNL filename : str DCNL Filename to load data from . DCNL kwargs : dict DCNL A dict mapping data to json data . DCNL Returns DCNL dict&apos;
&apos;Check all alarm details about the given name . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ cloudwatch.get _ alarm _ present name = us-east-1&apos;
&apos;This function returns a raw HTTP response . DCNL : param n : the number of messages to be sent DCNL : param n : the number of messages to be parsed DCNL : returns : a dict containing the data and data&apos;
&apos;Helper function for converting velocity vectors to velocity vectors . DCNL For example : DCNL &gt; &gt; &gt; from sympy.tensor.index import partial _ record _ vectors DCNL &gt; &gt; &gt; from sympy.tensor.index import partial _ record _ vectors DCNL &gt; &gt; &gt; t = partial _ record _ matrix ( &#91; \ &apos; x \ &apos; , \ &apos; y \ &apos; , \ &apos; y \ &apos; &#93; ) DCNL &gt; &gt; &gt; partial _ row _ matrix ( &#91; \ &apos; dog \ &apos; , \ &apos; t \ &apos; , \ &apos; y \ &apos; &#93; ) DCNL &#91; \ &apos; P \ &apos; , \ &apos; P \ &apos; , \ &apos; P \ &apos; &#93; DCNL &gt; &gt; &gt; partial _ record _ matrix ( &#91; \ &apos; x \ &apos; , \ &apos; t \ &apos; , \ &apos; y \ &apos; &#93; ) DCNL &#91; \ &apos; P \ &apos; , \ &apos; P \ &apos; , \ &apos; P \ &apos; &#93; DCNL &gt; &gt; &gt; partial _ record _ matrix ( &#91; \ &apos; x \ &apos; , \ &apos; t \ &apos; , \ &apos; y \ &apos;
&apos;Determine if a string is ascii . DCNL This is useful for testing purposes . DCNL Args : DCNL string ( str ) : The string to check . DCNL Returns : DCNL bool : True if the string is ascii . &apos;
&apos;Return a docstring for the given file \ &apos; s docstring . DCNL Parameters DCNL filename : str DCNL The name of the file to run . DCNL global _ dict : dict , optional DCNL The global dictionary to use for tests . DCNL Returns DCNL docstring : dict DCNL A dictionary containing the docstring of the file . DCNL Notes DCNL This function is meant to be used in Python 2.6 . DCNL See http : / / docs.python.org / library / pickle.html DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; test.docstring DCNL salt \ &apos; * \ &apos; test.docstring \ &apos; test \ &apos; &apos;
&apos;Run the Bio.Blast.Applications directory \ &apos; s doctests ( see config.py ) . &apos;
&apos;Get tris for a specific surface . DCNL Parameters DCNL grade : int DCNL The certificate . DCNL verbose : bool , str , int , or None DCNL If not None , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL tris : int DCNL Path to the temporary surface . &apos;
&apos;Return the last modified timestamp of a file . &apos;
&apos;Get the details of an existing object . DCNL @ param name : the name of the file DCNL @ type name : string DCNL @ param id : the name of the node DCNL @ type node : string DCNL @ param node : the node name DCNL @ type node : str DCNL @ return : A generator of L { Team } DCNL @ rtype : L { str } &apos;
&apos;Determine if the entity is on the statemachine . &apos;
&apos;postfix _ expression : postfix _ expression ARROW ID&apos;
&apos;Returns the available availables plugins in NINJA-IDE web page&apos;
&apos;Returns whether the given field can be generated for each generated field . DCNL This function can be used to identify the actual field name . &apos;
&apos;Decorator for views that checks that the user is logged in , redirecting to the DCNL log-in page if necessary . &apos;
&apos;The restful handler for requests . DCNL Takes a task _ id and a task to be used as a task . DCNL : param task _ id : DCNL : param response _ id : DCNL : param response _ format : DCNL : param response _ format : DCNL : return : &apos;
&apos;Decode a PDF string DCNL @ param string : The string to decode DCNL @ type string : C { str } DCNL @ return : The encoded string DCNL @ rtype : C { str } &apos;
&apos;A generator that returns a list of strings that are allowed to DCNL inclusion in a single file . &apos;
&apos;Setup the Twitch platform . &apos;
&apos;Test rgb to hsl color function&apos;
&apos;Returns the content of an event ( s ) to an event content . &apos;
&apos;f ( t ) - &gt; t DCNL f ( t ) = = f ( t ) DCNL f ( t ) = = f ( t ) &apos;
&apos;Jacobian of a * b ) function . &apos;
&apos;Parse a file . DCNL : param document _ file : the file-like object to parse DCNL : param validate : the name of the file DCNL : param entry _ class : the name of the entry in the file DCNL : param entry _ name : the name of the entry in the file DCNL : param start _ position : the line number of the file DCNL : param end _ position : the last line of the file DCNL : param extra _ args : the optional keyword arguments to pass to the DCNL : param extra _ args : DCNL : param extra _ args : DCNL : param extra _ args : DCNL : param extra _ args : DCNL : param extra _ args : DCNL : param extra _ args : DCNL : param extra _ args : DCNL : param extra _ args : DCNL : return : &apos;
&apos;Get a list of flavors . &apos;
&apos;Get the string to be a valid policy for the given base _ or _ index . DCNL : param base : base _ or _ index to validate DCNL : param policy _ or _ index : the policy or index of the policy . DCNL : returns : a string representing the policy and index of the policy . DCNL : raises : : class : `ValueError` if policy _ or _ index is invalid&apos;
&apos;Run a upgrade or upgrade a database DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.upgrade&apos;
&apos;Transcribe the given resource . DCNL Args : DCNL filename ( str ) : The name of the resource . DCNL Returns : DCNL A dictionary with the following keys : DCNL ( \ &apos; text \ &apos; , \ &apos; text \ &apos; , \ &apos; text / plain \ &apos; ) , ( \ &apos; text \ &apos; , \ &apos; text / plain \ &apos; ) ) &apos;
&apos;Get the mode of a mode . DCNL : param mode : The mode of the mode . DCNL : return : The mode of the mode . &apos;
&apos;Save plugin and restart it to the configuration file . DCNL : param plugin : The plugin to save the plugin from . DCNL : param str title : Name of the plugin . DCNL : return : True if successful , otherwise False . &apos;
&apos;Return a sorted list of the indices that can be used in the DCNL factorization of an integer . DCNL Examples DCNL &gt; &gt; &gt; from sympy.core.basic import pprint _ perm DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; det _ perm ( 10 ) DCNL &#91; ( 1 , 2 ) , ( 2 , 3 ) , ( 3 , 4 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0 , 1 ) , ( 0
&apos;Validate the validator for a given user . DCNL This function raises an exception if the given user is not DCNL found . DCNL : param user : The user to validate . DCNL : type user : str DCNL : return : A tuple of ( name , port ) pairs . DCNL : rtype : dict&apos;
&apos;Returns the group \ &apos; s name . DCNL If the name does not exist , return None . DCNL : param name : Name of the group DCNL : param match _ obj : the name of the attribute DCNL : return : the named group DCNL : rtype : str&apos;
&apos;Returns the HMAC-SHA1 of \ &apos; value \ &apos; , using a hash of key _ salt and HMAC _ salt . DCNL A \ &apos; value \ &apos; argument is used for the HMAC using the HMAC . &apos;
&apos;Return etc _ hosts information from osquery DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; osquery.etc _ hosts&apos;
&apos;A decorator used to skip tests if a test is enabled DCNL @ param args : DCNL @ type args : DCNL @ return : &apos;
&apos;This function is meant to be used for classification tasks . DCNL Parameters DCNL X : array-like , shape ( n _ samples , n _ features ) DCNL Array of shape ( n _ samples , n _ features ) . DCNL y : array-like , shape ( n _ samples , n _ features ) DCNL Array of shape ( n _ samples , n _ features ) . DCNL eps : float , optional DCNL The number of times to compute the data . DCNL Returns DCNL statistic : float , shape ( n _ samples , n _ samples , n _ features ) DCNL The data for each element . DCNL Notes DCNL This function is meant to be used as a large number of times . DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . ISBN : 978-0716724117&apos;
&apos;List available services DCNL : return : List of all available services DCNL : rtype : list DCNL : returns : List of all available services DCNL : rtype : list &#91; str &#93; &apos;
&apos;Like print _ exc ( ) but return an exception . &apos;
&apos;Compute the periodogram for the Lomb-Scargle periodogram DCNL Parameters DCNL t : ndarray , shape ( n _ samples , n _ features ) DCNL The probability of the periodogram for the periodogram . DCNL y : array-like , shape ( n _ samples , n _ features ) DCNL The probability of the periodogram for the periodogram . DCNL score : float , optional DCNL The probability that the periodogram is computed . DCNL maxiter : int DCNL The number of iterations to be used . DCNL Returns DCNL score : ndarray , shape ( n _ samples , n _ features ) DCNL The expected statistic for the null hypothesis . DCNL pval : ndarray , shape ( n _ samples , n _ features ) DCNL The expected statistic for the null hypothesis . DCNL Notes DCNL This function is jit-complied by Numba . DCNL Parameters DCNL t : ndarray , shape ( n _ samples , n _ features ) DCNL The probability of the periodogram for the periodogram . DCNL y : array-like , shape ( n _ samples , n _ features ) DCNL The data for which the periodogram is computed . DCNL
&apos;Test whether a boundary is in the same length as a DCNL boundary . DCNL The length of the boundary is used as the number of DCNL points in each dimension . The length of the boundary is DCNL relative to the length of the boundary . &apos;
&apos;Create a new instance of the given metadata . DCNL This will create the new security group , if it does not exist , DCNL then create the new security group . DCNL : param values : the values to create DCNL : type values : dict DCNL : param values : the values to be created DCNL : type values : dict DCNL : return : the updated security group DCNL : rtype : dict DCNL : returns : the updated security group DCNL : rtype : dict&apos;
&apos;Check that the list of operators in the update is ok . DCNL &gt; &gt; &gt; validate _ ok _ for _ update ( ( \ &apos; a \ &apos; , \ &apos; d \ &apos; ) ) DCNL Traceback ( most recent call last ) : DCNL ValueError : \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; validate _ ok _ for _ update ( \ &apos; a \ &apos; ) DCNL Traceback ( most recent call last ) : DCNL ValueError : \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; validate _ ok _ for _ update ( \ &apos; a \ &apos; ) DCNL Traceback ( most recent call last ) : DCNL ValueError : \ &apos; d \ &apos; DCNL &gt; &gt; &gt; validate _ ok _ for _ update ( \ &apos; a \ &apos; ) DCNL Traceback ( most recent call last ) : DCNL ValueError : \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; validate _ ok _ for _ update ( \ &apos; a \ &apos; ) DCNL Traceback ( most recent call last ) : DCNL ValueError : \ &apos; d \ &apos; DCNL &gt; &gt; &gt; validate
&apos;Given a list of chunked positions , find the positions of the DCNL positions . &apos;
&apos;Usage : DCNL eval ( \ &apos; foo \ &apos; , \ &apos; bar \ &apos; ) DCNL print ( \ &apos; foo \ &apos; , \ &apos; bar \ &apos; ) DCNL print ( \ &apos; foo \ &apos; , \ &apos; bar \ &apos; ) &apos;
&apos;Evaluates the expression of a function . DCNL Parameters DCNL op : LinOp DCNL the op to evaluate DCNL op _ str : str DCNL the op to evaluate DCNL b _ on _ error : bool , optional DCNL If True , don \ &apos; t use numexpr ( default : False ) DCNL use _ on _ error : bool , optional DCNL If True , don \ &apos; t return numexpr , default is True . &apos;
&apos;gzip content to file _ path DCNL Arguments : DCNL source _ path ( str ) : path to the archive DCNL archive _ path ( str ) : path to the archive DCNL Returns : DCNL None&apos;
&apos;Returns a boolean value suitable for given values . DCNL &gt; &gt; &gt; _ get _ mask ( np.array ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
&apos;Measure memory usage of a neuron ) . DCNL Parameters DCNL x : numpy array DCNL The data to be evaluated . DCNL Returns DCNL rval : float DCNL The output of the softmax . DCNL Notes DCNL This function is meant to be used in conjunction with the following DCNL functions : DCNL http : / / arxiv.org / abs / 1603.05158 for details . &apos;
&apos;Load parser result from specified package _ dirpath . DCNL Args : DCNL package _ dirpath : str ; Path to scenario package directory . &apos;
&apos;7 = &gt; \ &apos; H \ &apos; , 27 = &gt; \ &apos; AB \ &apos; &apos;
&apos;If a boolean value is None , raises an exception if it \ &apos; s not a bool . DCNL Otherwise , returns False . &apos;
&apos;Return a response object that can be used as a response to a DCNL response object . DCNL Usage : DCNL @ app.route ( \ &apos; / path / data \ &apos; ) DCNL def get _ response ( response ) : DCNL yield seek ( ) DCNL def get _ response ( response ) : DCNL yield seek ( ) DCNL def get _ response ( response ) : DCNL yield seek ( ) DCNL def get _ response ( response ) : DCNL yield seek ( ) DCNL def get _ response ( response ) : DCNL yield seek ( ) DCNL def get _ response ( response ) : DCNL yield seek ( ) DCNL def get _ response ( response ) : DCNL yield seek ( ) DCNL def get _ response ( response ) : DCNL yield seek ( ) DCNL def get _ response ( response ) : DCNL yield seek ( ) DCNL def get _ response ( response ) : DCNL yield seek ( ) DCNL def get _ response ( response ) : DCNL yield seek ( ) DCNL def get _ response ( response ) : DCNL yield seek (
&apos;Load and return a module \ &apos; s name . DCNL If \ &apos; filename \ &apos; is given , return \ &apos; \ &apos; . If \ &apos; name \ &apos; is given , DCNL return \ &apos; \ &apos; . If \ &apos; name \ &apos; is given , return \ &apos; \ &apos; . If \ &apos; name \ &apos; is DCNL specified , return \ &apos; \ &apos; . If \ &apos; name \ &apos; is True , return \ &apos; \ &apos; . If \ &apos; name \ &apos; is DCNL specified , return \ &apos; \ &apos; . If \ &apos; name \ &apos; is True , return \ &apos; \ &apos; . If \ &apos; name \ &apos; is DCNL specified , return \ &apos; \ &apos; . If \ &apos; name \ &apos; is True , return \ &apos; \ &apos; . &apos;
&apos;Main method to run the test suite . DCNL This is useful for unit tests . DCNL : param test : The test suite to run . DCNL : type test _ dir : str DCNL : return : The test suite . DCNL : rtype : : class : ` ~ google.cloud.logging.logger.Logger` DCNL : return : The test suite . &apos;
&apos;given a course and course _ id to create a CCX for the course . DCNL Arguments : DCNL request ( HttpRequest ) DCNL course _ key ( CourseKey ) : Identifier for the course . DCNL ccx ( bool ) : If true , additionally verifies that the user belongs to DCNL the course . DCNL Returns : DCNL None&apos;
&apos;Convert a number to an IntEnum member . DCNL If it is an integer , return the name of the object . &apos;
&apos;Construct an ASN1 token for an ASN1 _ token . &apos;
&apos;Create a simple file with the specified name . DCNL Parameters DCNL file _ name : str DCNL Name of file to read from . DCNL format : str , optional DCNL The name of the file . DCNL python _ dict : str , optional DCNL The name of the file . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL verbose : bool , optional DCNL If True , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . &apos;
&apos;Convert a string to a quoted string if necessary . DCNL : param string string : The string to convert . DCNL : return : The quoted string . &apos;
&apos;Adds all the handlers to the global redaction filter . &apos;
&apos;Returns a key for the given instance _ or _ pk and pk _ pk . &apos;
&apos;Encode a file-like object using the \ &apos; encoding \ &apos; header . DCNL This is useful for : meth : `str.encode`. DCNL : param values : the values to be encoded . DCNL : type values : dict DCNL : param use _ props : If True , use the new file-like object . DCNL : type use _ props : bool DCNL : param boundary : If True , use the default value to be used . DCNL : type boundary : bool DCNL : param charset : the charset to be used . DCNL : type boundary : str DCNL : param charset : the charset to be used . DCNL : type charset : string DCNL : param charset : the charset to be used . DCNL : type charset : string DCNL : param charset : the charset to use for the new DCNL : param charset : the charset to be used . &apos;
&apos;Perform any computation of a CUDA GPU array . DCNL Parameters DCNL n _ jobs : int DCNL The number of jobs to apply . DCNL W : array-like , shape ( n _ samples , n _ features ) DCNL The input data . DCNL W : array-like , shape ( n _ samples , ) DCNL The input data . DCNL new _ len : int , optional DCNL The number of cores to be used . DCNL new _ fft : int , optional DCNL The length of the FFT . DCNL Returns DCNL out : ndarray DCNL An array with shape ( n _ samples , n _ steps ) . &apos;
&apos;data - &gt; &#91; batch _ size , num _ channels &#93; DCNL Arguments : DCNL dataset : Dataset instance . DCNL batch _ size : number of batch size . DCNL num _ preprocess _ threads : Number of threads for preprocessing . DCNL Returns : DCNL A preprocessed image . DCNL Raises : DCNL ValueError : if `dim _ ordering` is neither `tf` or `th` . &apos;
&apos;Use this decorator to make sure that we don \ &apos; t need to have the same DCNL options . DCNL Parameters DCNL target : str , optional DCNL The target mapping . DCNL prefix : str , optional DCNL The prefix to use . DCNL Returns DCNL exit _ errors : str , optional DCNL The top-level of the GL backend . &apos;
&apos;Generate kernel _ arg _ type _ type metadata&apos;
&apos;Makes a request request . DCNL : param token : The HTTP request token . DCNL : param method _ name : The name of the request . DCNL : param method _ name : The name of the request . DCNL : param method : The method to send to the API request . DCNL : param params : A dictionary of parameters to pass to the HTTP request . DCNL : param dict base _ url : The URL for the API request . DCNL : param base _ url : The base URL for the API request . DCNL : param base _ url : The base URL for the API request . DCNL : param base _ url : The base URL for the API request . DCNL : param base _ url : The base URL for the API request . DCNL : returns : A ``Deferred`` that fires when the request was successful . DCNL : rtype : dict&apos;
&apos;Given a list of lines , returns a list of ( name , name ) tuples . DCNL The first argument is a list of ( name , name ) tuples . &apos;
&apos;Generate an image for the given input . DCNL Parameters DCNL input : array _ like DCNL The input array . DCNL size : int , optional DCNL The size of the array . DCNL footprint : int , optional DCNL The size of the array . DCNL output : scalar or None , optional DCNL The output of the filter . DCNL mode : { \ &apos; constant \ &apos; , \ &apos; constant \ &apos; , \ &apos; constant \ &apos; , \ &apos; constant \ &apos; , \ &apos; constant \ &apos; , DCNL \ &apos; constant \ &apos; , \ &apos; constant \ &apos; , \ &apos; constant \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \ &apos; nearest \ &apos; , \
&apos;Return a fake Python object that is used to generate a fake DCNL Python object for the given class . The name of the spec will DCNL be used with the same name as it \ &apos; s possible to make it easier . &apos;
&apos;Return locked port and port for a given port . DCNL : param context : Rendering context DCNL : type context : jinja2.runtime.Context DCNL : param port _ id : ID of the port DCNL : type port _ id : str DCNL : return : Boolean indicating whether or not the port is locked DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; system.get _ locked _ port _ id&apos;
&apos; &gt; &gt; &gt; missing _ whitespace _ operator ( \ &apos; foo \ &apos; , \ &apos; bar \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; missing _ whitespace _ operator ( \ &apos; foo \ &apos; ) DCNL True DCNL &gt; &gt; &gt; missing _ whitespace _ operator ( \ &apos; foo \ &apos; , \ &apos; bar \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; missing _ whitespace _ operator ( \ &apos; foo \ &apos; ) DCNL \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; missing _ whitespace _ operator ( \ &apos; foo \ &apos; ) DCNL \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; missing _ whitespace _ operator ( \ &apos; foo \ &apos; ) DCNL \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; missing _ whitespace _ operator ( \ &apos; foo \ &apos; ) DCNL \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; missing _ whitespace _ operator ( \ &apos; foo \ &apos; ) DCNL \ &apos; foo \ &apos; DCNL &gt; &gt; &gt; missing _ whitespace _ operator ( \ &apos; foo \ &apos; )
&apos;Get the LDEV number from the given status and return it . &apos;
&apos;BernoulliVector.sample _ from _ epsilon ( ) is called from the input DCNL output space&apos;
&apos;Convert an EDNS text string into an EDNS text string . DCNL @ rtype : string&apos;
&apos;Convert a date to a datetime object . DCNL Args : DCNL value : A datetime object . DCNL Returns : DCNL A datetime object . &apos;
&apos;Create a list of unique confirmation registrations for a given node . DCNL : param confirmation : List of unique confirmation registrations DCNL : return : List of registrations DCNL : rtype : list&apos;
&apos;Asserts the given output contains n elements of the specified DCNL path with the specified length . &apos;
&apos;Regression test for https : / / github.com / pytest-dev / pytest / issues / 9493&apos;
&apos;Computes the ROC AUC Score . DCNL This function computes the Area Under Curve ( AUC ) using the trapezoidal rule DCNL Parameters DCNL actual : list of numbers , ( n _ samples , n _ features ) DCNL A list of ( x , y ) pairs . DCNL posterior : float DCNL The fraction of posterior predictive samples . DCNL Returns DCNL c : ndarray ( float , float ) DCNL The p-value for the given expression . &apos;
&apos;Add cage and z values to negatives . DCNL Args : DCNL t ( float ) : The negatives . DCNL x ( ~ chainer.Variable ) : Input variable . DCNL Returns : DCNL ( float , float ) : The transformation matrix . &apos;
&apos;Get the fake channel stub stub for use . &apos;
&apos;Define a model expression using the specified model expression . DCNL .. code-block : : gherkin DCNL Given the model \ &apos; foo \ &apos; , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; } , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; } , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , DCNL \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , DCNL \ &apos;
&apos;Chooses a map from a mapping file DCNL Args : DCNL infile : file to write to DCNL disable _ primers _ check : set of barcode sequences DCNL added _ demultiplex _ field : If True , suppresses warnings about barcodes of DCNL varying length . DCNL added _ demultiplex _ field : If True , suppresses warnings about barcodes of DCNL varying length . DCNL has _ barcodes : If True , suppresses warnings about barcodes of DCNL varying length . DCNL has _ barcodes : If True , suppresses warnings about barcodes of DCNL varying length . DCNL has _ barcodes : If True , suppresses warnings about barcodes of DCNL varying length . DCNL has _ barcodes : If True , suppresses warnings about barcodes of DCNL varying length . DCNL has _ barcodes : If True , suppresses warnings about barcodes of DCNL varying length . DCNL has _ barcodes : If True , suppresses warnings about barcodes of DCNL varying length . DCNL has _ barcodes : If True , suppresses warnings about barcodes of DCNL varying length . DCNL has _ barcodes : bool , optional ( default True ) DCNL
&apos;Upload template template and reload it . If a template is specified , DCNL then the template will be modified . If the template is specified , DCNL then the template will be overwritten . DCNL : param name : Path to the repository DCNL : type name : str DCNL : return : Path to the temporary file or directory DCNL : rtype : str&apos;
&apos;Test starting with _ search _ path and _ _ init _ _ .py for tests . DCNL This is useful for tests that don \ &apos; t make sure to make sure that DCNL the filesystem is not in the same directory . This is useful for DCNL testing . &apos;
&apos;Checks whether a phone number is valid for the given region . DCNL Arguments : DCNL numobj -- The PhoneNumber object to check for . DCNL region _ code -- The region code to check for . DCNL Returns True if the region is valid , False otherwise . &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 362&apos;
&apos;Checks whether the given text is a lyrics for the given text . DCNL Arguments : DCNL text ( str ) : The text to check . DCNL artist ( str ) : The name of the history to check . DCNL Returns : DCNL bool : Whether the given text is a lyrics for the data . &apos;
&apos;Compute whitening of MEG and EEG channels . DCNL Parameters DCNL evoked : instance of Evoked DCNL The evoked data . DCNL ch _ type : int &#124; None &#124; str &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; int &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124; None &#124;
&apos;Given a list of file name , return list of positional arguments . DCNL : type name : list DCNL : param file : The name of the file type . DCNL : type mime : str DCNL : return : A list of positional arguments . &apos;
&apos;Get the description of available video tracks . DCNL @ param p _ mi : the media player . DCNL @ return : title of title . &apos;
&apos;Return ``True`` if value is a valid domain name , otherwise returns DCNL ``False`` . DCNL .. versionadded : : 2014.7.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; memcached.domain &lt; value &gt; &apos;
&apos;The restful handler for requests for the specified course . DCNL GET , course _ key = \ &apos; course _ id \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; lms \ &apos; , \ &apos; lms \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; lms \ &apos; , \ &apos; lms \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; lms \ &apos; , \ &apos; lms \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; lms \ &apos; , \ &apos; lms \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; course _ id \ &apos; , \ &apos; lms \ &apos; , \
&apos;Return True if the application is a Python implementation , False otherwise . &apos;
&apos;Generate a random UUID . DCNL : returns : A random string . &apos;
&apos;Register an event handler . DCNL : param name : The name of the event to be executed . DCNL : param priority : Priority for this function . DCNL : return : The decorated method . &apos;
&apos;Show HaProxy Backends DCNL socket DCNL haproxy stats socket DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; haproxy.show _ backends&apos;
&apos;Copy a file ( s ) from src to dst : DCNL - src = \ &apos; / path / to / dst \ &apos; DCNL - src = \ &apos; / path / to / dst \ &apos; DCNL - src = \ &apos; / path / to / dst \ &apos; DCNL - src = \ &apos; / path / to / dst \ &apos; DCNL - src = \ &apos; / path / to / src \ &apos; DCNL - src = \ &apos; / path / to / src \ &apos; DCNL - src = \ &apos; / path / to / dst \ &apos; DCNL - src = \ &apos; / path / to / src \ &apos; DCNL - src = \ &apos; / path / to / src \ &apos; DCNL - src = \ &apos; / path / to / src \ &apos; DCNL - src = \ &apos; / path / to / src \ &apos; DCNL - src = \ &apos; / path / to / src \ &apos; DCNL - src = \ &apos; / path / to / src \ &apos; DCNL - src = \ &apos; /
&apos;Test whether an object is saved . DCNL : param actual : The object to estimate DCNL : param desired : The desired value . DCNL : param tol : minor tolerance . DCNL : return : True if successful . &apos;
&apos;Returns a set of all available widgets&apos;
&apos;Args : DCNL data _ dir ( str ) : path to the source file DCNL id _ vocabulary _ size ( int ) : path to the source file DCNL vocab _ vocabulary _ size ( int , optional ) : the number of data to generate DCNL vocab _ vocabulary _ size ( int ) : the number of data to generate DCNL vocab _ vocab _ size ( int ) : the size of the vocabulary DCNL Returns : DCNL list ( str , str ) : a list of tuples ( season _ id , data _ id ) DCNL Raises : DCNL ValueError : if data is invalid&apos;
&apos;Return a copy of the image DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; imgadm.get e42f8c84-bbea-11e2-b920-078fab2aab1f&apos;
&apos;Copy data to a tree . DCNL : param repo : Path to repository DCNL : param old _ tree : Old tree object DCNL : param new _ tree : File-like object to write to DCNL : param outstream : Stream to write to&apos;
&apos;Regression test for https : / / github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba / issues / 1103 DCNL github.com / numba / numba /
&apos;Returns a list of words ( words , words ) in the given string . DCNL For example : DCNL &gt; &gt; &gt; words ( &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL u \ &apos; a \ &apos; DCNL &gt; &gt; &gt; words ( &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; &#93; ) DCNL u \ &apos; a \ &apos; DCNL &gt; &gt; &gt; words ( &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; &#93; ) DCNL u \ &apos; a \ &apos; DCNL &gt; &gt; &gt; words ( &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; &#93; ) DCNL u \ &apos; a \ &apos; DCNL &gt; &gt; &gt; words ( &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; &#93; ) DCNL u \ &apos; a \ &apos; DCNL &gt; &gt; &gt;
&apos;Returns a form for an invitation . DCNL Templates : http : / / en.wikipedia.org / wiki / invitation _ form.html`` DCNL Context : DCNL form DCNL InvitationForm object&apos;
&apos;Return a list of all of a class . &apos;
&apos;Resolves host name to a sockaddr . DCNL If hostname is None , the default hostname will be returned . DCNL : param hostname : The hostname to resolve . DCNL : returns : A tuple of ( hostname , hostname ) . &apos;
&apos;Get the information for the specified course grade . DCNL Arguments : DCNL course _ id ( CourseKey ) : Identifier for the course . DCNL section ( str ) : The section of the course interested in . DCNL Returns : DCNL dict : A dictionary representing the information for the problem in the DCNL course . &apos;
&apos;Evaluate a function using the given function . DCNL Parameters DCNL func : callable DCNL The function to check . DCNL xtol : float DCNL Relative tolerance . DCNL maxiter : int DCNL Maximum number of iterations to be used . DCNL Returns DCNL val : float DCNL The value of the function . DCNL maxiter : int DCNL Maximum number of iterations to be used . DCNL maxiter : int DCNL Maximum number of iterations to be used . DCNL Examples DCNL &gt; &gt; &gt; from sympy import Symbol DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; , lambda x : x ) DCNL &gt; &gt; &gt; g = Symbol ( \ &apos; x \ &apos; , x ) DCNL &gt; &gt; &gt; g = Symbol ( \ &apos; x \ &apos; , x ) DCNL &gt; &gt; &gt; g = Symbol ( \ &apos; x \ &apos; , x ) DCNL &gt; &gt;
&apos;Awards badges based on the user and the user . DCNL : param badge _ template : The user to award the badge on . DCNL : param year : The year . DCNL : param user : The user to award the badge on . &apos;
&apos;Package purges are not supported , this function is idempotent . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package name &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.purge &lt; package1 &gt; , &lt; package2 &gt;
&apos;TinTwisted C { HTTP } . DCNL @ type headers : L { dict } DCNL @ param headers : A list of HTTP headers . DCNL @ type data : L { bytes } DCNL @ param data : The data to send . DCNL @ type data : L { bytes } DCNL @ param streamID : The ID of the stream . DCNL @ type streamID : L { str } &apos;
&apos;Return a dict of \ &apos; include _ headers \ &apos; header for the request . DCNL If include _ headers is None , the response will be appended to the DCNL response . &apos;
&apos;abort ( ) should print \ &apos; Fatal error \ &apos; . &apos;
&apos;Create value for a file descriptor . DCNL @ type fd : L { str } DCNL @ param fd : File descriptor . DCNL @ type when : int DCNL @ param when : set of ( key , value ) pairs DCNL @ type when : string DCNL @ return : list of ( key , value ) pairs DCNL @ rtype : list ( str ) &apos;
&apos;Custom method to validate the given model class . DCNL If the model is not specified , the model will be checked for DCNL the given model . DCNL If the model is not specified , the model will be returned . DCNL If the model is not specified , the model is returned . DCNL If the model is not specified , the model will be returned . DCNL If the model is not specified , the model is returned . DCNL If the model is not specified , the model is returned . &apos;
&apos;foo docs go here&apos;
&apos;Replaces all occurances of Posix slashes ( \ &apos; \ &apos; ) DCNL &gt; &gt; &gt; posixToNtSlashes ( \ &apos; C : \ Windows \ &apos; ) DCNL \ &apos; C : \ Windows \ &apos; &apos;
&apos;Makes a string in hex format DCNL &gt; &gt; &gt; print ( hexdump ( ( \ &apos; a \ &apos; , 1 ) ) ) # doctest : + SKIP DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; print ( hexdump ( ( \ &apos; a \ &apos; ) ) # doctest : + SKIP DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; print ( hexdump ( ( \ &apos; a \ &apos; ) ) # doctest : + SKIP DCNL \ &apos; 1 \ &apos; &apos;
&apos;Generate a DSSP dictionary that maps a pair of integers from DCNL four four four points to a pair of integers . DCNL Parameters DCNL - handle : list of tuples DCNL - a dictionary of four four four four values : DCNL - H : R , N , N , N , N , N , N , N , 3 , 3 , 4 , 3 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
&apos;Try to make sure the rule raises an exception&apos;
&apos;Tries to find a search for all items in a database . DCNL Parameters DCNL trans : dict DCNL List of dictionaries to search for . DCNL cache _ term : int , optional DCNL The search term for the database . DCNL search _ url : str DCNL The search term to use for the database . DCNL search _ url : str DCNL The name of the search for the database . DCNL Returns DCNL search _ url : dict DCNL A dictionary containing the results for the db DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; serverdensity _ search search _ search term = lama DCNL salt \ &apos; * \ &apos; serverdensity _ search search _ search term = lama DCNL salt \ &apos; * \ &apos; pkg.search _ search term = True&apos;
&apos;Return a graph from a graph . DCNL Parameters DCNL graph : NetworkX graph DCNL A NetworkX graph . DCNL Returns DCNL G : NetworkX graph DCNL A NetworkX graph . DCNL Raises DCNL NetworkXError DCNL If there is no such graph . &apos;
&apos;Return the number of locale for a given locale . DCNL Example : : DCNL get _ locale ( \ &apos; en _ US \ &apos; , locale = \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos; en _ US \ &apos; ) DCNL get _ locale ( \ &apos;
&apos;Split an expression into a list of parts . DCNL &gt; &gt; &gt; from sympy import symbols DCNL &gt; &gt; &gt; from sympy import symbols DCNL &gt; &gt; &gt; from sympy import symbols DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; list ( split _ expr _ parts ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) , ( 1 , 2 ) &#93; ) &apos;
&apos;Make sure column \ &apos; s width is lowercase . &apos;
&apos;Decorator to mark a function as a function . DCNL Parameters DCNL num _ tries : int DCNL The number of tries to be checked . DCNL verbose : bool , optional DCNL If True , the function will be passed to the function . DCNL Returns DCNL expr : function DCNL The function to be used . DCNL Examples DCNL &gt; &gt; &gt; from sympy.abc import x , t DCNL &gt; &gt; &gt; from sympy.abc import x , t DCNL &gt; &gt; &gt; _ _ function ( ) DCNL \ &apos; threading \ &apos; DCNL &gt; &gt; &gt; _ _ function ( \ &apos; threading \ &apos; ) DCNL \ &apos; threading \ &apos; DCNL &gt; &gt; &gt; _ _ function ( \ &apos; threading \ &apos; ) DCNL \ &apos; threading \ &apos; DCNL &gt; &gt; &gt; _ _ function ( \ &apos; threading \ &apos; ) DCNL \ &apos; threading \ &apos; DCNL &gt; &gt; &gt; _ _ function ( \ &apos; threading \ &apos; ) DCNL \ &apos; threading \ &apos; DCNL &gt; &gt; &gt; _ _ function ( \ &apos; threading \ &apos; ) DCNL \ &apos; threading \ &apos; DCNL &gt; &gt; &gt; _
&apos;Create a field object for a given key type . DCNL : param key _ type : The type of the field to be converted . DCNL : param value _ type : The type of the property to be used . DCNL : param bool optional : If true , the function will be called with the DCNL value of the value . DCNL : param callable optional : A callable that will be called with the DCNL value of the value . DCNL : param factory : A callable that will be used to create a new DCNL object . DCNL : param factory : A callable that will be used to create a new DCNL object . DCNL : param factory : A callable that will be used to create a new DCNL object . &apos;
&apos;Check if path is a safe path . &apos;
&apos;Redirect to an image . &apos;
&apos;Send an email to an email . DCNL Args : DCNL to _ addr ( str ) : Email address to send to . DCNL email ( str ) : Email address to send . DCNL email ( str ) : Email address to send . DCNL email ( str ) : Email address to send . DCNL email ( str ) : Email address to send . DCNL email ( str ) : The email address to send . DCNL password ( str ) : The password to send to the email . DCNL callback ( str ) : The password to send to the email . DCNL callback ( str ) : The password to send to the email . DCNL callback ( str ) : The password to send to the email . DCNL Returns : DCNL list ( str ) : A list of email addresses . &apos;
&apos;Process a user . DCNL For example : DCNL sydney = { DCNL \ &apos; a \ &apos; : 1 , DCNL \ &apos; yes \ &apos; : 1 , DCNL \ &apos; yes \ &apos; : 1 , DCNL \ &apos; yes \ &apos; : 1 , DCNL \ &apos; yes \ &apos; : 1 , DCNL \ &apos; yes \ &apos; : 1 , DCNL \ &apos; yes \ &apos; : 1 , DCNL \ &apos; yes \ &apos; : 1 , DCNL \ &apos; yes \ &apos; : 1 , DCNL \ &apos; yes \ &apos; : \ &apos; something \ &apos; , DCNL \ &apos; yes \ &apos; : 1 , DCNL \ &apos; yes \ &apos; : 1 , DCNL \ &apos; yes \ &apos; : 1 , \ &apos; yes \ &apos; : 1 , DCNL \ &apos; yes \ &apos; : \ &apos; something \ &apos; , DCNL \ &apos; yes \ &apos; : \ &apos; something \ &apos; , DCNL \ &apos; yes \ &apos; : \ &apos; something \ &apos; , DCNL \ &apos; yes \ &apos; : \ &apos; something \ &apos; , DCNL \ &apos; yes \ &apos; :
&apos;Light commit element in `obj` , which is an element if there is no DCNL already selected element . &apos;
&apos;Return the current record of a ratelimit for the given prefix _ slices . DCNL If \ &apos; limit _ slices \ &apos; is a tuple of ( offset , limit ) pairs is returned . DCNL If there is no offset in the range of \ &apos; offset \ &apos; , then the result is DCNL \ &apos; offset \ &apos; , \ &apos; offset \ &apos; , \ &apos; offset \ &apos; , \ &apos; offset \ &apos; , \ &apos; offset \ &apos; , \ &apos; offset \ &apos; , \ &apos; offset \ &apos; . &apos;
&apos;lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --md4 file ... DCNL lx hash --@@
&apos;Print the environment variables contained in the environment . DCNL Args : DCNL environ : The WSGI environment to print . &apos;
&apos;Decorator for parameterized test w.r.t. the given subset of dtypes . DCNL Parameters DCNL names : list of str , optional DCNL Argument names to which dtypes are passed . DCNL default : bool , optional DCNL If ``True`` , only the subset of combinations will be tested . DCNL full : bool , optional ( default = False ) DCNL If ``True`` , only the subset of combinations will be tested . DCNL .. seealso : : : func : `cupy.testing.for _ dtypes` , DCNL : func : `cupy.testing.for _ dtypes` , DCNL : func : `cupy.testing.for _ dtypes` , DCNL : func : `cupy.testing.for _ all _ dtypes`&apos;
&apos;Parse a query string . DCNL For example : : DCNL &gt; &gt; &gt; urldecode ( &quot; query &quot; ) DCNL \ &apos; http : / / example.com / foo ? \ &apos; DCNL &gt; &gt; &gt; urldecode ( &quot; query &quot; ) DCNL \ &apos; http : / / example.com / foo ? \ &apos; DCNL &gt; &gt; &gt; urldecode ( &quot; query &quot; ) DCNL \ &apos; query \ &apos; DCNL &gt; &gt; &gt; urldecode ( &quot; query &quot; ) DCNL \ &apos; query \ &apos; DCNL &gt; &gt; &gt; urldecode ( &quot; query &quot; ) DCNL \ &apos; query \ &apos; DCNL &gt; &gt; &gt; urldecode ( &quot; query &quot; ) DCNL \ &apos; query \ &apos; DCNL &gt; &gt; &gt; urldecode ( &quot; query &quot; ) DCNL \ &apos; query \ &apos; DCNL &gt; &gt; &gt; urldecode ( &quot; query &quot; ) DCNL \ &apos; query \ &apos; DCNL &gt; &gt; &gt; urldecode ( &quot; query &quot; ) DCNL \ &apos; http : / / example.com / foo ? \ &apos; DCNL &gt; &gt; &gt; urldecode ( &quot; query &quot; ) DCNL \ &apos; query \ &apos; DCNL &gt; &gt; &gt; urldecode ( &quot; query &quot;
&apos;Feature.from _ input ( ) returns a list of ( width , height ) tuples . DCNL This is a utility function that takes care of the following : DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `cursor is \ &apos; + \ &apos; . DCNL - `@@
&apos;Create a copy of an object to make a copy of an object . DCNL Args : DCNL obj : An object to serialize . DCNL factory : A callable that will be used to create a copy of an object . DCNL Returns : DCNL An object representing a copy of the object . &apos;
&apos; @ param value : Integer value DCNL @ type value : Integer DCNL @ param endian : ( Optional , def = LITTLE _ ENDIAN ) Endianess of the bit field ( LITTLE _ ENDIAN : &lt; , BIG _ ENDIAN : &gt; ) DCNL @ type format : Integer DCNL @ param format : ( Optional , def = True ) Specifying a name gives you direct access to a primitive&apos;
&apos;Unpublish a collection . Commits changes . &apos;
&apos;Get a hardware address as a list of numbers . DCNL @ return : a string with the hardware address as a string . &apos;
&apos;Find all the tests in the datastore directory . If it doesn \ &apos; t exist , DCNL it will return C { twisted } and C { twisted } . DCNL @ param copydir : The base directory to search for . DCNL @ return : A list of C { None } . &apos;
&apos;Decrypt data with aes in CBC mode DCNL @ param { int &#91; &#93; } 16-Byte cipher DCNL @ param { int &#91; &#93; } 16-Byte cipher DCNL @ return { int &#91; &#93; } 16-Byte state&apos;
&apos;Returns the number of items in a sequence . DCNL Examples DCNL &gt; &gt; &gt; from sympy.utilities.iterables import group DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; list ( group ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; group (
&apos;Check that hug \ &apos; s arguments and returns a boolean value . DCNL Regression test for https : / / github.com / astropy / astropy / pull / 4048&apos;
&apos;Manage the configuration settings for a given certificate . DCNL .. versionadded : : 2016.11.0 DCNL name DCNL The name of the cluster . DCNL datacenter : str DCNL The name of the certificate configuration . DCNL location DCNL The location of the certificate . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; consul.agent _ settings DCNL salt \ &apos; * \ &apos; consul.agent _ settings my _ config&apos;
&apos;Display the file for display . &apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 4098&apos;
&apos;Transform a list into a heap , in-place , in O ( len ( x ) ) . &apos;
&apos;Generate a list of vertices for a Bezier curve . DCNL Parameters DCNL p1 : float DCNL The base coordinates of the Bezier curve . DCNL p2 : array DCNL The coordinates of the split line . DCNL p3 : array DCNL A tuple of ( x , y ) tuples . DCNL Returns DCNL vertices : ndarray DCNL The coordinates of the Bezier curve . &apos;
&apos; : param M : Input array . DCNL : type M : int DCNL : param N : Number of bits to calculate . DCNL : rtype : int&apos;
&apos;Remove flavor access for project . &apos;
&apos;Remove leading and trailing whitespace . &apos;
&apos;Update a quota usage or raise if it does not exist . &apos;
&apos;Builds a provider location for a specific version _ type . DCNL : param system : system system location DCNL : param lun _ type : LUN ID for generating provider DCNL : param lun _ type : LUN ID for generating provider DCNL : param base _ lun _ name : LUN ID for LUN / snapcopy LUN . &apos;
&apos;Send a notification to a notification event . DCNL This function is meant to be used when the user clicks the notification DCNL as an email address . DCNL : param r : the response to send to the notification DCNL : param attr : the name of the notification DCNL : return : a tuple of ( app _ id , message _ status , message _ status ) DCNL : raises : : class : ` ~ elasticsearch.Elasticsearch.bulk` api . &apos;
&apos;Ensure that a user can be represented as a member of a member . DCNL : param member _ ref : The members that can be converted to a member DCNL : return : string&apos;
&apos;Return an iterator of the elements of a given sequence . &apos;
&apos;Given a string of string data , generate a new file with the given DCNL metadata . DCNL Args : DCNL client _ string : The string to be saved . DCNL policy _ data : The string to write to . DCNL append _ only : Whether or not to append the policy . DCNL Returns : DCNL A dictionary of file names . &apos;
&apos;Mark a test as emitting a warning on a warning . DCNL With a warning , squelches all SADeprecationWarning failures . DCNL By default , squelches all SADeprecationWarning failures . DCNL By default , squelches all SADeprecationWarning failures . DCNL With no arguments , squelches all SADeprecationWarning failures . DCNL With no arguments , squelches all SADeprecationWarning failures . DCNL With no arguments , squelches all SADeprecationWarning failures . DCNL With no arguments , squelches all SADeprecationWarning failures . DCNL With no arguments , squelches all SADeprecationWarning failures . DCNL With no arguments , squelches all SADeprecationWarning failures . DCNL Defaults to False . DCNL Example : DCNL &gt; &gt; &gt; from _ warning _ on ( \ &apos; \ &apos; ) DCNL &gt; &gt; &gt; assert _ warning _ on ( \ &apos; foo \ &apos; ) DCNL \ &apos; \ &apos; DCNL &gt; &gt; &gt; _ _ warning _ on ( \ &apos; \ &apos; ) DCNL \ &apos; \ &apos; DCNL &gt; &gt; &gt; _ _ warning _ on ( \ &apos; _ _ test _ on \ &apos; ) DCNL \ &apos; \ &apos; DCNL &gt; &gt;
&apos; .. versionadded : : 2016.3.0 DCNL Attempt to connect to the cached auth service and returns the data DCNL object . DCNL Raises an exception if the minion does not exist . DCNL This function is intended to be used by the API call to DCNL https : / / github.com / facebook / facebook / blob / master / blob / master / blob / master / api / api / api / python-rsa / DCNL http : / / github.com / facebook / facebook / issues / 684 / DCNL https : / / github.com / facebook / w3af / issues / 243&apos;
&apos;Return true if the string starts with a \ &apos; &lt; path &gt; \ &apos; . DCNL @ param s : the string \ &apos; s text . DCNL @ type s : str DCNL @ param node : The string to convert . DCNL @ type container : str DCNL @ param b : The string \ &apos; s contents . DCNL @ type b : L { str } DCNL @ param b : The string \ &apos; s contents . DCNL @ type joined : L { str } DCNL @ param dst : The source of the file . DCNL @ type joined : L { str } DCNL @ param dst : The source of the file . DCNL @ type joined : L { str } DCNL @ return : the joined url ( s ) . DCNL @ rtype : str&apos;
&apos;Uses the HTTP Basic authentication header . DCNL realm DCNL A string containing the authentication realm . DCNL get _ ha1 DCNL A string of the form \ &apos; token \ &apos; , \ &apos; token \ &apos; , \ &apos; GET \ &apos; , \ &apos; expires \ &apos; , \ &apos; expires \ &apos; , \ &apos; authorization \ &apos; , DCNL \ &apos; token \ &apos; , \ &apos; expires \ &apos; , \ &apos; expires \ &apos; , \ &apos; user-agent \ &apos; , \ &apos; user-agent \ &apos; , \ &apos; user-agent \ &apos; , \ &apos; user-agent \ &apos; , \ &apos; user-agent \ &apos; , DCNL \ &apos; token \ &apos; , or \ &apos; Basic \ &apos; . &apos;
&apos;Create a tarball of ( source , base _ name , dest _ name ) for the given DCNL base _ name . If base _ name is None , then a chunk is returned . DCNL * base _ dir * is a list of ( name , path ) tuples for the gzip line DCNL * compress * , * gzip * , * compress * , * gzip * , * compress * , and * gzip * . DCNL * base _ dir * is a list of filenames to append to the archive . DCNL * compress _ dir * is a sequence of filenames to append to the archive DCNL ( e.g. , \ &apos; gzip \ &apos; , \ &apos; gzip \ &apos; , \ &apos; gzip \ &apos; , \ &apos; gzip \ &apos; , \ &apos; gzip \ &apos; , \ &apos; gzip \ &apos; , \ &apos; gzip \ &apos; , \ &apos; gzip \ &apos; , \ &apos; gzip \ &apos; , \ &apos; gzip \ &apos; , \ &apos; gzip \ &apos; , \ &apos; gzip \ &apos; ) . &apos;
&apos;multivariate values over a specified period&apos;
&apos;A helper function to save the cache lock for a given temporary DCNL directory . If there is no lock , then this function will throw an DCNL exception if it is not locked . &apos;
&apos;Return the selected options . DCNL : param select _ browser _ query : DCNL : return : &apos;
&apos;Wrap a list of paragraphs , returning a list of paragraphs . DCNL : param text : The text to wrap . DCNL : type text : str DCNL : param fileobj : the text to wrap . DCNL : type l : str DCNL : param lines : A list of lines to wrap . DCNL : rtype : list ( str ) &apos;
&apos;Recursively remove a file . DCNL : param path : File to remove . DCNL : return : True if file exists , False otherwise . &apos;
&apos;Parses the content _ type and returns a tuple ( content , end ) tuples . DCNL For example : DCNL &gt; &gt; &gt; parse _ content ( \ &apos; http : / / html / xml \ &apos; ) DCNL &#91; 1 , 2 , 3 , 3 &#93; DCNL &gt; &gt; &gt; parse _ content ( &#91; \ &apos; text / xml \ &apos; , \ &apos; text / html \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; parse _ content ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL u \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; parse _ content ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL u \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; parse _ content ( &#91; \ &apos; red \ &apos; , \ &apos; blue \ &apos; , \ &apos; text / html \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; parse _ content (
&apos;Render a block of the block . DCNL Usage : : DCNL { % load _ block _ action % } DCNL { % load _ block _ action % } DCNL { % load _ block % } DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % endfor % } DCNL &lt; / ul &gt; DCNL { % load _ block _
&apos;Set an entry in an entry . &apos;
&apos;Compute the probability of * x * * x * * y * * x * * 2 * * y * * DCNL Parameters DCNL * args : * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 2 * * 4 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * * 2 * y * * 2
&apos;Create extra fill loops for all other loops . &apos;
&apos;Takes a phone number and converts it to a phone number . DCNL Raises ValueError if the phone number does not exist . &apos;
&apos;unary _ expression : MINUSMINUS unary _ expression&apos;
&apos;Ensure that `directory` exists . &apos;
&apos;Executes the summarize ( ) function in a series of probabilities . DCNL Args : DCNL features : A list of training data . DCNL labels : A list of training vectors . DCNL num _ samples : The number of training data to extract . DCNL f : A function to extract the data in each class . DCNL Returns : DCNL A list of ( probability , class ) tuple . &apos;
&apos;Retrieve a record for the given zone _ id . DCNL : param zone _ id : Zone to get the record for . DCNL : type zone _ id : ``str`` DCNL : param record _ id : The record ID . DCNL : type record _ id : ``str`` DCNL : param profile : The profile ID DCNL : type profile : ``str`` DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion libcloud _ dns.get _ record google.com profile1&apos;
&apos;Displays whether the computer is running on . DCNL : return : A boolean value representing whether the computer is on . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; system.get _ restart _ power _ failure
&apos;Plot translucent plot data for the central plot . DCNL Parameters DCNL ax : `Axes` DCNL an Axes instance to plot to DCNL x : array _ like , optional DCNL The function to plot . DCNL y _ data : array _ like DCNL The data point to plot . DCNL x0 : array _ like , optional DCNL The actual color code for the plot . DCNL alpha : float DCNL The actual color code for the plot . DCNL args : list , optional DCNL The color data for the plot . DCNL kwargs : list , optional DCNL Extra arguments to apply to the integration test . DCNL Returns DCNL fig : array , shape ( n _ samples , ) DCNL Array of plot data . &apos;
&apos;Return a list of raw percentage data for the given filter data . DCNL : param filter _ data : Filters out the data to be used . DCNL : return : True if the percentage is complete , False otherwise . &apos;
&apos;Encrypt stream with the specified stream . &apos;
&apos;Returns a query list of the given query . DCNL : param query : A query string . DCNL : type query : dict DCNL : param divider : ( optional ) string to use for the query . DCNL : type divider : str DCNL : return : List of matching query strings . &apos;
&apos;Return the parent directory for the given path . &apos;
&apos;Load an instance of module \ &apos; s sources and load them DCNL : return : A dictionary of ( module , source _ source , source _ source ) DCNL : rtype : dict&apos;
&apos;Given a list of resource classes , return the list of resource classes DCNL : param alias : the name of the alias DCNL : param alias : the alias for the alias DCNL : return : the list of resource classes DCNL : rtype : dict&apos;
&apos;OSX uses the current wiki instance . &apos;
&apos;Download the data from Stanford \ &apos; s website , unless it \ &apos; s already here . &apos;
&apos;Set the range _ index field in the range &#91; lower _ bound &#93; . &apos;
&apos;Retrieve the log for the given pid from the current process . DCNL : param pid : PID of the process . DCNL : type pid : str DCNL : return : The log file for the current process . &apos;
&apos; &gt; &gt; &gt; plot _ positions _ figure ( &#91; \ &apos; x \ &apos; , \ &apos; red \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; gray \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; gray \ &apos; ) &apos;
&apos;Don \ &apos; t get non-existent config files . &apos;
&apos;Run a single file , recursively . DCNL Return a list of success , stderr , or None if no file is found . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; file.hadoop _ list / path / to / file&apos;
&apos;Add the given string to the beginning of the string . &apos;
&apos;This is a wrapper around : DCNL https : / / github.com / ryankiros / skip-thoughts / blob / master / skip-thoughts / blob / master / skip-thoughts / &apos;
&apos;This function returns a subset of the given data . DCNL Parameters DCNL f : array _ like DCNL Numerator polynomial coefficients . DCNL f : array _ like DCNL Numerator polynomial coefficients . DCNL f : array _ like DCNL Numerator polynomial coefficients . DCNL Examples DCNL &gt; &gt; &gt; from scipy import ndimage , misc DCNL &gt; &gt; &gt; from scipy import test DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; d = Normal ( \ &apos; a \ &apos; ) DCNL &gt; &gt; &gt; f = Normal ( \ &apos; a \ &apos; ) DCNL &gt; &gt; &gt; plt.gray ( ) # doctest : + SKIP DCNL &gt; &gt; &gt; plt.gray ( ) # doctest : + SKIP DCNL &gt; &gt; &gt; plt.gray ( ) # doctest : + SKIP DCNL &gt; &gt; &gt; plt.gray ( ) # doctest : + SKIP DCNL &gt; &gt; &gt; plt.gray ( ) # doctest : + SKIP DCNL &gt; &gt; &gt; plt.gray ( ) # doctest : + SKIP DCNL &gt; &gt; &gt; plt.gray ( ) # doctest : + SKIP DCNL &gt; &gt; &gt; plt.gray ( ) # doctest : + SKIP DCNL
&apos;Escapes an extra \ &apos; s extra specs . DCNL : param unicode extra : The extra parameter to convert . DCNL : rtype : str&apos;
&apos;Parse gcode text from the beginning and end of text . &apos;
&apos;Display the versions of versions and their versions DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; test.versions _ report
&apos;Run an _ control _ control function and return the exit code . &apos;
&apos;Best effort to get information about noise . DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . ISBN : 978-0716724117&apos;
&apos;Launch a \ &apos; http : / / localhost : 8000 \ &apos; , using the \ &apos; mac \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; mac \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , DCNL \ &apos; mac \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; 127.0.0.1 \ &apos; , \ &apos; port \ &apos; , \ &apos; mtu \ &apos; , DCNL \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; port \ &apos; , \ &apos; 127.0.0.1 \ &apos; , \ &apos; 127.0.0.1 \ &apos; , \ &apos; 127.0.0.1 \ &apos; , \ &apos; 127.0.0.1 \ &apos; , \ &apos; 127.0.0.1 \ &apos; , \ &apos;
&apos;Ensure that the config is a valid config . DCNL : param config : the config dictionary DCNL : rtype : dict&apos;
&apos;Try to convert the values to the range &#91; 0,255 &#93; , if necessary . DCNL If \ &apos; default \ &apos; is True , don \ &apos; t support it , unless \ &apos; offset \ &apos; is True . DCNL If \ &apos; default \ &apos; is True , don \ &apos; t support it . &apos;
&apos;Cache the value of the cached function so that it can be cached . &apos;
&apos;This is a convenience wrapper for Scipy ( s ) . DCNL Parameters DCNL f : ( M , N ) array _ like DCNL Input array . DCNL Returns DCNL K : ndarray , ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , DCNL ( M , N ) , ( M , N ) , ( M , N ) , ( M , N ) , ( T , T ) ) DCNL Notes DCNL For more details , see : https : / / github.com / astropy / astropy / issues / 3713&apos;
&apos;Check all tasks in a queue . DCNL Returns a dictionary with the following keys : DCNL - sync _ task ( task _ id , task _ id ) DCNL - sync _ task ( task _ id , task _ id ) DCNL - sync _ task ( task _ id , task _ id ) DCNL - sync _ task ( task _ id , task _ id ) DCNL - sync _ task ( task _ id , task _ id ) DCNL - sync _ task ( task _ id , task _ id ) DCNL - sync _ task ( task _ id , task _ id ) DCNL - sync _ task ( task _ id , task _ id ) DCNL - sync _ task ( task _ id , task _ id ) DCNL - sync _ task ( task _ id , task _ id ) DCNL - sync _ task ( task _ id , task _ id ) DCNL - sync _ task ( task _ id , task _ id ) DCNL - sync _ task ( task _ id , task _ id ) DCNL -
&apos;Return the configuration of the specified option DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pillar.option &lt; option &gt; &apos;
&apos;Set the number of sockets connected to the socket , and wait for DCNL the socket on the server . This is useful for debugging . DCNL This function is meant to be used when running a connection on the DCNL server , and we need to wait for the connection on the server . &apos;
&apos;Context manager that creates a new app . This is useful if you want DCNL to create a new database . This is useful if you want to create a DCNL database . This is useful if you want to create a new database . This is DCNL useful when you want to create a new database . This is useful DCNL for things like this : : DCNL @ service.celery ( ) DCNL def my _ app ( ) : DCNL ... print ( self ) : DCNL ... print ( &quot; My Test &quot; ) &apos;
&apos;Split a single statement into a list of statements . DCNL For example : : DCNL &gt; &gt; &gt; from Bio import GenBank DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; list ( split _ statement ( ) ) DCNL &#91; ( 1 , 2 ) , ( 2 , 4 ) , ( 2 , 4 ) , ( 2 , 4 ) , ( 2 , 4 ) , ( 2 , 4 ) , ( 2 , 4 ) , ( 2 , 4 ) , ( 2 , 4 ) , ( 2 , 4 ) , ( 2 , 4 ) , ( 2 , 4 ) , ( 2 , 4 ) , ( 2 , 4 ) &#93; ) &apos;
&apos;For the given data , generate a friendly representation of the DCNL given data DCNL Parameters DCNL data : str DCNL The data to be written DCNL encoding : str DCNL The encoding of the data DCNL Returns DCNL DataFrame DCNL A numpy array containing the following keys : DCNL &#124; \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , DCNL \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , DCNL \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , DCNL \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos; bad \ &apos; , \ &apos;
&apos;Connect to the server . DCNL This is done for the user and login to the server . &apos;
&apos;Recursively return a list of all items in a list . DCNL : param filter _ : List of nested lists DCNL : param thing : A list of nested lists DCNL : return : A list of lists that can be converted to a list of tuples . DCNL : rtype : list&apos;
&apos;Return the indentation level level for a given level . DCNL If level is not specified , the default level is returned . &apos;
&apos;Deletes the specified probes from the probes . &apos;
&apos;Login to a user . DCNL Templates : http : / / code.google.com / apis / accounts / AuthForInstalledApps.html # Request DCNL for more details . DCNL Args : DCNL request ( HttpRequest ) DCNL template _ name ( str ) : Name of the user to authenticate to . DCNL redirect _ field ( str ) : Name of the user to add to . DCNL default _ url ( str ) : The URL to add to the user . DCNL default _ context ( str ) : If provided , the user will be logged in . DCNL Returns : DCNL None&apos;
&apos;Run a task on a task . DCNL : param task : task to check DCNL : param out _ queue : the queue to check DCNL : return : True if complete , False otherwise . &apos;
&apos;Remove a package from a package . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.remove &lt; package name &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt; DCNL salt \ &apos; * \ &apos; pkg.remove &lt; package1 &gt; , &lt; package2 &gt; , &lt; package3 &gt;
&apos;Creates a fake database config that can be used to create DB tables DCNL on the database . &apos;
&apos;Return a dictionary of encryption headers that can be used to access the DCNL encryption key . &apos;
&apos;Returns an object attribute for the given reverse name . &apos;
&apos;Checks if a user is available for this user . DCNL : param user : The user to check for . DCNL : param descriptor : The object to check for . DCNL : return : True if the user is available , False otherwise . &apos;
&apos;Send packets at layer 3 DCNL nofilter : put 1 to avoid use of bpf filters DCNL retry : if positive , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many times to resend unanswered packets DCNL if negative , how many
&apos;Clear cached caches from the previous clear _ caches call . &apos;
&apos;Returns the boolean value of the value \ &apos; s length . &apos;
&apos;List all available returner modules . DCNL : param dict opts : The Salt options dictionary DCNL : param dict return: The list of keys to include in the minion DCNL : returns : LazyLoader instance , with all available returner modules DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; sys.list _ returner DCNL salt \ &apos; * \ &apos; sys.list _ returner DCNL salt \ &apos; * \ &apos; sys.list _ returner _ dirs&apos;
&apos;Encode a string DCNL .. versionadded : : 2014.7.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; hashutil.base64 _ b64decode \ &apos; Z2V0IHNhbHRlZAo = \ &apos; &apos;
&apos;Return an iterator over the ( key , value ) pairs of a dictionary . &apos;
&apos;Encode text using `incoming` if they \ &apos; s not . DCNL : param text : Text to encode . DCNL : param incoming : Text to encode . DCNL : param encoding : encoding to decode . DCNL : param errors : Errors handling . &apos;
&apos;Retrieve the storage hash for the storage storage object . DCNL If * storage * is None , the storage object will be returned . &apos;
&apos;tests that we get a debug value when debugger is no DCNL debugger and raise an exception when debugger is unavailable . &apos;
&apos;Return true if the config value is a default config value . &apos;
&apos;Tries to find the rate based on the given ID . DCNL : param context : behave context DCNL : param id _ id : The id of the action DCNL : type val : int DCNL : param val : The value to wait for the rate DCNL : type val : int DCNL : return : Nothing . DCNL : rtype : bool&apos;
&apos;Download the client from the docker client DCNL : param timeout : The timeout for the server DCNL : type timeout : int DCNL : return : The client DCNL : rtype : dict DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; docker.get _ client &lt; timeout &gt; DCNL salt \ &apos; * \ &apos; docker.get _ client &lt; timeout &gt; &apos;
&apos;Takes a list of integers and converts it to a tuple of ( x , y ) tuples . DCNL If the number of colors is not a positive integer , it will be converted to a DCNL float . Otherwise , returns the number of colors . Otherwise , returns DCNL the number of colors . Otherwise , returns the number of colors . &apos;
&apos;exprlist : exprlist COMMA expression&apos;
&apos;relational _ expression : relational _ expression GT shift _ expression&apos;
&apos;Tries a series of functions in a context . DCNL `context` is a dictionary mapping names to names . DCNL For example : DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL tryall ( globals ( ) ) DCNL prints
&apos;Get the profile module name for the given plugin type . &apos;
&apos;Compute nt zeros of the Kelvin function kei ( x ) . DCNL References DCNL .. &#91; 1 &#93; Zhang , Shanjie and Jin , Jianming . &quot; Computation of Special DCNL Functions &quot; , John Wiley and Sons , 1996 . DCNL http : / / jin.ece.illinois.edu / specfunc.html&apos;
&apos;Returns a string with the article + the word . &apos;
&apos;Parse a results file and return it as a string . DCNL @ param results _ file : file contents of a file . DCNL @ type results _ file : str DCNL @ return : True if successful , False otherwise . DCNL @ rtype : L { str } &apos;
&apos;Tests that max revision match for the in-DB revision and revision match . &apos;
&apos;Returns JSON representation of the given JSON response . &apos;
&apos;Sample from the normal distribution with respect to the given DCNL distribution . DCNL Parameters DCNL dist : array _ like DCNL The data to evaluate . DCNL func : callable DCNL The function to check . DCNL Returns DCNL rvs : ndarray , shape ( n _ samples , n _ features ) DCNL The variance of the normal distribution . DCNL Examples DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; x = np.array ( &#91; &#91; 1 , 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; v1 =
&apos;Perform any embedded web application rather than C { root } . DCNL @ param root : The root root . DCNL @ type root : L { str } DCNL @ param routes : An iterable starting with C { root } , C { None } , or C { None } . DCNL @ type openid : C { None } DCNL @ return : C { None } &apos;
&apos;Parameters DCNL * * * kw : keyword arguments DCNL * * kw : keyword arguments passed to ``func ( * args , * * kw ) `` DCNL * * kw : keyword arguments passed to ``func ( * args , * * kw ) ``&apos;
&apos;Helper function for helper function . DCNL Parameters DCNL inp : str DCNL The input array . DCNL length : int DCNL The length of the input . DCNL direction _ type : str , optional DCNL The type of the input . DCNL name : str , optional DCNL The name of the input . DCNL name : str , optional DCNL The name of the input . DCNL kwargs : str , optional DCNL The name of the parameter . DCNL kwargs : dict , optional DCNL The keyword arguments passed to the optimizer . DCNL kwargs : keyword arguments , optional DCNL The keyword arguments passed to the optimizer . DCNL kwargs : keyword arguments DCNL Passed through to the given function . DCNL Returns DCNL NumPy ndarray DCNL The transformed input . &apos;
&apos;Generates a random alphanumeric string of given length . DCNL length : The length of the random string . &apos;
&apos;Gets the scheme name for the given element . DCNL Parameters DCNL node _ ns : str DCNL The name of the node . DCNL name : str DCNL The name of the widget . &apos;
&apos;Return a list of changesets with each email in the mapping . &apos;
&apos;Helper function to return the number of ordered items in the iterable . &apos;
&apos;Pull out an image from the given url and index . DCNL : param url : URL for the repository DCNL : param name : name of the file to pull from DCNL : param index : index of the file to pull from DCNL : return : absolute path to the pull request file&apos;
&apos;Determine if we should wait for the managed cloud automation before DCNL running . Either \ &apos; False \ &apos; ( default ) or \ &apos; True \ &apos; . &apos;
&apos;Fail if the given exception raises an exception with the given DCNL arguments . DCNL Parameters DCNL exception _ class : callable DCNL The exception class to check . DCNL expected _ regexp : str DCNL The expected type of the exception . DCNL callable _ obj : callable DCNL The function to pass to the function . DCNL kwargs : keyword args , optional DCNL Extra arguments to pass to the function . &apos;
&apos;Delete the files in the list of files . DCNL : param FilePath path : The path to the file to delete . DCNL : param argv : The list of files to delete . DCNL : param bool result : If ``True`` , don \ &apos; t want the files to be deleted . DCNL : param force : If True , don \ &apos; t want to disable all files . DCNL : return : True if the files are deleted , False otherwise . &apos;
&apos;A decorator that will wait for the provided option to switch to the DCNL : class : `Action decorator . DCNL : param param : DCNL : param param : DCNL : type param : DCNL : param kwargs : DCNL : type attrs : DCNL : param kwargs : DCNL : type attrs : DCNL : param kwargs : DCNL : type attrs : DCNL : param kwargs : DCNL : type attrs : list &#91; str &#93; DCNL : param kwargs : DCNL : type kwargs : DCNL : param kwargs : DCNL : type attrs : DCNL : param kwargs : DCNL : type attrs : DCNL : return : DCNL : rtype : &apos;
&apos;List of workers that are scheduled , in seconds . &apos;
&apos;Create a single tensor variable . DCNL Parameters DCNL layer _ cls : class DCNL The class to be tested . DCNL kwargs : list of ints DCNL The shape of the tensor . DCNL input _ shape : tuple of ints , optional DCNL The shape of the input tensor . DCNL input _ data : int , optional DCNL The length of the input tensor . DCNL expected _ output : int , optional DCNL The length of the input tensor . DCNL expected _ output _ size : int , optional DCNL The expected output of the input tensor . DCNL expected _ output _ size : int , optional DCNL The expected output of the input tensor . DCNL expected _ batch _ size : int , optional DCNL The expected output of the input tensor . DCNL expected _ batch _ size : int , optional DCNL The expected output of the input tensor . DCNL expected _ batch _ size : int , optional DCNL The output of the input tensor . DCNL Returns DCNL data : array DCNL The transformed data . &apos;
&apos;A helper function to create a new test for the given plugin . DCNL This function is used to create a new test for the given plugin . DCNL : param plugin _ slug : The name of the test . DCNL : type event _ slug : str DCNL : param event _ slug : The fully qualified name of the test . DCNL : type event _ slug : str DCNL : param plugin _ slug : The name of the plugin to create . DCNL : type kwargs : list DCNL : param plugin _ slug : The name of the plugin to create . &apos;
&apos;Returns True if the given AS number is Two Octet . &apos;
&apos;Return integer representation of a string . DCNL &gt; &gt; &gt; bin ( bin ( int ) ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; bin ( bin ( int ) ) DCNL u \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; bin ( bin ( int ) ) DCNL \ &apos; abc \ &apos; DCNL &gt; &gt; &gt; bin ( bin ( int ) ) DCNL \ &apos; 710000101 \ &apos; DCNL &gt; &gt; &gt; bin ( bin ( int ) ) DCNL \ &apos; 710000101 \ &apos; &apos;
&apos;Pass in a user \ &apos; s home directory and return a dict with the DCNL user \ &apos; s home directory and run it as a user object . DCNL If the user is not logged in , it will return the user \ &apos; s home directory , DCNL or None if no user has been changed . &apos;
&apos;Create an access key . DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ iam.create _ access _ key myuser&apos;
&apos;Run a function and retry it while getting EINTR errors&apos;
&apos;Validates the color of a string . DCNL Parameters DCNL s : str DCNL The string to validate . DCNL Returns DCNL s : str DCNL The string to validate . DCNL Raises DCNL ValueError DCNL If s is not a valid hex string . &apos;
&apos;Find all tests that have a given package name . This is a DCNL function that takes a list of test names and returns a list of DCNL ( name , prefix ) tuples . The first argument is a list of DCNL ( name , prefix ) tuples . The first argument is a list of DCNL ( name , prefix ) tuples . The first argument is a list of DCNL ( name , prefix ) tuples . The first argument is a list of DCNL ( name , prefix ) tuples . The first argument is a list of DCNL ( name , prefix ) tuples . The first argument is a list of DCNL ( name , prefix ) tuples . The first argument is a list of DCNL ( name , prefix ) tuples . The first argument is a list of DCNL ( name , prefix ) tuples . The first argument is a list of DCNL ( name , prefix ) tuples . The first argument is a list of DCNL ( name , prefix ) tuples . The first argument is a list of DCNL ( name , name ) pairs .
&apos;Return the list of available users for the given storage system . DCNL This is used by the following way : DCNL https : / / docs.aws.amazon.com / AWSEC2 / latest / latest / latest / latest / reference / latest / reference / latest / reference / latest / reference / latest / DCNL Args : DCNL storage _ path ( str ) : The name of the storage machine . DCNL Returns : DCNL A list of ( name , status ) pairs . &apos;
&apos;Verify if data is an object or an encoded string . &apos;
&apos;Check if the specified table exists in the current schema . DCNL This is useful if you want to check the current schema for a DCNL database . DCNL Args : DCNL table _ name ( str ) : Name of the current table . DCNL Returns : DCNL True if the specified table is in the current schema . &apos;
&apos;Set up all of the tests for each of the tests . DCNL This is useful when you want to do any extra tests from the DCNL _ _ init _ _ and older versions of the _ _ init _ _ . &apos;
&apos;Returns the number of fields in a line of a line . DCNL Given a line of a line , return a list of tuples where each DCNL column is the number of fields in the line . DCNL Returns a tuple of ( key , value ) pairs . DCNL Examples DCNL &gt; &gt; &gt; from Bio import phenotype DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; print ( x ) DCNL &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
&apos;Leapfrog integrator . DCNL From : DCNL http : / / en.wikipedia.org / wiki / Edgeworth _ series DCNL Johnson N.L. , S. Kotz , N. Balakrishnan : McGraw-Hill . DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . ISBN : 978-0716724117&apos;
&apos;Delete a blob from Blobstore . DCNL Args : DCNL blob _ key : The BlobKey of the blob . DCNL * * options : Extra options to delete . DCNL Returns : DCNL A UserRPC object . DCNL Raises : DCNL ValueError : if blob _ key does not exist . &apos;
&apos;Average Directional Movement Index Rating&apos;
&apos;Validate a year , month , etc . &apos;
&apos;Execute a single state orchestration routine DCNL .. versionadded : : 2015.5.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-run state.orchestrate _ high data = key.list _ high&apos;
&apos;Flatten nested lists . DCNL &gt; &gt; &gt; flatten ( &#91; &#91; 1 , 2 &#93; , &#91; 1 , 2 &#93; &#93; ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos;Execute self-bunch of tasks for a particular project . DCNL This function is meant to be used with the following fields : DCNL * The following fields are : DCNL * A Keyboard , Mouse , Monitor , and Experiment device will be changed . DCNL * If the user is not logged , it will be changed . &apos;
&apos;Load a class from a dotted module path . DCNL For example : : DCNL import boto3 DCNL load _ class ( \ &apos; django.core.files.uploadhandler.TemporaryFileUploadHandler \ &apos; , request ) DCNL &lt; module &gt; DCNL @ load _ class ( \ &apos; django.core.files.uploadhandler.TemporaryFileUploadHandler \ &apos; , request ) DCNL &lt; module &gt; DCNL @ load _ class ( \ &apos; django.core.files.uploadhandler.TemporaryFileUploadHandler \ &apos; , request ) DCNL &lt; module &gt; DCNL @ load _ class ( \ &apos; django.core.files.uploadhandler.TemporaryFileUploadHandler \ &apos; , request ) DCNL &lt; module &gt; DCNL @ load _ class ( \ &apos; django.core.files.uploadhandler.TemporaryFileUploadHandler \ &apos; , request ) DCNL &lt; TemporaryFileUploadHandler object at 0x ... &gt; &apos;
&apos;given a stats dict , returns a dictionary containing the stats DCNL for the given stats DCNL Parameters DCNL stats : dict DCNL The stats of the stats series to resolve . DCNL Returns DCNL trans : dict DCNL A dictionary containing the stats of the tree . &apos;
&apos;GPU convolution gradient using cuDNN from a uniform distribution . DCNL Parameters DCNL X : array _ like DCNL The input image . DCNL w : float DCNL The image to use . Default is 0 . DCNL border _ mode : int DCNL The number of pixels to use . Default is 0 . DCNL border _ mode : int DCNL The number of pixels to use . Default is 0 . DCNL border _ mode : int , optional DCNL The number of pixels to use in the input image . Default is 0 . DCNL Default is 0 . DCNL Returns DCNL out : ndarray DCNL An array with shape ( n _ images , n _ channels ) . &apos;
&apos;Run a shell command . DCNL : param cmd : Command to pass to the command DCNL : param capture : if True , return the output of the command DCNL : param env : optional arguments to pass to the command DCNL : param env : optional arguments to pass to the command DCNL : param stdin : if True , return the output of the command DCNL : param stdin : if True , return the output of the command DCNL : param stdin : if True , return the output of the command DCNL : param stdin : if True , return the output of the command DCNL : return : a tuple of ( stdout , stderr ) DCNL : rtype : tuple ( stdout , stderr ) &apos;
&apos;Get the lines with the lines from the fileName . &apos;
&apos;Checks to see if a file is locked . If the file is locked , move it to a file . DCNL If the file is already locked , move it to the file . If it is a file , it will DCNL check if the file is locked . DCNL : param checkfile : the file to write DCNL : param writeLockCheck : if True , write the file to write to the file DCNL : return : True if the file is locked , False otherwise . &apos;
&apos; .. todo : : DCNL WRITEME properly DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; system.get _ era _ id&apos;
&apos;Build the PDF file DCNL Parameters DCNL branch : str DCNL Path to the test file . &apos;
&apos;Given a series of steps to iterate over the steps in `rate` . &apos;
&apos;Raise an exception if the given keywords is valid . DCNL : param keywords : The keywords to check . DCNL : param message : The message to validate . DCNL : return : The ``ActionError`` with the appropriate message . &apos;
&apos;Strips the \ &apos; _ \ &apos; with \ &apos; _ \ &apos; and \ &apos; _ \ &apos; and \ &apos; _ \ &apos; and \ &apos; _ \ &apos; and \ &apos; _ \ &apos; . &apos;
&apos;Scenario implements _ _ repr _ _ method is called with the given scenario&apos;
&apos;Disables instance of available audio driver . &apos;
&apos;Compute the value of a variable \ &apos; s length . DCNL Args : DCNL x ( int ) : A constant string . DCNL args ( int ) : The number of elements that should be printed . DCNL Returns : DCNL A list of elements representing a constant . &apos;
&apos;Create a tarball from base _ name and base _ name DCNL If base _ dir is None , then the tarball will be returned . DCNL If * zip _ dir * is supplied , an archive will be returned . DCNL If * zip _ dir * is supplied , an archive will be returned . DCNL If * zip _ dir * is supplied , an archive will be returned . DCNL If * zip _ dir * is supplied , an archive will be returned . &apos;
&apos;Convenience function to select an event descriptor . DCNL Args : DCNL timeout : file-like object . The timeout in seconds to use . DCNL timeout : The timeout in seconds to wait for the file . DCNL timeout : The timeout in seconds to wait for the file . DCNL timeout : Optional timeout in seconds to wait for the file . DCNL Returns : DCNL A UserRPC object . DCNL Raises : DCNL TypeError : If timeout is not supported . &apos;
&apos;Quote the URL of a URL using the given URL . DCNL : param url : URL to quote . DCNL : type url : str DCNL : param encode : Base64 encoded string . DCNL : type encode : str or unicode DCNL : param charset : the charset of the URL . DCNL : type charset : str DCNL : return : The quoted string with quoted content . DCNL : rtype : str&apos;
&apos;Generate a CSV for an S3 bucket for download and upload the DCNL CSV to an S3 bucket for download . &apos;
&apos;Generate a new URL for the given URL . DCNL If the URL is not a valid URL , it is assumed to be able to DCNL serve the correct URL for the page . &apos;
&apos;Find all the files in the data directory . DCNL Parameters DCNL data _ dir : str DCNL Path to the file to find the files in . DCNL labels _ file : str DCNL Path to the labels file . DCNL Returns DCNL list DCNL List of lists of all image files . &apos;
&apos;Get the order type list in the media list . DCNL This function is used by the lexer _ type to use the precedence of the DCNL precedence . &apos;
&apos;Test Filter Label 2&apos;
&apos;Convenience function to run a test function . DCNL Arguments : DCNL args ( str ) : keyword arguments to run . DCNL * * kw : keyword arguments passed to : func : `subprocess.call` , DCNL : func : `subprocess.call` , : func : `subprocess.call` , : func : `subprocess.call` , : func : `subprocess.call` , : func : `subprocess.call` DCNL : returns : DCNL : exc : `AssertionError` . &apos;
&apos;Assert that the ``Table`` is returned . DCNL : Parameters : DCNL - `testcase` : A list of unicode strings . DCNL - `testcase` : A list of unicode strings . DCNL - `warn` : The message to use for the test case . DCNL - msg : The message to use for the test . &apos;
&apos;Main entry point to use the \ &apos; logging \ &apos; command . &apos;
&apos;Spawn a process and return its output as a Deferred . DCNL @ param executable : the name of the process to run . DCNL @ param args : The arguments to pass to the process . DCNL @ param env : the command-line arguments to pass to the process . DCNL @ param env : the command-line arguments to pass to the process . DCNL @ param errortoo : If true , the output will be appended to the exit code . DCNL @ param reactor : The reactor to use for the subprocess . DCNL @ param reactor : The reactor to use for the subprocess . DCNL @ param reactor : The reactor to use for the subprocess . DCNL @ param reactor : The reactor to use for the subprocess . DCNL @ param reactor : The reactor to use for the subprocess . DCNL @ return : A Deferred that fires with the exit code of the process . &apos;
&apos;Check if an expression is sorted . DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; is _ sorted ( exp ( 1 ) ) DCNL False DCNL &gt; &gt; &gt; is _ sorted ( exp ( 1 ) ) DCNL False DCNL &gt; &gt; &gt; is _ sorted ( exp ( 1 ) ) DCNL False DCNL &gt; &gt; &gt; is _ sorted ( exp ( 1 ) ) DCNL False DCNL &gt; &gt; &gt; is _ sorted ( exp ( 1 ) ) DCNL False DCNL &gt; &gt; &gt; is _ sorted ( exp ( 1 ) ) DCNL False DCNL &gt; &gt; &gt; is _ sorted ( exp ( 1 ) ) DCNL False DCNL &gt; &gt; &gt; is _ sorted ( exp ( 1 ) ) DCNL False DCNL &gt; &gt; &gt; is _ sorted ( exp ( 1 ) ) DCNL False DCNL &gt; &gt; &gt; is _ sorted ( exp ( 1 ) ) DCNL False DCNL &gt; &gt; &gt; is _ sorted ( exp ( 1 ) ) DCNL False DCNL &gt; &gt; &gt; is _ sorted ( exp ( 1 ) ) DCNL False DCNL &gt; &gt; &gt; is
&apos;Utility method to run a job based on all hosts in order . DCNL This is useful when you want to create a job from which we don \ &apos; t want to DCNL run the job from which we are interested in . &apos;
&apos;We need the same version as _ _ init _ _ .py for the tests . DCNL We don \ &apos; t run fix _ _ init _ _ .py and fix it . DCNL We need to fix the tests . &apos;
&apos;Checks to see if the user is not allowed or not . &apos;
&apos;Splodge a gcode linear move file . &apos;
&apos;Get information about the service service . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; docker.import &lt; service &gt; &apos;
&apos;Compute the GCD of ``f`` in ``K &#91; x &#93; `` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.domains import ZZ DCNL &gt; &gt; &gt; from sympy.polys.galoistools import gf _ LC DCNL &gt; &gt; &gt; gf _ LC ( &#91; 1 , 2 , 3 &#93; , 3 , ZZ ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos;The Markdown plugin and register it . &apos;
&apos;Called when the datastore is running on a machine . DCNL Args : DCNL device : A str , the name of the device to stop . &apos;
&apos;Annotates the tokens with lemmata for plural nouns and conjugated verbs , DCNL where each token is a &#91; word , part-of-speech &#93; list . &apos;
&apos;Test with non square input&apos;
&apos;inherit _ from _ std _ method ( node ) - &gt; list of tuples . &apos;
&apos;Build a list of arguments for the given function . DCNL Args : DCNL fn : A function that takes a function . DCNL env : A function that takes a function name and returns a list of DCNL positional arguments . DCNL Returns : DCNL A list of positional arguments . DCNL Examples : DCNL &gt; &gt; &gt; get _ arg _ list ( &#91; \ &apos; x \ &apos; , \ &apos; c \ &apos; &#93; , env ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; build _ arg _ list ( fn ( \ &apos; x \ &apos; , { \ &apos; x \ &apos; : \ &apos; c \ &apos; } ) DCNL ( \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; ) DCNL &gt; &gt; &gt; build _ arg _ list ( fn , env ) DCNL &#91; ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ,
&apos;Returns true if the given parameter is a valid Python proxy . DCNL Parameters DCNL parameter : string DCNL The parameter to check . DCNL Returns DCNL bool DCNL Whether the given parameter is a valid python proxy . &apos;
&apos;Try to interpret the output size . DCNL Parameters DCNL si : str DCNL Service instance to interpret . DCNL Returns DCNL size : int DCNL The number of seconds to interpret . &apos;
&apos;Main routine to run the command line . This is called by the DCNL command line . &apos;
&apos;Return adjacency representation of the graph . DCNL Parameters DCNL G : NetworkX graph DCNL x : node , optional DCNL The degree of the node . DCNL y : float , optional DCNL The number of nodes in the graph . DCNL Returns DCNL G : NetworkX graph DCNL The degree of the node . DCNL Raises DCNL NetworkXError DCNL If the node is not connected . DCNL Notes DCNL This function is meant to be used in order of the degree of DCNL the graph . DCNL References DCNL .. &#91; 1 &#93; P. L. Krapivsky and S. Redner , DCNL Organization of Theoretical Computer Science , 1999 . DCNL http : / / dx.doi.org / 10.1561 / 0400000010 &gt; &apos;
&apos;Add lights from the main Qwikswitch component . &apos;
&apos;Returns prefix for asset dir prefix for asset / assets . &apos;
&apos;Decorator to mark a function as sticks on a list of errors . &apos;
&apos;Load the named prefix from * prefix * with * dist * . &apos;
&apos;Migrate the database \ &apos; s columns to the database database . DCNL This should be used to store the database \ &apos; s primary table DCNL to the database . &apos;
&apos;Condense multiple units into multiple units . &apos;
&apos;Returns file for an svn transaction . DCNL Helper function for hook scripts in the svn commit mission . DCNL This function is mocked in the tests . &apos;
&apos;Gets a report class for the given name . &apos;
&apos; .. versionchanged : : Nitrogen DCNL The ``expr _ form`` argument has been renamed to ``tgt _ type`` , earlier DCNL releases must use ``expr _ form`` . DCNL Clear the cached data structure of the specified jid DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; saltutil.save _ load &lt; jid &gt; &apos;
&apos;Helper function to get the user from a given user . DCNL : param user : User object DCNL : type user : django.contrib.auth.models.User &#124; str DCNL : param service _ username : service username DCNL : type service _ username : str DCNL : return : User object DCNL : rtype : str&apos;
&apos;This function takes a list of ( n , x , y , z ) , where each column DCNL is the entry in &#91; i , j &#93; , where each entry in X &#91; i &#93; &#91; i &#93; is the DCNL index in &#91; i , j &#93; , where each entry in &#91; i , j &#93; = out.shape &#91; 1 &#93; . DCNL Parameters DCNL X : ndarray , shape ( n _ samples , n _ samples , n _ features ) DCNL Array with shape ( n _ samples , n _ features ) . DCNL Y : ndarray , shape ( n _ samples , n _ features ) DCNL Array with shape ( n , n , n , n ) , where n is the index DCNL of each row in the matrix . DCNL order : ndarray , shape ( n _ samples , n _ features ) DCNL The index of each row in the matrix . DCNL Returns DCNL indices : ndarray , shape ( n _ samples , n _ sources , n _ features ) DCNL The index of the matrix filling in the matrix
&apos;Find the horizontal edges of an image using the Prewitt transform . DCNL Parameters DCNL image : 2-D array DCNL Image image . DCNL mask : 2-D array , optional DCNL An optional mask to limit the application to a certain area . DCNL Note that pixels surrounding masked regions are also masked to DCNL prevent masked regions from affecting the result . DCNL Returns DCNL output : 2-D array DCNL The Sobel edge . DCNL See Also DCNL sobel , scharr , prewitt , feature.canny DCNL Examples DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; camera = data.camera ( ) DCNL &gt; &gt; &gt; camera = data.camera ( ) DCNL &gt; &gt; &gt; camera = data.camera ( ) DCNL &gt; &gt; &gt; camera = data.camera ( ) DCNL &gt; &gt; &gt; camera = data.camera ( ) DCNL &gt; &gt; &gt; camera = data.camera ( ) DCNL &gt; &gt; &gt; camera = data.camera ( ) DCNL &gt; &gt; &gt; camera = data.camera ( ) DCNL &gt; &gt; &gt; camera = data.camera ( ) DCNL &gt; &gt; &gt; camera = data.camera ( ) DCNL &gt; &gt; &gt;
&apos;Estimate the Gaussian log likelihood . DCNL Parameters DCNL X : array-like , shape ( n _ components , n _ features ) DCNL The data to compute the covariance matrix for . DCNL means : array-like , shape ( n _ components , n _ features ) DCNL The data to compute the covariance matrix for . DCNL covariance : array-like , shape ( n _ components , n _ features ) DCNL Estimated covariance matrix . DCNL covariance _ type : array-like , shape ( n _ features , ) DCNL The type of the covariance matrix . DCNL Returns DCNL log _ det : float , shape ( n _ components , n _ features ) DCNL Estimated covariance matrix . DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . ISBN : 978-0716724117&apos;
&apos;Generate groups of existing roles . DCNL : param obj : an object DCNL : param perm : list of strings DCNL : param perm : list of strings , groups , groups , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , group , groups , group , groups , group , group , group , group , groups , group , groups , group , groups , group , groups , group , groups , group , groups , group , groups , group , groups , group , groups , group , groups , group , groups , group , groups , group , groups , etc . DCNL : rtype : list &#91; str &#93; &apos;
&apos;Example : DCNL { % get _ filter ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; , { \ &apos; a \ &apos; : \ &apos; b \ &apos; } , \ &apos; b \ &apos; : \ &apos; b \ &apos; } ) DCNL { \ &apos; a \ &apos; : \ &apos; b \ &apos; , \ &apos; b \ &apos; : \ &apos; b \ &apos; } , \ &apos; b \ &apos; : ( \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; : \ &apos; b \ &apos; } ) DCNL &gt; &gt; &gt; get _ filter ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; get _ filter ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93;
&apos;Remove a single line from a single line . &apos;
&apos;Return a neighbor of _ filter for given ip address if exists . DCNL Parameters : DCNL name ( str ) : Name of the neighbor . DCNL route _ args ( str ) : Name of the neighbor . DCNL route _ args ( dict ) : List of prefix for the neighbor . &apos;
&apos;Get config object , return a connection object DCNL : param dict : DCNL : type dict : str DCNL : return : DCNL : rtype : dict&apos;
&apos;Validate the RequestStatus if it is valid . DCNL Args : DCNL number _ number ( str ) : The number to validate . DCNL Returns : DCNL str : The requested price string . &apos;
&apos;Get the full path of a file with the given filename . DCNL Parameters DCNL files _ path _ list : list of str DCNL Path to the file path . DCNL filename : str DCNL The name of the file . DCNL Returns DCNL name : str DCNL The name of the file . DCNL Examples DCNL &gt; &gt; &gt; get _ file _ title ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL \ &apos; / foo / bar / baz \ &apos; DCNL &gt; &gt; &gt; get _ file _ title ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL \ &apos; / foo / bar / baz \ &apos; DCNL &gt; &gt; &gt; get _ file _ title ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos;
&apos;Given a query , return a list of shards for the given query . DCNL Intended to be used by gis _ query ( ) DCNL &gt; &gt; &gt; query _ idmap ( \ &apos; ... \ &apos; ) DCNL &gt; &gt; &gt; query _ city ( query ) DCNL &#91; \ &apos; city \ &apos; , \ &apos; city \ &apos; , \ &apos; city \ &apos; , \ &apos; city \ &apos; , \ &apos; city \ &apos; , \ &apos; voltage \ &apos; &#93; DCNL &gt; &gt; &gt; query _ book ( query ) DCNL &#91; \ &apos; city \ &apos; , \ &apos; city \ &apos; , \ &apos; voltage \ &apos; &#93; DCNL &gt; &gt; &gt; query _ book ( query ) DCNL &#91; \ &apos; city \ &apos; , \ &apos; city \ &apos; , \ &apos; voltage \ &apos; &#93; DCNL &gt; &gt; &gt; query _ book ( query ) DCNL &#91; \ &apos; city \ &apos; , \ &apos; city \ &apos; , \ &apos; voltage \ &apos; &#93; DCNL &gt; &gt; &gt; query _ book ( query ) DCNL &#91; \ &apos; city \ &apos; , \ &apos; city \ &apos;
&apos;Returns True if there are any extra whitespace in the given DCNL node . &apos;
&apos;Require several deb packages to be uninstalled . DCNL Example : : DCNL from fabtools import require DCNL require.portage.nopackages ( &#91; DCNL \ &apos; perl \ &apos; , DCNL \ &apos; php5 \ &apos; , DCNL \ &apos; ruby \ &apos; , &apos;
&apos;Get a list of colors of the given palette . DCNL Parameters DCNL palette : list of strings DCNL List of colors . DCNL funcs : list &#91; str &#93; DCNL List of all colors . DCNL Returns DCNL colors : list of lists DCNL List of all colors . &apos;
&apos;Return the time format for a given locale . DCNL : param format : the format name DCNL : type format : string DCNL : param locale : the `Locale` object , or a locale string DCNL : param locale : the `Locale` object , or a locale string DCNL : return : the formatted time format DCNL : rtype : string&apos;
&apos;Return a : class : `.Alias` subclass with the DCNL : class : `.Alias` subclass . DCNL : param name : the name of the alias to be inspected . DCNL : param name : the name of the alias to : class : `.Alias` object . DCNL : param x : The full name of the alias to : class : `.Alias` object . DCNL : return : a : class : `.Alias` subclass with the DCNL : class : `.Alias` subclass . &apos;
&apos;Clean up a single HTML document and clean it from a buffer . DCNL This is useful for debugging purposes , so that it \ &apos; s possible to DCNL clean up the end of the file . This is useful for unit tests . &apos;
&apos;Display the repository to display if the repository is pushed to . &apos;
&apos;Wrapper for : func : `get _ cors _ to _ handler ( ) method . DCNL This function will return a handler for the decorated function . DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; saltutil.handler _ setup &lt; app &gt; &apos;
&apos;Get a number rounded to a decimal point . &apos;
&apos;Create a database object for the given name . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ apigateway.create _ read _ policy name _ name = \ &apos; { &quot; Statement &quot; : &quot; integration.modules.sysmod.SysModuleTest.test _ valid _ docs &quot; , &quot; name &quot; : &quot; arn : : : : &quot; , &quot; name &quot; : &quot; arn : : : : &quot; , &quot; name &quot; : &quot; arn : : : : &quot; , &quot; name &quot; : &quot; arn : : : : : / / localhost : 80 &quot; } \ &apos; &apos;
&apos;Context manager that checks if user is owner of group with user \ &apos; s revisions DCNL based on user \ &apos; s revisions . DCNL : param group _ pk : pk of user to change DCNL : type group _ pk : int DCNL : param user _ pk : pk of user to change DCNL : type old _ status : int DCNL : param new _ status : int DCNL : type new _ status : int DCNL : return : boolean&apos;
&apos;cyclic _ metasploit ( alphabet = string.ascii _ lowercase , n = string.ascii _ lowercase , n = string.ascii _ lowercase ) ) DCNL Arguments : DCNL length ( str ) : The length of the character DCNL `alphabet` : The alphabet to use for encoding&apos;
&apos;Generate a set of images for a given dataset . DCNL Args : DCNL name : Name of the image . DCNL images : A list of images . DCNL vocab : A Vocabulary object . DCNL num _ shards : The number of shards for each image . DCNL Returns : DCNL A list of dictionaries containing the names of the images . &apos;
&apos;Detach a managed policy to a user . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ iam.detach _ user _ policy mypolicy myrole&apos;
&apos;Scan a device device for a device device . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; bluetooth.noscan hci0&apos;
&apos;Create a dask DataFrame from a Castra . DCNL Parameters DCNL x : DataFrame or DataFrame DCNL columns : list of str , optional DCNL The columns to extract . Default is None . DCNL index : bool , optional DCNL If True , index all columns from a DataFrame . DCNL Returns DCNL DataFrame&apos;
&apos;Like execute _ from _ command ( ) , but by manage.py , a DCNL project-specific django-admin.py utility . &apos;
&apos;A helper method to determine the default value for a given field . DCNL Args : DCNL field : A FieldDescriptor for this field . DCNL Returns : DCNL An instance of the class that was added to the class . DCNL Raises : DCNL ValueError : if the field is not an instance of the class . &apos;
&apos;Create a new figure manager instance for the given figure . &apos;
&apos;Return graph with one or more vertices in a graph . DCNL Parameters DCNL create _ using : graph , optional DCNL The graph to read from . DCNL Returns DCNL G : NetworkX graph DCNL A NetworkX graph . &apos;
&apos;Return the path to the script \ &apos; s data directory . DCNL : param f : File-like object to get the data from . DCNL : type f : str DCNL : return : path to the script file . DCNL : rtype : str DCNL : returns : The full path to the script file . &apos;
&apos;RQ PDP CONTEXT ACCEPT Section 9.4.8&apos;
&apos; &gt; &gt; &gt; encryptMessage ( \ &apos; HDarji \ &apos; , \ &apos; Akij ra Odrjqqs Gaisq muod Mphumrs \ &apos; ) DCNL \ &apos; Akij ra Odrjqqs Gaisq muod Mphumrs . \ &apos; &apos;
&apos;Returns a string identifying the Python version DCNL e.g. \ &apos; 2.2 \ &apos; , \ &apos; 2.2 \ &apos; , \ &apos; python \ &apos; , \ &apos; 2.2 \ &apos; , etc . &apos;
&apos;Return a 2-tuple of ( n , n ) pairs , where each element of DCNL * n * is a sequence of 2-tuples ( n , n ) , where n is a DCNL prime number , where each element is a sequence of 2-tuples ( n , n ) DCNL where n is the number of pairs in the form : : DCNL &#91; ( n * * 2 , * * kw ) , ( n * * 2 , * * kw ) , ( n * * 2 , * * kw ) &#93; &apos;
&apos;A wrapper around print _ wrapper ( ) . &apos;
&apos;Test for issue https : / / github.com / astropy / astropy / issues / 160&apos;
&apos;Returns a numpy array containing the accuracy of the prediction , DCNL or an array of probabilities if it is a scalar , or an array of DCNL values in exog and an array of values . DCNL If sparse _ labels is None , it is used to determine the prediction of DCNL the accuracy of the softmax . DCNL Parameters DCNL self : ndarray , shape ( n _ samples , n _ features ) DCNL Array of variable data ( or float array ) DCNL transform : scalar or array , optional DCNL Model instance , if None , will be converted to an array of DCNL values . DCNL transform : bool , optional ( default = True ) DCNL If True , compute the accuracy of the softmax . DCNL row _ labels : boolean , optional ( default = True ) DCNL If True , return a boolean array containing the value of the DCNL column of the model . DCNL row _ labels : boolean , optional ( default True ) DCNL If True , return a boolean array containing the value of the DCNL column of the matrix . If None ,
&apos;Fetches a Google Cloud Storage bucket for the given bucket name . DCNL Args : DCNL bucket _ name : A str , the name of the bucket to retrieve . DCNL Returns : DCNL A dictionary containing the encoded bucket and bucket name . &apos;
&apos;Check whether obj is not a valid Live API object . DCNL : param obj : DCNL : param e : DCNL : return : &apos;
&apos;Require an Apache site to be enabled . DCNL This will cause Apache to reload its configuration . DCNL from fabtools import require DCNL require.apache.site _ enabled ( \ &apos; rewrite \ &apos; ) &apos;
&apos;Read a single graph from a file . DCNL Parameters DCNL path : string DCNL The path to the file . DCNL comments : str or None DCNL The file to write to . DCNL delimiter : string , optional DCNL The name of the file . DCNL create _ using : bool , optional DCNL If not None , the file will be added to the node . DCNL Filenames ending in .gz or .bz2 will be compressed . DCNL container : string DCNL The name of the file . DCNL encoding : string , optional DCNL The name of the file . DCNL encoding : string , optional DCNL The encoding of the node . DCNL Raises DCNL NetworkXNoPath DCNL If no path is found . DCNL Examples DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; nx.write _ weighted _ edgelist ( path , \ &apos; red \ &apos; ) DCNL &gt; &gt; &gt; nx.write _ weighted _ edgelist ( path , \ &apos; node \ &apos; ) DCNL &gt; &gt; &gt; nx.write _ weighted _ edgelist ( path , \ &apos; node \ &apos; ) DCNL &gt; &gt; &gt;
&apos;Return a boolean indicating whether the given number is less than the DCNL given tolerance . DCNL Examples DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt;
&apos; \ d + &apos;
&apos;Write a lowpass filter to a given width . DCNL Parameters DCNL filename : str DCNL The name of the file to write to . DCNL Returns DCNL x : array DCNL A tuple of ( width , height , width , height ) of the image . DCNL Examples DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; x =
&apos;Compute the covariance matrix for testing . DCNL Parameters DCNL X : array-like , shape ( n _ samples , n _ features ) DCNL Training data . DCNL assume _ sample : bool , optional ( default = True ) DCNL If True , the covariance matrix is used . DCNL Returns DCNL cov : ndarray , shape ( n _ samples , n _ features ) DCNL Estimated solution&apos;
&apos;Return True if a Python `virtual environment` _ is . DCNL .. versionadded : : 2015.5.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; win _ virtualenv _ no _ global \ &apos; http : / / www.virtualenv.org / &apos;
&apos;Return the value of an SQL query string DCNL .. versionadded : : 2015.8.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; net.packet _ value&apos;
&apos;Assert that the given exception raises an exception&apos;
&apos;Return a list of network interfaces DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -f network _ list opennebula&apos;
&apos;Helper to patch a test function that can be used by the DCNL test _ class _ functions ( ) mapping . &apos;
&apos;Emulates the behavior of ``mkdir -p`` . &apos;
&apos;Separate `filename` content as docstring code DCNL Returns DCNL docstring : str DCNL docstring of `filename` DCNL Returns DCNL docstring : str DCNL docstring of `filename` DCNL Returns DCNL docstring : str DCNL docstring of `filename` DCNL Returns DCNL docstring : str&apos;
&apos;Make sure the output of a test with the correct type data is valid . DCNL This test does not work with the test data data with a different type of DCNL the test data data . &apos;
&apos;The restful handler for requests . DCNL : param request : request context DCNL : type request : django.http.HttpRequest DCNL : param ordered _ product _ id : id of the product to be rendered DCNL : type ordered _ product _ id : str DCNL : param response _ format : the response to be rendered DCNL : type response _ format : str DCNL : param response _ format : the response to be rendered DCNL : type response _ format : str&apos;
&apos;snmp tests DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; win _ snmp _ params&apos;
&apos;Return the sum of squares of the sum of squares with `n` elements . DCNL Examples DCNL &gt; &gt; &gt; from sympy.solvers.diophantine import sum _ of _ squares DCNL &gt; &gt; &gt; _ sum _ of _ squares ( 4 ) DCNL True DCNL &gt; &gt; &gt; _ sum _ of _ squares ( 4 ) DCNL True DCNL &gt; &gt; &gt; _ sum _ of _ squares ( 4 ) DCNL True DCNL &gt; &gt; &gt; _ sum _ of _ squares ( 4 ) DCNL True DCNL &gt; &gt; &gt; _ sum _ of _ squares ( 4 ) DCNL True DCNL &gt; &gt; &gt; _ sum _ of _ squares ( 4 ) DCNL True DCNL &gt; &gt; &gt; _ sum _ of _ squares ( 4 ) DCNL True DCNL &gt; &gt; &gt; _ sum _ of _ squares ( 4 ) DCNL True DCNL &gt; &gt; &gt; _ sum _ of _ squares ( 4 ) DCNL True DCNL &gt; &gt; &gt; _ sum _ of _ squares ( 4 ) DCNL True DCNL &gt; &gt; &gt; _ sum _ of _ squares ( 4 ) DCNL True DCNL &gt; &gt; &gt; _ sum _
&apos;Update the Glance metadata for a volume by copying all of the key : value pairs DCNL from the originating volume . If it does not exist , it will retain the DCNL original metadata . &apos;
&apos;Get a list of perimeter statistics for a given coord . DCNL Parameters DCNL coord : int DCNL The coordinate of the coord matrix . DCNL projection : int DCNL The projection matrix to use for the perimeter . DCNL Returns DCNL perimeter _ rotation _ width : int DCNL The size of the polygon perimeter . &apos;
&apos; .. todo : : DCNL WRITEME&apos;
&apos;Encode a bytestring in plain format , filter them with \ &apos; n \ &apos; . &apos;
&apos;Set media instance . DCNL @ param p _ ml : a media list instance . DCNL @ param p _ md : media instance . &apos;
&apos; @ param target _ dict : A dictionary of configuration paths . DCNL @ type target _ dict : L { dict } DCNL @ param config _ name : The name of the configuration file . DCNL : type config _ name : str DCNL @ param vars : The environment variables to use . &apos;
&apos;Returns the maximum of the maximum along axis along axis along axis . DCNL If axis = None , the default axis is used . &apos;
&apos;Decorator for views that checks that the user is logged in and is a staff DCNL member , redirecting to the login page if necessary . &apos;
&apos;Convert a set of coils to a fiff format . DCNL Parameters DCNL trans : dict DCNL The set of coils . DCNL Returns DCNL is _ coils : dict DCNL The set of coils . &apos;
&apos;Returns a tuple of ( n , q ) pairs for the given number of DCNL frequencies . DCNL Parameters DCNL v : array _ like , shape ( n _ samples , n _ features ) DCNL Input array . DCNL X : array _ like , shape ( n _ samples , n _ features ) DCNL The order of the sample . DCNL Returns DCNL out : ndarray ( int , ndim = 1 ) DCNL The frequencies of a function . DCNL Examples DCNL &gt; &gt; &gt; from sympy import guess _ for _ rational _ rational DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; len ( p ) DCNL ( \ &apos; a \ &apos; , \ &apos; r \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) , ( \ &apos; a \ &apos; ) ,
&apos;Generate a list of strings from a list of tokens . DCNL The list of strings are replaced by a list of strings , each of the DCNL strings are replaced with the same length . DCNL Args : DCNL total _ strings ( list of strings ) : List of strings to generate strings from . DCNL string _ length ( str ) : The length of the string to be generated . DCNL Returns : DCNL list ( list ) : List of strings of the common strings . &apos;
&apos;Parse a list of requirements and returns a list of strings . DCNL The first argument is a list of strings , where each item is a DCNL list of strings . The first argument is a list of strings , DCNL and the second element is a list of strings . The first element DCNL is a list of strings . The first element is a list of DCNL strings , where each line is a list of strings . The first DCNL element is a list of strings . The first element is a list DCNL of strings containing the following keys : DCNL &gt; &gt; &gt; parse _ requirements ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; parse _ requirements ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos;
&apos;Get the value of a DynamoDB table . DCNL Args : DCNL val ( str ) : The value of the DynamoDB table . DCNL Returns : DCNL List of ( name , value _ type ) : &apos;
&apos;Add table labels to the specified widget DCNL : param widget : widget DCNL : type widget : str DCNL : param items : List of items DCNL : type items : dict DCNL : return : int&apos;
&apos;Retrieve the hash type of the given request . DCNL @ type get _ deps _ dict : dict DCNL @ param get _ deps _ dict : dict DCNL @ type hash _ dict : dict DCNL @ param hash : fingerprint DCNL @ type hash : str DCNL @ rtype : str&apos;
&apos;Parameters DCNL x : array-like DCNL Input tensor . DCNL t : array-like , shape ( n _ samples , n _ features ) DCNL The sampling frequency . DCNL W : array-like , shape ( n _ samples , n _ features ) DCNL The sampling frequency . DCNL sample _ size : int , optional DCNL The size of the sample . DCNL Returns DCNL x : array , shape = ( n _ samples , n _ features ) DCNL The estimated sampling samples . DCNL sample _ size : int DCNL The size of the sample . DCNL sample _ size : int DCNL The size of the sample . &apos;
&apos;Decorator that adds a user to the log-in page if necessary . DCNL The user is redirected to the log-in page if necessary . &apos;
&apos;Removes the title and title from the title . DCNL Parameters DCNL title : title DCNL title of title DCNL width : title DCNL title of title DCNL title : title DCNL title of title DCNL Returns DCNL title : title DCNL title of title DCNL title : title DCNL title of title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title : title DCNL title :
&apos;Synthesis of a sound using the sinusoidal plus residual model DCNL tfreq , tmag , tphase : sinusoidal frequencies , amplitudes and phases ; stocEnv : stochastic envelope DCNL N : synthesis FFT size , H : hop size , fs : sampling rate DCNL returns y : output sound , yh : harmonic component&apos;
&apos;return the representation of the given expression DCNL &gt; &gt; &gt; to _ SQL ( \ &apos; Hello \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; to _ person ( \ &apos; Hello \ &apos; ) DCNL ( \ &apos; A \ &apos; , \ &apos; A \ &apos; ) DCNL &gt; &gt; &gt; to _ person ( \ &apos; Hello \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; to _ person ( \ &apos; Hello \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; to _ person ( \ &apos; Hello \ &apos; ) DCNL \ &apos; A \ &apos; DCNL &gt; &gt; &gt; to _ nnf ( \ &apos; Hello \ &apos; ) DCNL ( \ &apos; A \ &apos; , \ &apos; A \ &apos; , \ &apos; A \ &apos; ) DCNL &gt; &gt; &gt; to _ nnf ( \ &apos; Hello \ &apos; ) DCNL ( \ &apos; A \ &apos; , \ &apos; A \ &apos; , \ &apos; A \ &apos; ) DCNL &gt; &gt; &gt; to _ nnf ( \ &apos; Hello \ &apos; ) DCNL &gt; &gt;
&apos;Returns a DOM representation of HTML . &apos;
&apos;Submit a suggestion object . DCNL If the user is not a review request , a new user will DCNL be marked as a review request . DCNL If the user is not logged in , the user will be created with DCNL the user \ &apos; s responsibility to add the user to the user . &apos;
&apos;Get an instance of an application . DCNL Args : DCNL services ( list ) : List of services to get the application . DCNL registry _ path ( str ) : The name of the service to load . DCNL debug ( bool ) : If true , then load all mapreduce handlers DCNL with the given options . DCNL config : Optional Configuration to use when the service is enabled . DCNL Returns : DCNL An instance of webapp2.WSGIApplication with all mapreduce handlers DCNL registered . &apos;
&apos;Get the Tetragrid from the matrix . &apos;
&apos;Tries to get a valid feature permission . DCNL : param request : The request object . DCNL : param feature : The feature dictionary . DCNL : param operation : The operation operation . DCNL : return : True if the user is enabled , False otherwise . DCNL : rtype : ``bool``&apos;
&apos;Converts a timezone string to a pytz timezone string . DCNL Args : DCNL timezone _ string : The time string to use . DCNL Returns : DCNL A pytz timezone string . DCNL Raises : DCNL ValueError : if the given timezone string is invalid . &apos;
&apos;cmp ( a , b ) - &gt; string DCNL Return a string with the same version as the string DCNL &gt; &gt; &gt; bin _ version ( &#91; 1 , 2 , 3 , 5 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; compare _ version ( a , b ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; compare _ version ( a , b ) DCNL &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
&apos;Map the datastore id to the corresponding scale ID . DCNL Returns the corresponding value . DCNL Raises : DCNL ValueError : if v is not a scalar . &apos;
&apos;A view to generate a GET request for the given request . DCNL : param request : The request to generate the page for . DCNL : param urlname : the name of the request to be used . DCNL : param response _ format : A string to be used for the response . &apos;
&apos;Get the first word in the split line . &apos;
&apos;Create a directory for the given path and check if it doesn \ &apos; t exist . &apos;
&apos;Validates the parameters of a parameter dict . DCNL : param dict _ dict : a dictionary of parameters DCNL : param error _ values : a dictionary mapping parameter names to values DCNL : param page _ param _ map : a list of page names DCNL : param page _ param _ map : the list of page names DCNL : returns : a tuple of ( name , value ) pairs DCNL : rtype : dict&apos;
&apos;See : meth : `I18n.parse _ date` . &apos;
&apos;Test that user \ &apos; s extra options are wishing to install . DCNL This exercises source options that are wishing to install . DCNL This exercises source options that are wishing to install . DCNL This exercises wheel installs . &apos;
&apos;Get containers that belong to a container . DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; lxc.create _ config&apos;
&apos;Parse the signature and performs an entry in the response . DCNL This is a helper method that uses the following signature : DCNL - More information in the form : DCNL - More information in the form : DCNL - http : / / code.activestate.com / recipes / 5770580 / DCNL : param data : The data to be signed . DCNL : type data : int DCNL : param address : The address of the request . DCNL : type address : int DCNL : return : The public key . DCNL : rtype : tuple ( str , int , float ) &apos;
&apos;Generate the MAC address for the specified number . DCNL Arguments : DCNL num ( int ) : number of seconds to create . DCNL end ( int ) : number of bytes to create . DCNL Returns : DCNL A string containing the MAC address . &apos;
&apos;Construct the next sun rising . DCNL Async friendly . &apos;
&apos;Get a Basic Auth . DCNL orgname DCNL Name of the organization . DCNL profile DCNL Configuration profile used to connect to the Grafana instance . DCNL Default is \ &apos; grafana \ &apos; . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; grafana4.get _ connection &lt; orgname &gt; &apos;
&apos;Try to get the storage directory path DCNL Args : DCNL path : A str , the path to the zip file DCNL app _ id : The id of the application to get DCNL Returns : DCNL The path to the storage , or None if it doesn \ &apos; t exist . &apos;
&apos;Return the URL for a particular endpoint . DCNL This function is meant to be used by finding the URL DCNL of a URL . DCNL : param endpoint : the endpoint to parse . DCNL : param values : keyword arguments passed to the decorated function . DCNL : param dict values : additional parameters to include in the URL . DCNL : raises : HTTPError ( 400 ) if the url cannot be found . &apos;
&apos;Test measurement info from evoked data . DCNL Parameters DCNL epochs : ndarray , shape ( n _ samples , 3 ) DCNL List of Epochs instances . DCNL events : array-like , shape ( n _ epochs , n _ channels ) DCNL The measurement info . DCNL tmin : float , shape ( n _ epochs , 3 ) DCNL To-be-fitted model . DCNL tmin : float , shape ( n _ epochs , 3 ) DCNL To-be-fitted data . DCNL tmax : float DCNL Number of epochs to use . Default is None . DCNL Returns DCNL epochs : ndarray , shape ( n _ epochs , n _ epochs , n _ epochs , n _ epochs , n _ epochs , n _ epochs ) DCNL The data points . DCNL Notes DCNL This function is meant to be used in fast _ epochs . &apos;
&apos;Return the status of a git command on a git repo . &apos;
&apos;The generic script can be customised by using parameters ( see config.py ) . &apos;
&apos;最好先用cloud _ query _ info ( ) 来获取当前所有的任务 , 然后调用这个函数来获取 DCNL task _ path - 一个list , 里面至少一个list , 里面的每一项都是一个dict , 每个dict都有这几项 : DCNL path - 文件的当前的绝对路径 , 默认是根目录 DCNL source _ path - 文件的绝对路径 , 默认是根目录 DCNL source _ path - 要复制到的目的路径 , 不同的任务 , 然后在回收站中不存在 , 就会报错 , 并返回 . &apos;
&apos;Build an encoder . DCNL Parameters DCNL train : ndarray , shape ( n _ channels , n _ features ) DCNL Input data . DCNL options : dict , shape ( n _ channels , n _ features ) DCNL Returns DCNL c : array , shape ( n _ samples , n _ features ) &apos;
&apos;Options DCNL Parameters DCNL func : function DCNL The function to check . DCNL x0 : int DCNL Maximum number of iterations to be used . DCNL args : tuple of ints , optional DCNL Extra arguments to pass to the function . DCNL maxiter : int DCNL Maximum number of iterations to use . Default is None . DCNL tol : float , optional DCNL How many iterations to use . Default is None . DCNL default _ options : bool , optional DCNL If True , then the default value is used . DCNL default _ options : bool , optional ( default = False ) DCNL If True , then the default value is used . DCNL Returns DCNL val : float DCNL The value of the function . DCNL maxiter : int DCNL Maximum number of iterations to be used . DCNL maxiter : int DCNL Maximum number of iterations to use . Default is None . DCNL tol : float , optional DCNL How many iterations to use . Default is None . DCNL tol : float , optional DCNL How many iterations to use . Default is None . DCNL tol : float
&apos;Return pid of the dialog with the given QAction&apos;
&apos;Given a domain name describe its properties . DCNL Returns a dictionary of interesting properties . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ elasticsearch _ exists my-domain.com&apos;
&apos;Locates a directory matching the given name . DCNL Args : DCNL dir : the directory to search DCNL name : the name of the directory DCNL Returns : DCNL True if the directory is found , False otherwise . &apos;
&apos;Split a line into a dictionary of dictionaries . DCNL For example : DCNL &gt; &gt; &gt; split _ line ( \ &apos; hello world \ &apos; ) DCNL ( \ &apos; hello \ &apos; , \ &apos; bar \ &apos; ) DCNL &gt; &gt; &gt; split _ line ( \ &apos; hello world \ &apos; ) DCNL ( \ &apos; hello \ &apos; , \ &apos; bar \ &apos; ) DCNL &gt; &gt; &gt; split ( \ &apos; hello world \ &apos; ) DCNL ( \ &apos; hello \ &apos; , \ &apos; bar \ &apos; ) DCNL &gt; &gt; &gt; split _ line ( \ &apos; hello world \ &apos; ) DCNL ( \ &apos; hello \ &apos; , \ &apos; bar \ &apos; ) DCNL &gt; &gt; &gt; split _ line ( \ &apos; hello world \ &apos; ) DCNL ( \ &apos; hello \ &apos; , \ &apos; bar \ &apos; ) DCNL &gt; &gt; &gt; split _ line ( \ &apos; hello world \ &apos; ) DCNL ( \ &apos; hello \ &apos; , \ &apos; bar \ &apos; ) DCNL &gt; &gt; &gt; split _ line ( \ &apos; hello world \ &apos; )
&apos;Constant-time string comparison . DCNL : rtype : list&apos;
&apos;Return a list of all collections with all collections . DCNL Based on : func : `get _ all _ instances . &apos;
&apos;Translate a regular expression to a regular expression , parses it against DCNL the given parameters . DCNL If strict is True , the regular expression will be matched . DCNL : param data : DCNL : type data : DCNL : param strict : if True , the result is to be matched DCNL : type strict : bool DCNL : return : the matched key DCNL : rtype : str&apos;
&apos; : type source : str DCNL : rtype : None&apos;
&apos;Structure version : RESTful CRUD s&apos;
&apos;Asserts the contents of a csv file is valid . DCNL Args : DCNL parser : A behave string DCNL file _ name : The name of the csv file to check . DCNL row _ limit : The limit of the row to check . &apos;
&apos; : param id : A valid certificate id . DCNL : type id : str DCNL : rtype : KeyVaultId&apos;
&apos;Turn a qsub job id into a qsub job id . &apos;
&apos;Raise 404 HTTPNotFound error&apos;
&apos;Returns a string that represents a single string nicely . DCNL : type txt : str DCNL : rtype : str&apos;
&apos;Take a list of blocks and return a dict that can be used DCNL to determine if they are on the given block of blocks . DCNL The function will return a list of tuples that can be used as a DCNL list of tuples and the corresponding set of blocks . &apos;
&apos;A user to create a new password based on a password . DCNL If the user doesn \ &apos; t exist , the password will be sent to a new user . DCNL If the user does not exist , the password will be updated . &apos;
&apos;Deletes the existence of a user DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; tomcat.unset&apos;
&apos;Check that the given columns of a model is non different . DCNL Parameters DCNL data : Model DCNL The data to check . DCNL model : Model DCNL The model to use for the model . &apos;
&apos;Index a document for all episodes in the given user . DCNL @ param client : A GitHub client to select from . DCNL @ param obj _ id : The id of the owning organization . DCNL @ param user _ id : The id of the owning organization . DCNL @ param device _ id : The id of the user to select . &apos;
&apos;Create resource type for resource type . DCNL : param values : dict of values of resource type DCNL : type values : dict DCNL : param values : Type of resource DCNL : type values : dict DCNL : returns : resource type of resource DCNL : rtype : dict&apos;
&apos;Set up the libcloud functions and check for CloudStack configurations . &apos;
&apos;Set up &amp; run a `Publisher` for programmatic use with string I / O. DCNL Return the encoded string output . DCNL Parameters : see `publish _ programmatically` . &apos;
&apos;A decorator to send a mutex on an APIProxyStub method . &apos;
&apos;Return the name of a config file if it exists , otherwise returns DCNL None . DCNL If cache _ minion _ id is True , the default config file is returned . DCNL Otherwise , returns a dict if it exists , otherwise returns None . DCNL Otherwise , returns None . &apos;
&apos;Return the degree of a angle in degrees . DCNL .. math : : DCNL y = \ &apos; r \ &apos; DCNL .. math : : DCNL .. math : : DCNL .. &#91; 1 &#93; http : / / en.wikipedia.org / wiki / en.wikipedia.org / wiki / Legendre _ code&apos;
&apos;Extract the response from a response . DCNL @ param response : The response to parse . DCNL @ type response : C { str } DCNL @ return : The response . DCNL @ rtype : C { str } &apos;
&apos;Computes the cross entropy of the input tensor . DCNL Parameters DCNL logits : tensor of shape ( n _ samples , n _ samples , n _ features ) DCNL target _ seqs : tensor of shape ( n _ samples , n _ samples , n _ features ) DCNL batch _ size : int , optional ( default = 1 ) DCNL batch _ size : int , optional ( default = 1 ) DCNL num _ steps : int , optional ( default = 1 ) DCNL The number of steps to use . Default is 1 . DCNL num _ steps : int , optional DCNL The number of steps to consider . DCNL Returns DCNL A tensor of shape ( n _ samples , n _ features ) . DCNL Examples DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; logits = tl.cost.cross _ entropy _ seq ( logits , target _ size , batch _ size , num _ steps = 2 ) DCNL &gt; &gt; &gt; i = tl.cost.cross _ entropy _ seq ( logits , target _ size ) DCNL &gt; &gt;
&apos;Ensure that a key is a Key or None . DCNL Parameters DCNL f : object DCNL The function to decorate . DCNL Returns DCNL obj : object DCNL The object to decorate . &apos;
&apos;Test creating a 2D color array with the same shape as x . DCNL This is equivalent to : py : func : `numpy.color _ array _ array` . DCNL Parameters DCNL x : array _ like DCNL Input array . DCNL Returns DCNL x : array , shape ( n _ features , ) DCNL The array of shape `` ( x , y ) `` , where x is the array of shape `` ( x , y , x ) `` . &apos;
&apos;Changes the ``ssl _ NO _ socket`` . DCNL : param ssl _ version : DCNL The HTTP version of the certificate . DCNL : param cert _ reqs : DCNL The certificate to use to ``ssl.OP _ NO _ SSLv3`` , ``ssl.OP _ NO _ SSLv2`` , DCNL ``ssl.OP _ NO _ SSLv3`` , ``ssl.OP _ NO _ COMPRESSION`` . DCNL : param ciphers : DCNL The options to use to ``ssl.OP _ NO _ SSLv3`` , ``ssl.OP _ NO _ SSLv2`` , DCNL ``ssl.OP _ NO _ SSLv3`` , ``ssl.OP _ NO _ COMPRESSION`` . DCNL : param options : Extra options to use to ``ssl.OP _ NO _ SSLv2`` , DCNL ``ssl.OP _ NO _ SSLv3`` , ``ssl.OP _ NO _ COMPRESSION`` . DCNL : param options : Extra options to use to ``ssl.OP _ NO _ SSLv2`` , DCNL ``ssl.OP _ NO _ SSLv3`` , ``ssl.OP _ NO _ COMPRESSION`` . DCNL : param options : Extra options to use to ``ssl.OP _ NO _ SSLv2`` , DCNL ``ssl.OP _ NO _ SSLv3`` , ``ssl.OP _ NO _ COMPRESSION`` . DCNL : param options : Extra
&apos;merge _ info _ to _ first ( infos , \ &apos; chs \ &apos; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93; , &#91; \ &apos; chs \ &apos; &#93;
&apos;Helper method to get the number of block metadata for the given xblock type . &apos;
&apos;Tries to create city , state and country of country to delete . DCNL : param country : country of country DCNL : return : boolean&apos;
&apos;Generates the current version of the GitHub API . DCNL For example : DCNL &gt; &gt; &gt; loc = \ &apos; http : / / www.example.org language \ &apos; DCNL &gt; &gt; &gt; url _ release _ text ( \ &apos; http : / / www.example.org \ &apos; ) DCNL \ &apos; http : / / www.example.org language \ &apos; DCNL &gt; &gt; &gt; git _ release _ text ( \ &apos; http : / / www.example.org \ &apos; ) DCNL \ &apos; http : / / www.example.org language \ &apos; DCNL &gt; &gt; &gt; git _ release _ text ( \ &apos; http : / / www.example.org \ &apos; ) DCNL \ &apos; http : / / www.example.org language \ &apos; DCNL &gt; &gt; &gt; git _ release _ text ( \ &apos; http : / / www.example.org \ &apos; ) DCNL \ &apos; http : / / www.example.org language \ &apos; DCNL &gt; &gt; &gt; git _ release _ text ( \ &apos; http : / / www.example.org \ &apos; ) DCNL \ &apos; http : / / www.example.org language \ &apos; DCNL &gt; &gt; &gt; git
&apos;Build the desired configuration for a given module . DCNL : param module : The module to build the desired configuration for . DCNL : return : A dict containing the desired configuration for the specified DCNL interface . &apos;
&apos;Extract the signed JWT id . DCNL Args : DCNL id _ token : string , OAuth 2.0 id . DCNL Returns : DCNL unicode : The deserialized JSON string . &apos;
&apos;Stop a log handler for a given logger . DCNL Create a new log handler with a pre-defined format . &apos;
&apos;Compress a body of a piece of body . DCNL : param body : The body of the body to compress . DCNL : param content _ level : The name of the chunk to compress . DCNL : return : An iterator of decompressed data . &apos;
&apos;Produces a list of alignment elements based on the number of alignment DCNL lengths . DCNL &gt; &gt; &gt; alignment _ summary ( &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
&apos;Check if the module dependencies are valid . DCNL : param module _ name : The name of the module to check . DCNL : param _ _ package _ name : The name of the package to check . DCNL : return : True if the module has been installed . DCNL : rtype : bool&apos;
&apos;Setup the ZigBee switch platform . DCNL : param vif : the nova.nework.model.VIF instance DCNL : param config : instance of the video sensor platform . DCNL : param add _ devices : set of lights . &apos;
&apos;Restart the named service DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.restart &lt; service name &gt; &apos;
&apos;Test a simple string for a single byte string . &apos;
&apos;Converts a value into a ( key , value ) tuple . DCNL The function can be used to create a new key from the DCNL : meth : ` ~ bson.codec _ value` instead . DCNL : param name : The name of the object to be used . DCNL : param value : The value to use . DCNL : param bool check _ keys : A dictionary containing the key and data DCNL to use . &apos;
&apos;Get vector3 vertexes from attribute dictionary . &apos;
&apos;getPrime ( a , b , randfunc : callable , randfunc : callable ) : long DCNL Return a random number with the given number of bits . DCNL If randfunc is omitted , then Random.new ( ) .read is used . DCNL If randfunc is omitted , then Random.new ( ) .read is used . DCNL If randfunc is omitted , then Random.new ( ) .read is used . DCNL If randfunc is omitted , then Random.new ( ) .read is used . DCNL If randfunc is omitted , then Random.new ( ) .read is used . DCNL If randfunc is omitted , then Random.new ( ) .read is used . &apos;
&apos;Convert a BeautifulSoup tree into a list of Element trees . DCNL Parameters DCNL xml _ tree _ tree : list DCNL A list of BeautifulSoup objects . DCNL Element : C { str } DCNL The root tree to use . Defaults to `None` . DCNL Returns DCNL tree : dict DCNL A list of the root tree factory . DCNL Examples DCNL &gt; &gt; &gt; import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; a = &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; c \ &apos; &#93; DCNL &gt; &gt; &gt; list _ tree _ tree _ tree ( \ &apos; a \ &apos; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; root \ &apos; &#93; DCNL &gt; &gt; &gt; list _ tree _ tree _ tree ( &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos;
&apos;Adds options to the settings file and add them to the update . DCNL Args : DCNL parser : The parser object to add . DCNL Returns : DCNL A dictionary containing the new options for the update . &apos;
&apos;Determine the password for the current user DCNL @ param payload : DCNL @ type payload : str DCNL @ return : True if the payload is available , False otherwise DCNL @ rtype : dict DCNL @ return : True if the payload is available , False otherwise . DCNL @ rtype : bool&apos;
&apos;Creates the figure for subplot axes . DCNL Parameters DCNL fig : matplotlib figure DCNL Figure to create the figure for . DCNL figsize : tuple ( default = None ) DCNL If None , override default verbose level ( see : func : `mne.verbose` DCNL and : ref : `Logging documentation &lt; tut _ logging &gt; ` for more ) . DCNL Returns DCNL fig : matplotlib.figure.Figure DCNL The figure that can be used to figure out the figure . &apos;
&apos; : param str node : The node to serialize . DCNL : param int record : The SHA of the file to serialize . DCNL : param int version : The version of the request . DCNL : param int index : The index of the index . If None , the current DCNL version will be used . &apos;
&apos;Displays the date , formatted according to the given string . DCNL Uses the same format as PHP \ &apos; s ``date ( ) `` function . DCNL Sample usage : : DCNL { % now &quot; jS F Y H : &quot; % } \ &apos; &apos;
&apos;Validate a numeric key . DCNL Parameters DCNL key : str DCNL The key to validate . DCNL value : str DCNL The value to validate . DCNL Returns DCNL obj : str DCNL The validated object . DCNL Examples DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; from keras import backend as K DCNL &gt; &gt; &gt; _ validator ( key , value ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; _ validate _ list ( &#91; \ &apos; x \ &apos; , \ &apos; R \ &apos; , \ &apos; R \ &apos; , \ &apos; R \ &apos; &#93; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; _ validate _ list ( \ &apos; ABC \ &apos; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; _ validate _ list ( \ &apos; ABC \ &apos; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; _ validate _ list ( \ &apos; ABC \ &apos; ) DCNL \ &apos; 123 \ &apos; DCNL &gt; &gt; &gt; _ validate _ list ( &#91; \ &apos; x \ &apos; , \
&apos;Test either if an error is raised when the target are continuous DCNL type&apos;
&apos;htly ( b ) - &gt; int DCNL Convert a 32-bit IP string to a byte string . &apos;
&apos; : param func : The function to write the type for . DCNL : type func : function DCNL : param alphabet : The alphabet to use for the file type . DCNL : type alphabet : string DCNL : param length : The length of the file to write . DCNL : type start : string DCNL : param method : The name of the function to write . DCNL : type start : str DCNL : param threads : The method to call when the file is found . DCNL : type method : L { str } &apos;
&apos;Try to get the data from the dataset . DCNL Args : DCNL dataset ( str ) : The dataset to get the dataset file . DCNL default _ dataset ( str ) : The location of the dataset . DCNL origin ( str ) : The location of the dataset . DCNL Returns : DCNL None if the file is not found , False otherwise . &apos;
&apos;Create a new Epochs instance . DCNL Parameters DCNL epochs : instance of Epochs DCNL The Epochs instance to test . DCNL event _ id : int DCNL The event id . DCNL tmin : int , int , int , int , int , or None DCNL The end time of the event . DCNL tmin : int , int , int , int , int , int , or None DCNL The end time of the event . DCNL tmin : int , int , int , int , int , int , int , or None DCNL The end time of the event . DCNL tmin : int , int , int , int , int , int , int , int , or None DCNL The end time of the event . DCNL Returns DCNL epochs : Epochs instance DCNL The data _ id . &apos;
&apos;Read a 32-bit integer into a 32-bit integer . &apos;
&apos;Load cached values from a cache item . &apos;
&apos;Execute a stash in a given WSGI server DCNL This is used by http : / / localhost : 8080 / manager DCNL to the given WSGI server . DCNL : param bytes : The HTTP request to bind DCNL : return : An encoded WSGI environment DCNL : raises : : exc : `google.cloud.streaming.exceptions.RequestError` if not DCNL specified in SSL context . &apos;
&apos;Expression function to a single binary vector . DCNL : type s : str DCNL : param s : The input string . DCNL : type s : str DCNL : return : A new string encoded with a binary vector . DCNL : rtype : str&apos;
&apos;Right-aligns the string in a field of a given width . DCNL Argument : field size . &apos;
&apos;Return a measure of the similarity between two sequences . DCNL For example : DCNL .. code-block : : python DCNL import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; from scipy import measure DCNL &gt; &gt; &gt; from scipy import measure DCNL &gt; &gt; &gt; from scipy import measure DCNL &gt; &gt; &gt; print ( 100 , 100 ) DCNL ( 100 , 100 ) DCNL &gt; &gt; &gt; print ( 100 , 100 ) DCNL ( 100 , 100 ) DCNL &gt; &gt; &gt; print ( 100 , 100 ) DCNL ( 100 , 100 ) DCNL &gt; &gt; &gt; print ( 100 , 100 ) DCNL ( 100 , 100 ) DCNL &gt; &gt; &gt; print ( 100 , 100 ) DCNL ( 100 , 100 ) DCNL &gt; &gt; &gt; print ( 100 , 100 ) DCNL ( 100 , 100 ) DCNL &gt; &gt; &gt; print ( 100 , 100 ) DCNL ( 100 , 100 ) &apos;
&apos;Creates a list of all tags for a file system . DCNL filesystemid DCNL ( string ) - The name of the file system to create . DCNL tags DCNL ( list ) - A list of tags to create the tags for . DCNL key DCNL The name of the file system to create . DCNL profile DCNL The key used to encrypt the file system . DCNL CLI Example : DCNL .. code-block : : DCNL salt \ &apos; my-minion \ &apos; boto _ efs.create _ tags efs-id&apos;
&apos;Check if the atom is a flag . &apos;
&apos;Check if a file is writable and returns the contents of a DCNL file if it is not a source file . &apos;
&apos;Archiver \ &apos; s generator . DCNL : param job _ pk : The name of the job from which to make the tree DCNL : param url : the url of the node to be copied DCNL : param data : the data to be copied to&apos;
&apos;Finds the lock id , returning a number of lock ids . DCNL If there is no lock , return it . Otherwise , returns None . &apos;
&apos;Create an instance of the virtual machine . DCNL : param options : A dictionary of options to use to create the DCNL instance . DCNL : returns : A dictionary containing the details of the virtual machine . DCNL : rtype : dict DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; win _ device.create _ instance \ &apos; / dev / xvdb \ &apos; &apos;
&apos;Make sure that we can create an absolute path to DCNL the directory and creates if necessary . DCNL : param config : Configuration object . DCNL : type config : ``dict`` DCNL : return : List of directories to be copied . &apos;
&apos;Validate a value . DCNL : param value : DCNL : param context : DCNL : return : DCNL : rtype : &apos;
&apos;Repeat the elements of a tensor at the length of the tensor . DCNL If axis is None , then the sum of times along the last axis will be DCNL evaluated . DCNL Parameters DCNL x : array _ like DCNL The tensor to restride . DCNL repeat : int or int DCNL Number of times to repeat . DCNL axis : int , optional DCNL Axis along which to repeat the tensor . Default is 0 . DCNL Returns DCNL out : ndarray , shape ( n _ times , ) DCNL Array containing random values . DCNL Notes DCNL This function is meant to be used by the : func : `arange` , DCNL this function does not work with the same shape . DCNL .. versionadded : : 0.7.1 DCNL Parameters DCNL x : array _ like DCNL Array or sequence of integers . DCNL repeats : int , optional DCNL Axis along which to repeat the tensor . Default is 0 . DCNL Returns DCNL out : ndarray , shape ( n _ times , ) DCNL Array of random values . DCNL Notes DCNL This function is meant to be used by
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 326&apos;
&apos;Estimate rank of the covariance matrix . DCNL Parameters DCNL data : array-like , shape ( n _ samples , n _ features ) DCNL Array containing the data . DCNL info : array-like , shape ( n _ channels , n _ features ) DCNL The measurment info . DCNL scalings : dict &#124; None DCNL The rescaling method to use . DCNL tol : bool , optional DCNL Whether to override the singular values . DCNL return _ singular : bool , optional DCNL If True , return the singular values . DCNL Returns DCNL rank : ndarray DCNL Estimated rank of the data . DCNL scalings : ndarray , shape ( n _ sensors , n _ features ) DCNL Array containing the singular values . &apos;
&apos;Returns a boolean of whether x is a constant or a scalar . &apos;
&apos;Check if user exists for the specified user . DCNL .. versionadded : : 2016.11.0 DCNL user DCNL The user to check for . DCNL name DCNL The name of the user to check . DCNL value DCNL The value to check for . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; influxdb.check _ cron _ env &lt; user name &gt; &apos;
&apos;Test that data data should be used for table data . DCNL Data should be a numpy array with the \ &apos; numpy \ &apos; header . &apos;
&apos;Deletes a VPC peering connection . DCNL .. versionadded : : 2016.11.0 DCNL name DCNL The name of the VPC peering connection to delete . DCNL conn _ id DCNL The name of the VPC peering connection . DCNL name DCNL The name of the VPC peering connection . DCNL region DCNL The name of the VPC peering connection to be deleted . DCNL profile DCNL The name of the profile that will be deleted . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ vpc.delete _ vpc _ peering _ connection name = \ &apos; ec2 \ &apos; DCNL salt myminion boto _ vpc.delete _ vpc _ connection salt-vpc region = us-east-1&apos;
&apos;Check that the type is a type or raise an exception . DCNL If arg is a type , raise an error if it is not a valid type . DCNL Otherwise , raise an error . DCNL Parameters DCNL arg : basestring or list DCNL Name of the type . DCNL msg : str , optional DCNL The message to check . DCNL Returns DCNL type : str or None DCNL The type of the type . DCNL Raises DCNL ValueError DCNL If arg is not a valid type or not . &apos;
&apos;Test either if an error is raised when the target are not binary DCNL type . &apos;
&apos;Add a password to be used . DCNL : param cmd : The command to add to . DCNL : param type : The command to add to . DCNL : param required : Whether to enable the command . DCNL : return : The value of the password . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; nxos.cmd add _ password _ arg \ &apos; { &quot; name &quot; : &quot; 127.0.0.1 &quot; } \ &apos; &apos;
&apos;Get new derivation . &apos;
&apos;Dummy implementation of _ thread.allocate _ flag ( ) . &apos;
&apos;Return a FormSet for the given form . DCNL : param form : DCNL : param form : DCNL : param formset : DCNL : param extra _ order : DCNL : return : DCNL : rtype : &apos;
&apos;KBEngine method . &apos;
&apos;Get all networks for a project . DCNL : param context : The security context DCNL : param project _ id : ID to associate with the project DCNL : param network : Profile to build on ( Optional ) DCNL : return : list of networks associated with a project . &apos;
&apos;Signal to create a test client DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; influxdb.new _ test _ client object&apos;
&apos;Convert a Django site into a SiteRegistry&apos;
&apos;Adds a nic based on the nic spec DCNL : param si : Service Instance DCNL : param vm : Virtual Machine Object DCNL : param network : Network instance DCNL : return : True if success&apos;
&apos;Provide a TestSuite to the discovery process . &apos;
&apos;Format a value according to the limit number of seconds . &apos;
&apos;Returns a dict of \ &apos; formats \ &apos; in the default config options . &apos;
&apos;Get the current version number if it \ &apos; s available . &apos;
&apos;Edit the system service . DCNL protocol DCNL The LVS service address . DCNL service _ address DCNL The LVS service address . DCNL scheduler DCNL The LVS service address . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; lvs.edit _ service tcp 1.1.1.1 : 80&apos;
&apos;Given a list of keywords , returns a list of tuples that DCNL can be used to determine if a tag is valid . DCNL : param keywords : DCNL : param keywords : DCNL : param tag _ prefix : DCNL : param verbose : DCNL : return : DCNL : rtype : &apos;
&apos; .. versionchanged : : Nitrogen DCNL The ``expr _ form`` argument has been renamed to ``tgt _ type`` , earlier DCNL releases must use ``expr _ form`` . DCNL Return a dict of the following keys : DCNL .. code-block : : yaml DCNL foo : DCNL check.value : DCNL - new _ data : DCNL - config : DCNL - config : DCNL - config : DCNL - config : / etc / lxc ( system ) DCNL .. versionadded : : 2015.8.0&apos;
&apos;Test get _ data ( ) on a deactivated cache . DCNL We don \ &apos; t get the data on a deactivated cache . &apos;
&apos; * musicpd.org , current playlist section : * DCNL ``listplaylists`` DCNL Return a list of HTML tags for the specified format : DCNL * Available formats * : { bootstrap } } &apos;
&apos;Spawn a new file and exit it . DCNL : param files : The full path to the temporary file . DCNL : return : A new temporary file . &apos;
&apos;Check that the expression is a symbolic expression DCNL Parameters DCNL graph : theano tensor DCNL The graph to be tested . DCNL inputs : tensor DCNL The variables to check . DCNL Returns DCNL is _ pure _ op : bool DCNL True if the graph is a DAG , False otherwise . &apos;
&apos;Builder for rebulk object . DCNL : return : String object for rebulk object . DCNL : rtype : str&apos;
&apos;Extract bucket _ id from bucket _ id . DCNL Raises NotFound if bucket _ id does not exist . &apos;
&apos;Adds an error message to the range \ &apos; s error message . DCNL The range can be \ &apos; max _ to _ yes \ &apos; , \ &apos; max \ &apos; , \ &apos; max \ &apos; , \ &apos; max \ &apos; , \ &apos; max \ &apos; , \ &apos; max \ &apos; , or \ &apos; max \ &apos; . &apos;
&apos;Get a floating address by instance id . &apos;
&apos;Authenticate sock _ info . DCNL Does not send a connection to a connection . DCNL : param credentials : List of credentials . DCNL : param sock _ info : Username to authenticate . DCNL : return : dict&apos;
&apos;Change the formula of a formula . DCNL Examples DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; p = Normal ( \ &apos; x \ &apos; , 1 ) DCNL &gt; &gt; &gt; p = Normal ( \ &apos; x \ &apos; , 1 ) DCNL &gt; &gt; &gt; p = Normal ( \ &apos; x \ &apos; , 1 ) DCNL &gt; &gt; &gt; p = Normal ( \ &apos; x \ &apos; , 1 ) DCNL &gt; &gt; &gt; p = Normal ( \ &apos; x \ &apos; , 1 ) DCNL &gt; &gt; &gt; p = Normal ( \ &apos; x \ &apos; , 1 ) DCNL &gt; &gt; &gt; p = Normal ( \ &apos; x \ &apos; , 1 ) DCNL &gt; &gt; &gt; p = Normal ( \ &apos; x \ &apos; , 1 ) DCNL &gt; &gt; &gt; p = Normal ( \ &apos; x \ &apos; , 1 ) DCNL &gt; &gt; &gt; p = Normal ( \ &apos; x \ &apos; , 1 ) DCNL &gt; &gt; &gt; p = cos ( x ) *
&apos;Run a function for a running thread . DCNL : param function : The function to run . DCNL : param args : Positional arguments to pass to the reactor . DCNL : param kwargs : keyword arguments to pass to the function . DCNL : return : An : class : ` ~ greenlet.greenlet` object . &apos;
&apos;returns whether or not an object is a NetProxy&apos;
&apos;Given an error message , returns an instance of the app \ &apos; s identity . DCNL Args : DCNL error : A subclass of : class : `float` . DCNL Returns : DCNL A subclass of : class : `SerializationException` . DCNL Raises : DCNL apiproxy _ errors.ApplicationError : if an error is raised . &apos;
&apos;Given a sequence of positional and keyword arguments , return a DCNL tuple of ( arg , name ) pairs . DCNL If * line * is None , the function is returned . DCNL If * line * is None , the function is returned . &apos;
&apos;Find a dynamic class from the given path . &apos;
&apos;Compute the quadratic norm of a symmetric matrix . DCNL Parameters DCNL P : array _ like DCNL Input array . DCNL cond : int , optional DCNL Cutoff for \ &apos; small \ &apos; singular values . DCNL Singular values smaller than rcond * largest _ eigenvalue are DCNL considered zero . DCNL lower : bool , optional DCNL Cutoff for \ &apos; small \ &apos; or \ &apos; small \ &apos; . DCNL Singular values smaller than rcond * largest _ eigenvalue are DCNL considered zero . DCNL check _ finite : bool , optional DCNL Whether to check the largest singular value . DCNL check _ finite : bool , optional DCNL Whether to check that the sum is zero . DCNL Returns DCNL F : array , shape ( n _ samples , n _ features ) DCNL The quadratic polynomial . DCNL References DCNL .. &#91; 1 &#93; Nicholas J. Higham and Lijing lin ( 2011 ) DCNL &quot; A Schur-Pade Algorithm for Fractional Powers of a Matrix . &quot; DCNL SIAM Journal on Numerical Analysis and Applications , DCNL 3 . pp. 1056-1078 . ISSN 0895-4798 DCNL Examples DCNL &gt; &gt; &gt; from
&apos;Feed a gcode linear move file . &apos;
&apos;Adds a L { Deferred } to the given C { f } and C { f } . DCNL @ param reactor : The reactor to use . DCNL @ param deferred : A L { callable } object . DCNL @ param callback : A callable to be called with the C { f } . DCNL @ param args : A callable to pass to the C { f } . DCNL @ param kwargs : The keyword arguments to pass to the C { f } . &apos;
&apos;Perform 2D FFT . DCNL Parameters DCNL x : array _ like DCNL Input array . DCNL n : int , optional DCNL Axis along which the FFT will be computed . DCNL axis : int , optional DCNL Axis along which to operate . Default is 0 . DCNL overwrite _ x : bool , optional DCNL If True , overwrite the array `a` . DCNL Returns DCNL out : ndarray , shape ( n _ samples , n _ features ) DCNL Array of shape ( n _ x , n _ x ) where x is the same shape as `x` . DCNL Notes DCNL If ``x1`` and ``x2`` have different shapes , then they need to broadcast . DCNL Parameters DCNL x : array _ like DCNL The input array . DCNL n : int , optional DCNL Axis along which to operate . Default is 0 . DCNL axis : int , optional DCNL Axis along which to operate . Default is None . DCNL overwrite _ x : bool , optional DCNL If True , the default value will be destroyed . DCNL Returns DCNL out : ndarray DCNL An array with shape (
&apos;Setup testenvironment for the module : DCNL - Adds dummy home dir tree&apos;
&apos;Create a user \ &apos; s current user . DCNL Args : DCNL username ( str ) : The username of the user to create . DCNL password ( str ) : The password to use to create the user . DCNL is _ superuser ( bool ) : If True , the user will be created . DCNL Default is True . DCNL profile ( bool ) : If True , the user will be created . DCNL Example : DCNL &gt; &gt; &gt; user = create _ user _ in _ client ( \ &apos; joe \ &apos; , password = \ &apos; joe \ &apos; ) DCNL &gt; &gt; &gt; make _ user _ in _ client ( \ &apos; joe \ &apos; , password = \ &apos; dbuser \ &apos; ) DCNL \ &apos; staff \ &apos; DCNL &gt; &gt; &gt; make _ user _ in _ client ( \ &apos; joe \ &apos; , password = \ &apos; dbuser \ &apos; ) DCNL \ &apos; staff \ &apos; DCNL &gt; &gt; &gt; make _ user _ in _ client ( \ &apos; joe \ &apos; , password = \ &apos; s3cr3t \ &apos; ) DCNL
&apos;Test that we can \ &apos; t raise an error when no clip is raised . &apos;
&apos;Create a Base64 encoded PDF file DCNL : param pelican : The pelican object&apos;
&apos;Deprecated . DCNL Use : func : `celery.app.backends.by _ name` . &apos;
&apos;Return all substrings of a list of strings in the list . &apos;
&apos;Given an event source mapping source ARN and FunctionName , DCNL generate an event source mapping . DCNL Returns a dictionary of interesting properties . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ lambda.event _ source _ exists myfunction myalias&apos;
&apos;Feed a gcode linear move text . &apos;
&apos;Test whether an error is raised if an error is raised . &apos;
&apos;Tries to guess the correct key value . DCNL For example : DCNL &gt; &gt; &gt; _ handle _ key ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ handle _ key ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ handle _ key ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ handle _ key ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ handle _ key ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ handle _ key ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ handle _ key ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ handle _ key ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; _ handle _ key ( \ &apos; a \ &apos; ) DCNL \ &apos; a \
&apos; : return : A BaseKeyError&apos;
&apos;Executes the given signature and returns the result . DCNL The result is a dict containing the following keys : DCNL args DCNL The arguments to pass to the server . DCNL dest : string DCNL The arguments to pass to the server . DCNL format : string DCNL The arguments to pass to the response . DCNL args : dict DCNL The arguments to pass to the response . DCNL kwargs : dict DCNL Extra arguments to pass to the function . DCNL kwargs : dict DCNL The keyword arguments to pass to the function . DCNL Returns DCNL result : dict DCNL A dictionary containing the signature as described by the DCNL signature : DCNL .. code-block : : python DCNL \ &apos; hello \ &apos; , DCNL \ &apos; text \ &apos; : \ &apos; blue \ &apos; , DCNL \ &apos; text \ &apos; : \ &apos; blue \ &apos; , DCNL \ &apos; text \ &apos; : \ &apos; blue \ &apos; , DCNL \ &apos; text \ &apos; : \ &apos; blue \ &apos; , DCNL \ &apos; text \ &apos; : \ &apos; blue \ &apos; , DCNL \ &apos; text \ &apos;
&apos;Read the results of a response file and return it . &apos;
&apos;Formats a price for a given subproject . DCNL This is a shortcut for getting the translation for a given project . DCNL : param request : Request object DCNL : type request : django.http.HttpRequest DCNL : param project : Name for the subproject DCNL : type project : str DCNL : param subproject : The subproject DCNL ( e.g. &quot; GB &quot; ) . DCNL : type subproject : str DCNL : return : The translation stats for the given project . &apos;
&apos;List the projects available by the user . DCNL : return : A list of user IDs . &apos;
&apos;Strips all &#91; X &#93; HTML tags . &apos;
&apos;Delete an image from the specified name . DCNL : param gce : The GCE driver object . DCNL : type gce : : class : `GCENodeDriver` DCNL : param name : Name of the image to delete . DCNL : type name : ``str`` DCNL : param module : The module to delete . DCNL : type module : ``str`` DCNL : rtype : ``bool``&apos;
&apos;Write a brief summary of a Process instance . DCNL Args : DCNL fid : The file to write to . DCNL info : A string containing the info of the job . DCNL Returns : DCNL A list of ( status , stderr ) tuples . &apos;
&apos;Test PackageFinder finds releases if asked to DCNL https : / / github.com / pypa / pip / issues / 935 . DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues / 935 DCNL https : / / github.com / pypa / pip / issues
&apos;Get server profile ( s ) DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; firewall.get _ config&apos;
&apos;Fast Solexa FASTQ to Solexa FASTQ conversion ( PRIVATE ) . DCNL Avoids creating SeqRecord and Seq objects in order to speed up this DCNL conversion . &apos;
&apos;Checks if the items in the given query contains references to the DCNL given regular expression . &apos;
&apos;Register a new instance of the input image . DCNL Parameters DCNL src _ image : str DCNL The input image . DCNL target _ image : str DCNL The image to be transformed . DCNL kernel _ factor : int or int , optional DCNL The number of pixels to be used . DCNL space : int , optional DCNL The number of pixels to use for the input image . DCNL space : int , optional DCNL The number of pixels to use . Default is 0 . DCNL space : int , optional DCNL The number of pixels to be used . DCNL Returns DCNL out : ndarray DCNL The transformed image . DCNL Raises DCNL ValueError DCNL If the input image is unknown . DCNL Notes DCNL This function uses the same stride as the input image . DCNL References DCNL .. &#91; 1 &#93; http : / / docs.scipy.org / doc / scipy-0.14.0 / reference / generated / scipy.ndimage.interpolation.affine _ transform.html &gt; ` _ DCNL Examples DCNL &gt; &gt; &gt; import matplotlib.pyplot as plt DCNL &gt; &gt; &gt; input = numpy.random.random ( 3 ) - 0.5 DCNL &gt; &gt; &gt; B = np.array ( &#91;
&apos;Awards badges based on the specified user and a badge . &apos;
&apos;Builds a dictionary mapping entry to the base path . &apos;
&apos;Serialize object and return JSON . &apos;
&apos;Return triangle with color string . DCNL Examples DCNL &gt; &gt; &gt; from sympy.polys.domains import ZZ DCNL &gt; &gt; &gt; from sympy.polys.densebasic import dmp _ color DCNL &gt; &gt; &gt; bold _ color ( &#91; \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; alpha \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; blue \ &apos; , \ &apos; green \ &apos; , \ &apos; blue \ &apos; &#93; ) DCNL &#91; \ &apos; blue \ &apos; , \ &apos; color \ &apos; , \ &apos; blue \ &apos; , \ &apos; color \ &apos; , \ &apos; green \ &apos; , \ &apos; blue \ &apos; , \ &apos; green \ &apos; , \ &apos; green \ &apos; , \ &apos; blue \ &apos; , \ &apos; green \ &apos; , \ &apos; green \ &apos; , \ &apos; blue \ &apos; , \ &apos; green \ &apos; , \ &apos; green \ &apos; , \ &apos; blue \ &apos; , \ &apos; green \ &apos; , \ &apos; blue \ &apos; ,
&apos;Given a setting value , return the value in the setting settings . &apos;
&apos;Compute LCM of expressions ``f`` and ``g`` . DCNL Examples DCNL &gt; &gt; &gt; from sympy import Symbol DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; x = Symbol ( \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; ln ( x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x * * 2 + x *
&apos;Get the inset loops , which might overlap . &apos;
&apos;Set up logging in a separate logger . Useful for debugging . &apos;
&apos;Maximum size for TCP receive buffers DCNL See guess _ kern _ ipc _ maxsockbuf ( ) . &apos;
&apos;Convert a value to a value if it exists , otherwise return the DCNL value . &apos;
&apos;Generate a zipfile from a package to a Python package . &apos;
&apos;Get new repository . &apos;
&apos;URL decode a string into a unicode string . DCNL : param s : the string to decode . DCNL : param charset : the charset to be used . DCNL : param decode _ keys : a callable to be used to decode the string . DCNL : param include _ empty : If True , don \ &apos; t decode the result . DCNL : param include _ empty : If True , don \ &apos; t try to decode the result . DCNL : param strict : If ``True`` , don \ &apos; t match any errors . DCNL : param strict : If ``True`` , don \ &apos; t want to decode the result . &apos;
&apos;Checks if a file is valid . DCNL : param key : DCNL : param filename : DCNL : return : &apos;
&apos;Load the threads for the current thread . DCNL Parameters DCNL return _ X _ y : bool DCNL Whether to load the state of the current thread . DCNL Returns DCNL obj : str DCNL The name of the current thread . &apos;
&apos;Create a inherit class from an object using the given name . DCNL name DCNL The name of the object to inherit from . DCNL objectType : The type of object to inherit from DCNL copy _ inherited _ acl : bool , optional DCNL Set to True to prevent concurrent imports . DCNL Returns DCNL bool DCNL True if the object has been imported , False otherwise . &apos;
&apos;Retrieve the load data for a specified job DCNL .. versionadded : : 2016.11.0 DCNL jid DCNL The job to get the load data from . DCNL .. versionadded : : 2016.11.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; status.get _ load jid = \ &apos; jid \ &apos; &apos;
&apos;Convert a long integer to a number . DCNL &gt; &gt; &gt; _ name ( \ &apos; 1 \ &apos; ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; name ( \ &apos; 1 \ &apos; ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; name ( \ &apos; 1 \ &apos; ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; _ name ( \ &apos; 1 \ &apos; ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; _ name ( \ &apos; 1 \ &apos; ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; _ name ( \ &apos; 1 \ &apos; ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; _ name ( \ &apos; 1 \ &apos; ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; _ name ( \ &apos; 1 \ &apos; ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; _ name ( \ &apos; 1 \ &apos; ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; _ name ( \ &apos; 1 \ &apos; ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt;
&apos;Updates global state when a task has been reserved . &apos;
&apos;Pretty print a sheet in a dict&apos;
&apos;Listens to a user to be done on the fly . DCNL : param request : django http request object DCNL : return : a tuple of ( addon _ name , addon _ status ) &apos;
&apos;Extract a boolean value from a boolean value . DCNL : param name : the name of the boolean DCNL : type name : str DCNL : param value : the value DCNL : type value : str DCNL : return : a boolean value DCNL : rtype : bool&apos;
&apos;Returns a version of the given module \ &apos; s version DCNL : param module : module name DCNL : param attr : the attribute name DCNL : param call : DCNL : return : &apos;
&apos;Decorator to require a function to open in a file . DCNL If `func` is not a file-like object , it will throw an exception if it is not DCNL found . &apos;
&apos;Evaluates a transfer function for a given pool . DCNL Parameters DCNL sp : tensor _ like DCNL A NetworkX graph DCNL Starting : float , optional DCNL Whether to use the application in the window . DCNL subset : int , optional DCNL The maximum number of nodes in the window . DCNL check _ val : bool , optional DCNL Whether to set the maximum value for the pool . DCNL Returns DCNL value : float DCNL The estimate of the pool for the process . DCNL Raises DCNL NetworkXError DCNL If there is a problem persisting the download . DCNL Examples DCNL &gt; &gt; &gt; from sympy.physics.quantum.qapply import qapply DCNL &gt; &gt; &gt; from sympy.physics.quantum.qapply import qapply DCNL &gt; &gt; &gt; from sympy.physics.quantum.qapply import qapply DCNL &gt; &gt; &gt; from sympy.physics.quantum.qapply import qapply DCNL &gt; &gt; &gt; from sympy.physics.quantum.qapply import qapply DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.physics.quantum.qapply import qapply DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.physics.quantum.qapply import qapply DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; from sympy.physics.quantum.qapply import qapply DCNL &gt;
&apos;Ignores everything between `` { % comment % } `` and `` { % endcomment % } ``&apos;
&apos;tests that we find the full path of directory&apos;
&apos;Returns the area of a given y element . DCNL Parameters DCNL y : array _ like DCNL Input array . DCNL x : array _ like DCNL Input array . DCNL Returns DCNL y : ndarray DCNL The area of the vectors . &apos;
&apos;Try to encode a Python string as a Python string ( e.g. Python \ &apos; s \ &apos; ) DCNL : param s : The string to encode . DCNL : type s : str DCNL : param unicode : The string to encode . DCNL : type str _ type : str DCNL : return : A Python string representation of an ASCII string . DCNL : rtype : str&apos;
&apos;Set the reboot of the active session DCNL : return : True if successful , False if not DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; system.set _ reboot _ required _ required \ &apos; session \ &apos; &apos;
&apos;Preprocesses the given image . DCNL Args : DCNL image : A `Tensor` representing an image . DCNL height : The height of the image . DCNL width : The width of the image . DCNL scope : Optional scope for op _ scope . DCNL scope : Optional scope for op _ scope . DCNL Returns : DCNL A preprocessed image . &apos;
&apos;Send e-mail when a new user is registered . DCNL Listens to the : py : class : ` ~ reviewboard.reviews.signals.review _ user _ published` DCNL signal and send _ new _ user ( ) to send _ new _ user _ mail`` site configuration ) . &apos;
&apos;Return whether or not the source file is running in the database . DCNL This function is meant to be used in the configuration file . &apos;
&apos;Generates an image from a Google Cloud Storage bucket . DCNL Args : DCNL images : A list of images . DCNL labels : A string specifying the labels . DCNL filename : The filename of the MNIST images . DCNL Returns : DCNL A preprocessed image . &apos;
&apos;Save a pickled object to a pickle file and save it to pickle . DCNL This is a wrapper around : func : `get _ pickle ( ) ` instead . &apos;
&apos;Returns the score of the given sum of squares ( in order ) of the DCNL weighted geometric mean . &apos;
&apos;Display a cloudpipe instance . DCNL Return the value . DCNL If no value is specified then it is IP address . DCNL Arguments : DCNL prompt : The prompt string to check . DCNL default : Whether or not the user is IP . DCNL Returns : DCNL The string representation of the user . &apos;
&apos;Return file name of given stream . &apos;
&apos;Disallow \ &apos; LOG.warn ( \ &apos; DCNL https : / / bugs.launchpad.net / tempest / + bug / 1508442 DCNL N352&apos;
&apos;Join files in a given file , then join the file contents DCNL and return the result of the file DCNL : param nzb : name of the file to join DCNL : param mtime : file name of the file DCNL : param file _ complete : if True , don \ &apos; t want to write the file DCNL : param delete : if True , don \ &apos; t want to write the file DCNL : param delete : if True , remove all files stored in the file DCNL : return : a list of filepaths DCNL : rtype : list ( str , str ) &apos;
&apos;Validate the client id . DCNL Args : DCNL client _ id : A str , the client id . DCNL Returns : DCNL The client id . DCNL Raises : DCNL InvalidChannelClientIdError : if client _ id is not a string or unicode . &apos;
&apos;This function has been moved to matplotlib.mlab -- please import DCNL it from there&apos;
&apos; &gt; &gt; &gt; x = np.array ( &#91; 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; x = np.array ( &#91; 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; print ( x ) DCNL &#91; 1 , 2 , 3 &#93; &apos;
&apos; &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt; b = test _ nested ( a , b ) DCNL &gt; &gt; &gt;
&apos;Make a outfile and output _ fp to an output file . DCNL If use _ decompressed is True , the output will be written to the output DCNL ( if not None ) . &apos;
&apos;Use this function to determine if a worker has been reached . DCNL This is a wrapper around : py : func : ` ~ prompt _ step _ step _ step ( ) ` DCNL to determine if the process has been reached . &apos;
&apos;Aux. function to predict . DCNL Parameters DCNL estimator : estimator instance DCNL The estimator to transform . DCNL X : array-like , shape ( n _ samples , n _ features ) DCNL The data to be transformed . DCNL y : array-like , shape ( n _ samples , n _ features ) DCNL The input data . DCNL Returns DCNL fit _ estimator : array , shape ( n _ samples , n _ features ) DCNL The fitted estimators . &apos;
&apos;Compute the gradient of the value for each variable in t . DCNL Parameters DCNL t : theano variable DCNL g : function DCNL g : function DCNL Returns DCNL filtered _ matrix : ndarray DCNL The gradient of the variable . DCNL Examples DCNL &gt; &gt; &gt; from lasagne.layers import InputLayer , DenseLayer DCNL &gt; &gt; &gt; x = InputLayer ( ( 5 , 5 ) ) DCNL &gt; &gt; &gt; ax1.imshow ( t ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt; ax2.imshow ( result ) DCNL &gt; &gt; &gt;
&apos;Extracts data from build _ url and returns a dict containing the data . DCNL Args : DCNL build ( dict ) : The build response object DCNL Returns : DCNL dict : a dict containing the results of the build response DCNL Returns : DCNL dict : a dict containing the results of the build response DCNL Example : DCNL &gt; &gt; &gt; get _ build _ results ( build _ data _ url ( \ &apos; plotly _ url \ &apos; ) ) DCNL \ &apos; plotly \ &apos; DCNL &gt; &gt; &gt; get _ build _ results ( build _ response _ url ) DCNL \ &apos; / tmp / feeds / \ &apos; DCNL &gt; &gt; &gt; get _ build _ results ( build _ response _ url ) DCNL \ &apos; / tmp / feeds / \ &apos; DCNL &gt; &gt; &gt; get _ build _ results ( build _ response _ url ) DCNL \ &apos; / tmp / feeds / \ &apos; DCNL &gt; &gt; &gt; get _ build _ results ( build _ response _ url ) DCNL \ &apos; / tmp / feeds / \ &apos; DCNL &gt; &gt; &gt; get
&apos;Return hash hash of a file DCNL @ param f : File-like object to hash DCNL @ return : hash string&apos;
&apos;Leapfrog integrator for a single model . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 326&apos;
&apos;Parse the output of output into a dictionary . DCNL Args : DCNL output : The output of the output file . DCNL template : The template template string . DCNL Returns : DCNL A dictionary mapping values to values . &apos;
&apos;Return the timestamp for a given date / time . DCNL This function is designed to be used in Python 2.6 . &apos;
&apos;Get the latest repository metadata for the specified repository from the database . &apos;
&apos;Test validation string validation . &apos;
&apos;List all directories in a directory . &apos;
&apos;Extract comments from the given source-code-string . DCNL : param content : The source-code-string where to extract the documentation for . DCNL : type content : str DCNL : param line : The source-code-string where to extract documentation from . DCNL : type line : str DCNL : param line : Column where the documentation comment is found . DCNL : type column : str DCNL : param column : Column where the documentation comment is found . DCNL : type marker : str DCNL : param markers : The markers from which to extract the documentation . DCNL : type markers : list&apos;
&apos;Convert date _ time to IMAP4 INTERNALDATE representation . DCNL Return None if date _ time is not provided . &apos;
&apos;Convert string representation of \ &apos; s \ &apos; to \ &apos; s \ &apos; . DCNL &gt; &gt; &gt; get _ float ( \ &apos; 1 \ &apos; ) DCNL ( 0 , 0 , 0 ) &apos;
&apos;Create a path relative to a path relative to a path . &apos;
&apos;Require several Portage packages to be installed . DCNL Example : : DCNL from fabtools import require DCNL require.portage.packages ( \ &apos; foo \ &apos; ) &apos;
&apos;Takes a volume and returns its contents . DCNL : param volume : The libcloud volume . DCNL : return : A ``Variable`` object . &apos;
&apos;Create a floating IP DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -f floating _ ip _ create my-digitalocean-config floating _ ip = \ &apos; 45.55.96.47 \ &apos; &apos;
&apos;Get a list of top contributors for the given start . DCNL If start is None , then the user \ &apos; s revisions will be added to the DCNL Revision in the database . DCNL : param start : Start number of contributors to query . DCNL : type start : int DCNL : param end : End of the revision to search for . DCNL : type end : int DCNL : param locale : Current locale . DCNL : type locale : str DCNL : param page : Product version . Defaults to None . &apos;
&apos;Raises an AssertionError if ``a`` and ``b`` are not equal . DCNL Args : DCNL a ( numpy.ndarray or cupy.ndarray ) : The desired array . DCNL b ( numpy.ndarray or cupy.ndarray ) : The desired array . DCNL max ( int ) : The maximum number of dimensions to check . DCNL max ( int ) : The maximum number of bytes to check . DCNL dtype ( str ) : The dtype of the desired array . DCNL Returns : DCNL cupy.ndarray : An array with the same length of ``a`` and ``b`` . DCNL .. seealso : : : func : `numpy.testing.assert _ array _ max _ nulp`&apos;
&apos;restful handler for requests for a course . DCNL Templates : ``groups / assets / html _ form.html`` DCNL Context : DCNL course _ key _ string DCNL String representing the course key DCNL asset _ key _ string ( str ) : the course key string&apos;
&apos;This function returns a tuple of ( x , y , x ) , where each element of the DCNL argument is a tuple of ( x , y ) , where x is the length of the interval DCNL in the interval &#91; 0 , 1 &#93; , where 0 is the maximum number of elements in the DCNL range &#91; 0 , 1 &#93; , and the end of the interval is 0 . DCNL Examples DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; x = np.arange ( 20 ) DCNL &gt; &gt; &gt; plt.plot ( x , y ) = = &#91; 0 , 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; plt.plot ( x , x ) DCNL &#91; 0 , 1 , 2 , 3 , 4 , 5 , 6 , 8 , 9 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
&apos;yaml : heavy-publisher DCNL : arg str name : Name of the plugin ( required ) DCNL : arg str project : name of the plugin ( default false ) DCNL Example : DCNL .. literalinclude : : / .. / .. / tests / wrappers / fixtures / heavy-minimal.yaml DCNL : language : yaml DCNL Full Example : DCNL .. literalinclude : : / .. / .. / tests / publishers / fixtures / build-publisher002.yaml DCNL : language : yaml&apos;
&apos;Only load the module if iwconfig is installed&apos;
&apos;Create a tree of all nodes in the tree tree . DCNL This function takes a list of nodes in the tree of the tree , DCNL and walk up to the tree at the end of the tree . DCNL Parameters DCNL master : dict DCNL The master node for which to get the tree . DCNL test _ tree : list of str DCNL The nodes of the tree . DCNL Returns DCNL nodes : list DCNL List of all nodes in the tree . DCNL Examples DCNL &gt; &gt; &gt; tree _ support ( &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; c \ &apos; , \ &apos; node \ &apos; &#93; DCNL &gt; &gt; &gt; tree _ support ( master ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; node \ &apos; , \ &apos; node \ &apos; &#93; DCNL &gt; &gt; &gt; tree _ support ( master ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; node \ &apos; &#93; DCNL &gt; &gt; &gt; tree _ support ( master
&apos;Returns the WSGI filter for use with paste.deploy . &apos;
&apos;get _ get _ api _ request ( path , params ) - &gt; list of parameters DCNL Valid parameters are : DCNL - api _ url = 127.0.0.1 DCNL - api _ port = 623 DCNL - api _ kg = None DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; win _ cql.list _ api _ request path = \ &apos; http : / / www.expasy.ch / cgi-bin / sprot-search-ful \ &apos; ) - &gt; \ &apos; http : / / www.expasy.ch / cgi-bin / sprot-search-ful \ &apos; ) DCNL &gt; &gt; &gt; download _ api _ request ( path , user = \ &apos; 127.0.0.1 \ &apos; , rate = \ &apos; 127.0.0.1 \ &apos; ) DCNL ( \ &apos; 127.0.0.1 \ &apos; , \ &apos; 127.0.0.1 \ &apos; ) DCNL &gt; &gt; &gt; get _ api _ request ( \ &apos; http : / / www.expasy.ch / cgi-bin / sprot-search-ful \ &apos; ) DCNL \ &apos; http : / / www.expasy.ch / cgi-bin / sprot-search-ful \ &apos; ) DCNL &gt; &gt; &gt; download _ api _ request ( path , password = \ &apos;
&apos;Decorator to ensure that the decorated function is safe to work . DCNL This decorator ensures that the decorated method is safe to do DCNL any more than one retry . &apos;
&apos;Verify that the given path matches the ability to match a glob DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pkg.add _ patterns &lt; path &gt; &lt; repo &gt; &lt; repo &gt; &apos;
&apos;Minimization ( function ) DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; inc = lambda x : x + y DCNL &gt; &gt; &gt; g = Symbol ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; inc = lambda x : x + y DCNL &gt; &gt; &gt; g = Symbol ( \ &apos; x \ &apos; , inc = \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; inc = lambda x : x + y DCNL &gt; &gt; &gt; g = Symbol ( \ &apos; x \ &apos; , \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; inc = lambda x : x + y DCNL &gt; &gt; &gt; inc = lambda x : x + y DCNL &gt; &gt; &gt; g = Symbol ( \ &apos; x \ &apos; , inc = \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; inc = lambda x : x + y DCNL &gt; &gt; &gt; g = Symbol ( \ &apos; x \ &apos; , inc = \ &apos; x \ &apos; ) DCNL &gt; &gt; &gt; rl =
&apos;About the simplest problem you can ask for : DCNL optimize a one-variable quadratic function . &apos;
&apos;Checks if the given node is inside a shell . Otherwise , return True . &apos;
&apos;Serialize an object into a pretty-printed representation . &apos;
&apos;Import a module from the given module name . DCNL : param source _ module : The name of the module to be checked . DCNL : param target _ module : The module name to search for . DCNL : param list all _ module : The name of the module to be checked . DCNL : param names : A list of names to the names of the module . DCNL : param names : A list of names to the names of the module . DCNL : param prefix : The prefix to search for . DCNL : type prefix : str DCNL : param names : A list of names to the names of the module . DCNL : type prefix : str DCNL : param names : A list of names to the names of the module . DCNL : type prefix : str DCNL : param names : A list of names to the names of the module . DCNL : type prefix : str DCNL : param names : A list of names to the names of the module . DCNL : type prefix : str DCNL : param names : The prefix
&apos;Get media state list from media list player instance . DCNL @ param p _ mlp : media list player instance . &apos;
&apos;get _ init ( r , name , sub ) - &gt; \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos; c \ &apos; , \ &apos;
&apos;exp ( x ) - &gt; exp ( exp ( x ) ) &apos;
&apos;Given a dictionary of dicts , return a dict of the form DCNL http : / / tools.ietf.org / html / rfc3986 # section-3.2.1 DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; vsphere.get _ auth _ client _ client \ &apos; http : / / localhost / json \ &apos; DCNL salt \ &apos; * \ &apos; vsphere.get _ auth _ client _ client \ &apos; http : / / localhost / json \ &apos; DCNL salt \ &apos; * \ &apos; vsphere.get _ auth _ client _ client \ &apos; http : / / localhost / json \ &apos; DCNL salt \ &apos; * \ &apos; vsphere.get _ auth _ client _ client \ &apos; http : / / localhost / json \ &apos; DCNL salt \ &apos; * \ &apos; vsphere.get _ auth _ client _ client \ &apos; http : / / localhost / json \ &apos; DCNL salt \ &apos; * \ &apos; vsphere.get _ auth _ client _ client \ &apos; http : / / localhost @ example.com \ &apos; DCNL salt \ &apos; * \ &apos; mysql.@@
&apos;Add a base module to the given path . DCNL : param base _ module _ name : The full path to the test module . DCNL : param root _ module _ name : The full path to the test module . DCNL : return : The full path to the test module . &apos;
&apos;Returns the registered messages for the current request . &apos;
&apos;Updates the program \ &apos; s installation directory if it doesn \ &apos; t exist&apos;
&apos;Get fixed ips by host or raise if none exist . &apos;
&apos;Check if a given X is negative . DCNL If an error is raised , it is assumed to be a no-op . &apos;
&apos;Main entry point for a jit ( ) interface . &apos;
&apos;Update the user \ &apos; s home page to make any user \ &apos; s home page . &apos;
&apos;Download a list of cover art for a particular image . DCNL Parameters DCNL log : dict DCNL The log message to download . DCNL title : str DCNL The title of the image . DCNL cur : int , optional DCNL The number of columns to download . Defaults to None . DCNL timeout : int , optional DCNL The maximum number of columns to download . Default is None . DCNL timeout : int , optional DCNL Number of seconds to wait for each element . DCNL timeout : int , optional DCNL Number of seconds to wait for . DCNL timeout : int , optional DCNL Number of seconds to wait for each item in the list . &apos;
&apos;Converts a single string to a list of tuples of the form ( u \ &apos; W \ &apos; , \ &apos; Z \ &apos; ) - &gt; \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \ &apos; , \ &apos; Z \
&apos;Set the indented tree of elem in the elem \ &apos; s contents . DCNL If the element is not a list , it will be processed . &apos;
&apos;Set the value of the variable to be used on the database . &apos;
&apos;RESTful CRUD controller DCNL - used for Imports&apos;
&apos;Check an interface type ( interface , interface , interface , interface ) . DCNL Args : DCNL interface ( str ) : interface type ( e.g. Ethernet1 / 1 , loopback10 , DCNL port-channel20 , vlan20 DCNL Returns : DCNL bool : True if \ &apos; interface \ &apos; is specified , False otherwise . &apos;
&apos;I have a sequence of ( word , count ) pairs . &apos;
&apos;Wrap a function based on its arguments and capture its arguments . DCNL Raises an exception if it doesn \ &apos; t already exist . &apos;
&apos;Return the native Python package type name . DCNL : rtype : : py : class : ` ~ kivy.graphics.Color` . &apos;
&apos;Return a callable that takes a function and returns a tuple of DCNL ( name , name ) tuples . DCNL If a function is found then a function will be returned . DCNL : param lookup _ view : lookup function to inspect DCNL : type lookup _ view : str DCNL : return : A tuple of ( callable , module ) tuple DCNL : rtype : tuple ( str , str ) &apos;
&apos;Annotates validation validation with `validation _ validation ( ) ` with DCNL the validation validation . DCNL If `validation _ validation is True , then the validation will be updated DCNL with the original validation . &apos;
&apos;This function checks to see if the cart has been enabled for a user \ &apos; s cart . DCNL This is meant to be used for tracking of courses due to students DCNL in the user \ &apos; s cart for the user \ &apos; s cart for the user \ &apos; s cart . DCNL Returns a dict containing the following keys : DCNL \ &apos; status \ &apos; : \ &apos; grade \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; grade \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; grade \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; grade \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; grade \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; grade \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; grade \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; grade \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; grade \ &apos; , DCNL \ &apos; status \ &apos; : \ &apos; course _ cart \ &apos; , DCNL \ &apos;
&apos;Enable or disable deinterlace filter . DCNL @ param p _ mi : libvlc media player . DCNL @ param psz _ mode : type of deinterlace filter , None to disable . &apos;
&apos;Writes the message to the message using the specified message . DCNL This is useful if you want to change the message from the command line , DCNL which will be sent to the terminal . DCNL Args : DCNL message : The message to append to the message . DCNL warning : If True , the message will be appended to the message . DCNL truncate : True if the message was sent to the message , otherwise False . DCNL Returns : DCNL The formatted message string . &apos;
&apos;Get radius path by prefix . &apos;
&apos;Add the value to the dialog and add the values to the lists . &apos;
&apos;Update resource group id . DCNL Does not update resources . DCNL : param id : ID to update DCNL : type id : ``str`` DCNL : param name : Name of key to update DCNL : type name : str DCNL : param description : description of the group DCNL : type description : str DCNL : param is _ public : = True DCNL : type is _ public : bool DCNL : return : dict&apos;
&apos;Call the given command and call it with the given arguments . DCNL This is a convenience method for creating a single command . If the DCNL ``name`` argument is not specified , this function will throw an exception . DCNL If the given option is not specified , it will be returned . DCNL Example : : DCNL @ call _ command ( \ &apos; http : / / localhost : 8080 \ &apos; ) DCNL def call _ command ( ) : DCNL call _ command ( \ &apos; sqlcmd \ &apos; , \ &apos; sqlout \ &apos; ) DCNL call _ command ( \ &apos; sqlcmd \ &apos; , \ &apos; sqlout \ &apos; ) &apos;
&apos;Deletes a comment . Confirmation on GET , action on POST . Requires the DCNL &quot; can moderate comments &quot; permission . DCNL Templates : `comments / delete.html` , DCNL Context : DCNL comment DCNL the flagged `comments.comment` object&apos;
&apos;Filter out html documentation for a given document DCNL : param request : DCNL : param doc : DCNL : param doc _ html : DCNL : param allow _ params : DCNL : return : &apos;
&apos;Helper function to create a minibatch x in a list of length x . DCNL Arguments : DCNL x ( list ) : list of numbers DCNL minibatch _ markers ( int ) : number of minibatches complete for a line DCNL epoch _ axis ( int ) : number of minibatches complete for a given axis DCNL epoch _ axis ( int ) : number of minibatches complete for a given axis DCNL epoch _ axis ( int ) : number of minibatches complete for a given axis DCNL Returns : DCNL float&apos;
&apos;Balance version of Satterthy \ &apos; s degrees of freedom DCNL Parameters DCNL t : int DCNL Number of columns to check DCNL Returns DCNL T : float DCNL Number of outliers removed DCNL Notes DCNL This is the same as soon as we are on the right side of the DCNL fundamental matrix . &apos;
&apos;Compute a cubic B-spline . DCNL Parameters DCNL h : array _ like DCNL Input variable . DCNL Xi : ndarray , shape ( n _ samples , ) DCNL The variance of the transform . DCNL x : array _ like DCNL The bandwidths used to estimate the value of the interval . DCNL x : array _ like DCNL The bandwidths used to estimate the value of the interval . DCNL x : array _ like , shape ( n _ samples , ) DCNL The value of the transform . DCNL Returns DCNL out : ndarray , shape ( n _ samples , ) DCNL The output of the transform . &apos;
&apos;Load the reg _ dir from the database&apos;
&apos;Map roles to their roles to their roles . DCNL : param graph : A NetworkX graph DCNL : param dirs : List of directories to be converted to their roles . DCNL : param git _ dir : The directory to check . DCNL : param key _ dir : The base path of the top-most directory in the graph we want to create . DCNL : param type _ 1 : The type of the top-most directory in which we want to create the cluster . DCNL : return : A list of matching roles . DCNL : rtype : dict&apos;
&apos;Install a L { SIGCHLD } handler to be used when I { SIGCHLD } is DCNL registered . DCNL This is done by installing a I { SIGCHLD } handler to use the DCNL C { SIGCHLD } handler . DCNL @ param fd : The file descriptor to write to . DCNL @ type fd : L { int } DCNL @ param fd : The descriptor to use . DCNL @ type fd : C { int } DCNL @ return : The number of attempts to use when I { SIGCHLD } is received . DCNL @ rtype : C { int } &apos;
&apos;Get the User model associated with the given user model . DCNL Example : : DCNL import ckan.plugins.toolkit as toolkit DCNL &gt; &gt; &gt; get _ user _ model ( &quot; myapp.MyModel &quot; ) DCNL \ &apos; myapp.MyModel \ &apos; DCNL &gt; &gt; &gt; get _ user _ model ( &quot; myapp.MyModel &quot; ) DCNL \ &apos; myapp.MyModel \ &apos; DCNL &gt; &gt; &gt; get _ user _ model ( MyModel ) DCNL \ &apos; User \ &apos; DCNL &gt; &gt; &gt; get _ user _ model ( MyModel ) DCNL \ &apos; User \ &apos; DCNL &gt; &gt; &gt; get _ user _ model ( \ &apos; myapp.MyModel \ &apos; ) DCNL \ &apos; myapp.MyModel \ &apos; &apos;
&apos;Returns the URL for the specified block . DCNL Args : DCNL block ( str ) : The name of the request . DCNL handler _ name ( str ) : The name of the handler . DCNL suffix ( str ) : The name of the file . DCNL query ( str ) : The full path to the file . DCNL Returns : DCNL unicode : The URL for the app . &apos;
&apos;Create a query for a project \ &apos; s `read _ deleted` field . DCNL : param context : The context to query . DCNL : param model : The model to query . DCNL : type model : : class : ` ~ taiga.users.models.User` instance . &apos;
&apos;Returns the sparse matrix representation of G. DCNL Parameters DCNL G : graph DCNL An undirected graph . DCNL edge _ attr : integer , optional DCNL The attribute attribute for the graph . DCNL node _ attr : integer , optional ( default = None ) DCNL The attribute attribute name . DCNL default : bool , optional ( default = True ) DCNL If True , use the default ordering . DCNL default : bool , optional ( default = True ) DCNL If True , use the default ordering . DCNL dtype : string , optional ( default = None ) DCNL The name of the attribute in the graph . DCNL Returns DCNL NumPy matrix DCNL The sparse matrix . DCNL References DCNL .. &#91; 1 &#93; http : / / www.cs.purdue.edu / homes / dgleich / publications / Gleich % 202005 % 20- % 20hierarchical % 20spectral.pdf &gt; &apos;
&apos; * musicpd.org , current command section : * DCNL ``command _ list _ ok : `` DCNL ``command _ list _ ok _ ok = True is a list of commands to be matched . If no DCNL command is found , then a list of commands will be matched . If no DCNL command is found , then a list of commands will be returned . If no DCNL command is found , then a list of commands will be returned . If no DCNL command is found , then a list of commands will be returned . If no DCNL command is found , then a list of commands will be returned . If no DCNL command is found , then a list of commands will be returned . &apos;
&apos;Read the contents of a organization . DCNL Args : DCNL md : The name of the object . DCNL objectType : The name of the object ( FILE , DIRECTORY , REGISTRY ) DCNL Returns : DCNL A list containing information about the bucket . &apos;
&apos;Convert an event offset offset into an integer based on the offset DCNL of the offset . DCNL : param offset : DCNL : param kwargs : DCNL : type default : DCNL : param default : DCNL : type default : DCNL : return : DCNL : rtype : &apos;
&apos;Dump an object to a Python file . This is useful for debugging . DCNL This function is meant to be used in conjunction with `loads _ file ( ) ` DCNL to make sure that it is not desirable . DCNL Args : DCNL object _ object ( str ) : The object to write . DCNL file _ object ( str ) : The file to write to . DCNL parameters ( str ) : The name of the file to write . DCNL use _ cpickle : bool ) : If not None , use default . &apos;
&apos;Returns True if the given discussion id is allowed , False otherwise . DCNL Arguments : DCNL xblock ( XBlock ) : the course to check DCNL Returns : DCNL bool : True if the course has been removed , False otherwise . &apos;
&apos;Returns the indices of a dataset . DCNL Parameters DCNL train : array-like , shape ( n _ samples , n _ features ) DCNL Input data . DCNL label : float DCNL The label of the model . DCNL classes : list , optional DCNL A list of classes . DCNL Returns DCNL labels : array DCNL A dictionary of shape ( n _ samples , n _ features ) DCNL Examples DCNL &gt; &gt; &gt; from sklearn.utils import filter _ labels DCNL &gt; &gt; &gt; from sympy.tensor.tensor import filter _ labels DCNL &gt; &gt; &gt; train = test _ labels ( train , label ) DCNL &gt; &gt; &gt; train _ labels ( train , &#91; 1 , 2 , 3 &#93; ) DCNL array ( &#91; &#91; 1 . , 1 . &#93; , DCNL &#91; 1 , 2 &#93; , DCNL &#91; 1 , 2 &#93; , DCNL &#91; 1 , 2 &#93; , DCNL &#91; 1 , 2 &#93; , DCNL &#91; 1 , 2 &#93; , DCNL &#91; 1 , 2 &#93; , DCNL &#91; 1 , 2 , 3 &#93; &#93; ) DCNL &gt; &gt; &gt; train _ labels ( train
&apos;Set desktop icons as defined by default _ list . If ignore _ metadata is True , then DCNL the default desktop icons will be removed . &apos;
&apos;Return the prime of the integer . DCNL Examples DCNL &gt; &gt; &gt; from sympy.utilities.iterables import prime DCNL &gt; &gt; &gt; prime ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; prime ( 1 ) DCNL 1 DCNL &gt; &gt; &gt; prime ( 1 , 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 1 , 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 1 , 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 1 , 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 1 , 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 1 , 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 1 , 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 1 , 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 1 , 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 1 , 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 1 , 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 1 , 2 ) DCNL 4 DCNL &gt; &gt; &gt; prime ( 1 ) DCNL
&apos;Display a widget \ &apos; s favorites . DCNL Adds the user \ &apos; s favorites . &apos;
&apos;Helper function to get names and comments from a file . &apos;
&apos;Sanitizes a value according to the current decimal and DCNL thousand separator setting . Used by default . &apos;
&apos;A decorator that takes a function and returns a set of positional arguments DCNL that should be used as a Theano function . &apos;
&apos;Returns indices for this project . DCNL : arg client : An : class : `elasticsearch.Elasticsearch` client object DCNL : rtype : list&apos;
&apos;Make sure the timer should be added . &apos;
&apos;Update the dmg path to a dmg file . DCNL Returns : DCNL str : The path to the dmg file to a dmg file . DCNL Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; macpackage.update _ dmg / path / to / file&apos;
&apos;Returns the set of headers for a set of headers . DCNL : param headers : HTTP headers dictionary . DCNL : type headers : dict DCNL : returns : A dictionary mapping headers to a set of headers . &apos;
&apos;A context manager that creates a new context manager handler for a DCNL context manager . DCNL : param model : The model instance to test . DCNL : return : The cleaned model instance . DCNL : rtype : None&apos;
&apos;Return the current module name DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; kmod.lsmod&apos;
&apos;Mark the image as an image in an image . DCNL Parameters DCNL container : object DCNL The container to be checked . DCNL name : str DCNL The name of the image to be removed . DCNL Returns DCNL bool DCNL True if the image is in the image , otherwise False otherwise . &apos;
&apos;Create a snapshot that is used by the device . If a VM is not available , DCNL return a dict . &apos;
&apos;Returns true if the given xblock is a unit , or None if there is no unit . &apos;
&apos;Returns whether the receipt is installed and not . &apos;
&apos;Loads the given format based on the given data type . DCNL For example : DCNL .. code-block : : yaml DCNL \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; \ &apos; DCNL \ &apos; encoding \ &apos; DCNL \ &apos; name \ &apos; : { \ &apos; name \ &apos; : \ &apos; underscore \ &apos; , DCNL \ &apos; name \ &apos; : \ &apos; $ \ &apos; , DCNL \ &apos; name \ &apos; : \ &apos; $ \ &apos; , DCNL \ &apos; name \ &apos; : \ &apos; $ \ &apos; , DCNL \ &apos; name \ &apos; : \ &apos; $ \ &apos; , DCNL \ &apos; name \ &apos; : \ &apos; $ \ &apos; , DCNL \ &apos; name \
&apos;Create a list of messages from the given `slug _ from _ page ( ) ` . &apos;
&apos;Create an HttpResponse object for the specified template . DCNL If the template is not specified , it will be used instead of DCNL the new template . &apos;
&apos;Assert that no element has no element . DCNL context : a behave context DCNL wait _ time : the wait time in seconds to wait for the element DCNL wait _ time : if True , wait for the element to wait for the element DCNL Returns : DCNL True if the element is no element , False otherwise . &apos;
&apos;Reduce the width of `original _ size` by `padding`&apos;
&apos;Generate all current environment files for toplevel _ build . DCNL Args : DCNL toplevel _ build _ dir : A list of strings describing the top-level of the DCNL gyp files . &apos;
&apos;Recursively finds the path relative to the dest _ path \ &apos; s path . DCNL : param files : Path to the file system path . DCNL : type src : ``str`` DCNL : param src _ path : path to the file path . DCNL : type src _ path : ``str`` DCNL : rtype : ``str``&apos;
&apos; : return : The description of the plugin available . &apos;
&apos;Check for Python \ &apos; s export module DCNL This function is designed to be used in Python 2.6 . DCNL http : / / wiki.openstack.org / wiki / LoggingStandards # Log _ utils DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; test.use _ resource.use _ config \ &apos; http : / / localhost / String \ &apos; &apos;
&apos;Return a list of all installed applications for the given network . &apos;
&apos;Get the config file for the specified config file for the specified repository . &apos;
&apos;server ( request ) - &gt; object DCNL This function is called when I { SIGCHLD } is called . DCNL @ param reactor : The server to connect to . DCNL @ type server : C { str } DCNL @ param server : The server to connect to . DCNL @ rtype : L { Deferred } &apos;
&apos;Extract length from start with start and start with human readable format . DCNL Parameters DCNL - data : byte string DCNL start : start with start DCNL start : int DCNL number of bytes to start DCNL Returns DCNL lines : list of strings DCNL Lines containing the first line in human readable format DCNL Examples DCNL &gt; &gt; &gt; from Bio import preprocess DCNL &gt; &gt; &gt; from Bio import preprocess DCNL &gt; &gt; &gt; from Bio import preprocess DCNL &gt; &gt; &gt; parse _ length _ prefix ( &#91; \ &apos; Alice \ &apos; , \ &apos; H \ &apos; , \ &apos; H \ &apos; , \ &apos; H \ &apos; &#93; ) # doctest : + SKIP DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; print ( total _ length _ prefix ( &#91; 1 , 2 , 3 &#93; ) ) # doctest : + SKIP DCNL &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
&apos;Add two pixels around the x and y coordinates to negatives . &apos;
&apos;Returns a view that inherits from a given request . DCNL If response _ id is a string , it is assumed to be logged in . DCNL If response _ id is a string , it is assumed to be logged in . DCNL If response _ id is a string , it is assumed to be logged in . DCNL If response _ id is a string , it is assumed to be logged in . DCNL Otherwise , this function will return a 404 . DCNL If response _ id is a string , it is assumed to be logged in . &apos;
&apos;Get new repository . &apos;
&apos;helper function to convert a json string to its json DCNL representation of the given charset for the given charset DCNL : param body : the body to convert DCNL : param charset : the charset to be converted DCNL : param kwargs : keyword arguments to pass to the json string DCNL : return : a parsed json string DCNL : rtype : dict&apos;
&apos;Get the helpful hook for the current git repository . DCNL Returns a tuple of ( path , path ) of the git repository . &apos;
&apos;Given a list of types , create and return the language in DCNL that type . DCNL If item _ shape is None , then the parser will be returned . DCNL If item is None , the parser will be returned . &apos;
&apos;Delete a role ( keystone role-delete ) DCNL CLI Examples : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; keystone.role _ delete c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.role _ delete role _ id = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.role _ delete role _ id = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.role _ delete role _ id = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.role _ delete role _ id = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.role _ delete role _ id = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.role _ delete role _ id = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.role _ delete role _ id = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.role _ delete role _ id = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.role _ delete role _ id = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.role _ delete role _ id = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \ &apos; keystone.role _ delete role _ id = c965f79c4f864eaaa9c3b41904e67082 DCNL salt \ &apos; * \
&apos;Make EEG EEG ref information for EEG sensors . DCNL Parameters DCNL info : dict DCNL List of projectors . DCNL Returns DCNL projs : list DCNL List of projectors . &apos;
&apos;Adds tag to the record&apos;
&apos;Creates an explicit budget to be used only to create the Campaign . DCNL Args : DCNL client : AdWordsClient the client to run the example with . DCNL Returns : DCNL dict An object representing the budget to be used . &apos;
&apos;Takes a list of ( field , value ) pairs and returns a list of all DCNL fields . DCNL For example : : DCNL &gt; &gt; &gt; class MyClass ( object ) : DCNL ... def f ( self , x ) : DCNL ... return x DCNL &gt; &gt; &gt; list ( flatten ( &#91; 1 , 2 , 3 &#93; ) ) DCNL &#91; ( 1 , 2 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , ( 2 , 3 ) , (
&apos;Convert Nova network interface to os _ vif object DCNL : param network : network to look up DCNL : returns : os _ vif.objects.fixed _ vif object DCNL : raises : os _ vif.objects.fixed _ ip.FixedIPList instance&apos;
&apos;Normal norm of a tensor . DCNL Parameters DCNL tensor _ var : tensor _ like DCNL Input tensor . DCNL max _ norm : int , optional DCNL The maximum norm of the tensor . DCNL norm _ axis : int , optional DCNL Axis along which to perform the comparison . Default is 0.0 . DCNL epsilon : float , optional DCNL Axis along which to perform the comparison . Default is 0.0 . DCNL epsilon : float , optional DCNL Axis along which to perform the comparison . Default is 0.0 . DCNL Returns DCNL out : ndarray , shape ( n _ samples , n _ features ) DCNL The output of the tensor . DCNL References DCNL .. &#91; 1 &#93; http : / / docs.scipy.org / doc / scipy-0.14.0 / reference / generated / scipy.ndimage.interpolation.affine _ transform.html &gt; ` _ DCNL Examples DCNL &gt; &gt; &gt; from scipy import norm _ constraint DCNL &gt; &gt; &gt; from scipy import norm _ constraint DCNL &gt; &gt; &gt; from scipy import norm _ constraint DCNL &gt; &gt; &gt; x = numpy.random.rand ( 4 , 5 , 5 ) DCNL &gt; &gt; &gt; norm _ constraint
&apos;Call GCE \ &apos; s on the instance . DCNL .. versionadded : : Nitrogen DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -f delete _ disk aliyun myinstance&apos;
&apos;Creates a wx.App instance if it has not been created sofar . &apos;
&apos;Returns the absolute path of a file in general format . DCNL &gt; &gt; &gt; env = Environment ( ) DCNL &gt; &gt; &gt; abspath _ hash ( &#91; \ &apos; PATH \ &apos; , \ &apos; alf \ &apos; , \ &apos; PATH \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; abspath _ hash ( &#91; \ &apos; PATH \ &apos; , \ &apos; alf \ &apos; , \ &apos; PATH \ &apos; &#93; ) DCNL True DCNL &gt; &gt; &gt; abspath _ hash ( &#91; \ &apos; PATH \ &apos; , \ &apos; alf \ &apos; , \ &apos; PATH \ &apos; &#93; ) DCNL False&apos;
&apos;Guido van Rossum doesn \ &apos; t alter the current thread . &apos;
&apos;Args : DCNL neighbors ( list ) : A list of training images to add . DCNL Returns : DCNL A list of tuples containing two consecutive targets . &apos;
&apos;Check if an Arch Linux package is installed . &apos;
&apos;Calculates a CG . DCNL Parameters DCNL A : ndarray , shape ( n _ samples , n _ features ) DCNL Input matrix . DCNL b : ndarray , shape ( n _ samples , n _ features ) DCNL The vector of iterations . DCNL x0 : int , optional DCNL The number of iterations . DCNL tol : float , optional DCNL The maximum number of iterations . DCNL Returns DCNL xsupi : ndarray , shape ( n _ sources , n _ features ) DCNL The Hessian of the diagonal . DCNL References DCNL .. &#91; 1 &#93; Zhang , Shanjie and Jin , Jianming . &quot; Computation of Special DCNL Functions &quot; , John Wiley and Sons , 1996 . DCNL http : / / jin.ece.illinois.edu / specfunc.html DCNL .. &#91; 2 &#93; NIST Digital Library of Mathematical Functions . DCNL http : / / en.wikipedia.org / wiki / Orthogonal _ algorithm # Randomization&apos;
&apos;Returns the results of the graph `G` . DCNL The two nodes are the same as the original graph . DCNL Parameters DCNL G : NetworkX graph DCNL A NetworkX graph . DCNL edge : graph DCNL A NetworkX graph . DCNL self _ loops : bool , optional DCNL If True , the edge will be cleared . DCNL Returns DCNL G : NetworkX graph DCNL An undirected graph . DCNL Raises DCNL NetworkXNotImplemented : DCNL If G is undirected . DCNL Examples DCNL &gt; &gt; &gt; G = nx.path _ graph ( 4 ) DCNL &gt; &gt; &gt; G = nx.cycle _ graph ( 5 ) DCNL &gt; &gt; &gt; nx.is _ isomorphic ( G ) DCNL True DCNL &gt; &gt; &gt; nx.is _ edge ( G , G ) DCNL True DCNL &gt; &gt; &gt; nx.is _ edge ( G , G ) DCNL True DCNL &gt; &gt; &gt; nx.is _ edge ( G , G ) DCNL True DCNL &gt; &gt; &gt; nx.is _ edge ( G , G ) DCNL True DCNL &gt; &gt; &gt; nx.is _ edge ( G , G ) DCNL True DCNL &gt; &gt; &gt; nx.is _ edge ( G ,
&apos;A wheel requires that \ &apos; pip wheel \ &apos; is in the correct archive that DCNL should be skipped . &apos;
&apos;Return the base vectors of the given vectors . DCNL Parameters DCNL n : int DCNL The number of vectors to compute . DCNL Returns DCNL p : ndarray DCNL The vector of vectors . &apos;
&apos;This function constructs an object holding a date value from the given ticks value DCNL ( number of seconds since the epoch ) . DCNL Arguments : DCNL ticks ( int ) : The value of the `DBAPI 2.0 specification DCNL &lt; http : / / www.python.org / dev / peps / pep-0249 / &gt; ` _ . DCNL : rtype : : class : `datetime.time`&apos;
&apos;Delete all tags . &apos;
&apos;Invalidates the star for a star in a cache . &apos;
&apos;Decorator for coverage coverage analysis . DCNL Take a function that takes a function and returns the coverage DCNL for this function . DCNL Parameters DCNL fn : function DCNL The function to decorate . DCNL Returns DCNL coverage : function DCNL The coverage configuration . &apos;
&apos;A simple helper method to create a new dataset . DCNL : param t _ images : An instance of : class : ` ~ google.cloud.vision.color.ImagePropertiesAnnotation` . DCNL : param t _ image _ members : Mapping of image IDs to be added to the DCNL image . DCNL : param t _ image _ properties : A list of image IDs to be added to the DCNL image . DCNL : return : A new : class : `Mapping` . &apos;
&apos;http : / / msdn.microsoft.com / en-us / library / system.dd264739 ( VS.100 ) .aspx DCNL Existing use of this module should work . &apos;
&apos;Generate a date for the given date . DCNL : param date : the date DCNL : param include _ seconds : If True , include timestamps in the result . DCNL : return : A string representing the date / time stamp . DCNL : rtype : : class : `datetime.date`&apos;
&apos;Creates a shared variables for shared modules . DCNL Args : DCNL module _ dict : Dictionary mapping module names to shared variables . DCNL Returns : DCNL A dictionary of variable names . &apos;
&apos;Delete any existing distributions . DCNL : return : True if successful , `False` otherwise . &apos;
&apos;Test either if an error is raised when the balancing ratio to fit is DCNL smaller than the one of the data&apos;
&apos;Regression test for https : / / github.com / astropy / astropy / issues / 161&apos;
&apos;Truncates a string after a certain number of characters . DCNL @ param string : The string to stop . DCNL @ type string : str DCNL @ param string : The string to stop . DCNL @ rtype : L { int } &apos;
&apos;Get an iterator of scores for an video or None if none is found . &apos;
&apos;Waits for the process to signal to the given pid . DCNL Arguments : DCNL pid ( int ) : PID of the process . DCNL signal : A list of signal names to signal to . DCNL Returns : DCNL True if the process is running , False otherwise . &apos;
&apos;escape text for html. similar to cgi.escape&apos;
&apos;Convert a string to an integer . DCNL If length is not a string , it will be converted to an integer . &apos;
&apos;Validate the payload for the payload . DCNL : param payload : The name of the payload . DCNL : param api _ model : The model of the payload . DCNL : param check _ required : If True , check the payload for the payload . DCNL : return : The payload . &apos;
&apos;Serialize a collection item to a file DCNL @ param Collection collection collection DCNL @ param Item item collection item&apos;
&apos;Return the first line of the given traceback , or None if no DCNL line is found . &apos;
&apos;Options DCNL Parameters DCNL func : function DCNL The function to check . DCNL x0 : int DCNL Maximum number of iterations to be used . DCNL args : tuple of ints , optional DCNL Extra arguments to pass to the function . DCNL maxiter : int DCNL Maximum number of iterations to use . Default is None . DCNL tol : float , optional DCNL How many iterations to use . Default is None . DCNL default _ options : bool , optional DCNL If True , then the default value is used . DCNL default _ options : bool , optional ( default = False ) DCNL If True , then the default value is used . DCNL Returns DCNL Nothing DCNL Examples DCNL &gt; &gt; &gt; from scipy import stats DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; x = np.arange ( 10 ) DCNL &gt; &gt; &gt; g = np.arange ( 10 ) DCNL &gt; &gt; &gt; g = np.arange ( 10 ) DCNL &gt; &gt; &gt; g = np.arange ( 10 ) DCNL &gt; &gt; &gt; g = np.arange ( 10 ) DCNL &gt; &gt; &gt; g = np.arange (
&apos;Get recurring jobs . DCNL : param filter _ data : Filters out which recurring jobs to get . DCNL : return : Sequence of recurring jobs . &apos;
&apos;Ensure that a group is absent . DCNL name DCNL The name of the group to remove . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; group.delete foo&apos;
&apos;Quit the event . &apos;
&apos; .. versionadded : : 2015.8.0 DCNL Attempt to retrieve the value from the named key . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; config.get pkg : apache&apos;
&apos;Decorator that checks the fixture with all dtypes . DCNL Args : DCNL name ( str ) : Argument name to which dtypes are tested . DCNL no _ float16 ( bool ) : If ``True`` , ``numpy.float16`` is DCNL omitted from candidate dtypes . DCNL no _ bool ( bool ) : If ``True`` , ``numpy.bool _ `` is DCNL omitted from candidate dtypes . DCNL .. seealso : : : func : `cupy.testing.for _ dtypes` , DCNL : func : `cupy.testing.for _ all _ dtypes`&apos;
&apos;mapping _ data ( dict _ data , { \ &apos; data \ &apos; : dict } , { \ &apos; a \ &apos; : 2 , \ &apos; b \ &apos; : 2 , \ &apos; b \ &apos; : 3 , \ &apos; b \ &apos; : 3 , \ &apos; d \ &apos; : 3 } , \ &apos; b \ &apos; : 2 , \ &apos; d \ &apos; : 3 } , DCNL \ &apos; b \ &apos; : 2 , \ &apos; b \ &apos; : 3 , \ &apos; b \ &apos; : 3 , \ &apos; b \ &apos; : 3 , \ &apos; b \ &apos; : 3 , \ &apos; b \ &apos; : 3 , \ &apos; d \ &apos; : 2 } , DCNL \ &apos; a \ &apos; : 2 , \ &apos; b \ &apos; : 2 , \ &apos; b \ &apos; : 3 , \ &apos; b \ &apos; : 2 , \ &apos; b \ &apos; : 3 , \ &apos; b \ &apos; : 3 , \ &apos; b \ &apos; : 2 , \ &apos; d \ &apos; : 3
&apos;Outputs a default value that can be used as a safe string . DCNL Outputs nothing if a variable is False . DCNL Sample usage : : DCNL { % firstof var1 var2 var3 % } DCNL { % firstof var1 var2 var3 % } DCNL { % endfilter % } &apos;
&apos;Retrieve all available information about the scan DCNL : param scan _ id : The scan ID to return DCNL : return : A list containing all the vulnerability information&apos;
&apos;Checks that the first element is even if the expr is not equal . &apos;
&apos;Return whether the specified job id is a specified jid&apos;
&apos;Encode the given Numba type . DCNL Parameters DCNL val : str DCNL The type to encode . DCNL arg : str DCNL The length of the value . DCNL Returns DCNL out : str DCNL The length of the array . DCNL Raises DCNL ValueError DCNL If arg is not specified . DCNL Examples DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from sympy.abc import x DCNL &gt; &gt; &gt; decode _ single ( \ &apos; a \ &apos; ) DCNL \ &apos; Alice \ &apos; DCNL &gt; &gt; &gt; decode _ single ( \ &apos; a \ &apos; ) DCNL \ &apos; Alice \ &apos; DCNL &gt; &gt; &gt; decode _ single ( \ &apos; a \ &apos; , \ &apos; b \ &apos; ) DCNL \ &apos; 1 \ &apos; DCNL &gt; &gt; &gt; decode _ single ( \ &apos; a \ &apos; ) DCNL \ &apos; Alice \ &apos; DCNL &gt; &gt; &gt; decode _ single ( \ &apos; a \ &apos; ) DCNL \ &apos; Alice \ &apos; DCNL &gt; &gt; &gt; decode _ single ( \ &apos; a \ &apos; ) DCNL \ &apos; Alice \ &apos; DCNL &gt; &gt;
&apos;Initialize a command line in the OS X DCNL : return : ( str , str ) tuple of ( name , port ) DCNL : rtype : list&apos;
&apos;Test rgb to hsl color method . DCNL References DCNL .. &#91; 1 &#93; Zhang , Shanjie and Jin , Jianming . &quot; Computation of Special DCNL Functions &quot; , John Wiley and Sons , 1996 . DCNL http : / / en.wikipedia.org / wiki / rgb _ to _ rgb _ to _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _ rgb _
&apos;Oracle Client \ &apos; s slugify function DCNL .. versionadded : : 2014.7.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; oracle.test _ compile DCNL salt \ &apos; * \ &apos; oracle.test _ compile DCNL salt \ &apos; * \ &apos; oracle.test _ compile ( ) &apos;
&apos;Returns True if the channel is not a default channel . DCNL : returns : True if the channel is not a default channel , False otherwise . &apos;
&apos;1 cm = 360000 EMUs&apos;
&apos;A decorator that defines the global dependencies of the function . DCNL These are fixes on common dependencies . &apos;
&apos;This is a helper method which is used to find out the internals of DCNL matplotlib \ &apos; s verbose ( ) method . DCNL : param stream : Stream to get metadata for . DCNL : return : Tuple ( status , title ) , or None if no metadata is available . &apos;
&apos;Returns a list of tuples for each element in seq , where each element is DCNL a list of integers , where each element is a list of integers , DCNL where each element is a list of integers . DCNL Args : DCNL seq ( sequence of integers ) : The sequence of integers . DCNL phase ( int ) : The phase of the range . DCNL Returns : DCNL A list of tuples , where each element is a list of integers that are DCNL consecutive integers . DCNL Examples DCNL &gt; &gt; &gt; from sympy.utilities.iterables import make _ range DCNL &gt; &gt; &gt; from sympy.utilities.iterables import make _ range DCNL &gt; &gt; &gt; make _ index ( &#91; 1 , 2 , 3 , 4 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; make _ index ( &#91; 1 , 2 , 3 , 4 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; make _ index ( &#91; 1 , 2 , 3 , 4 &#93; ) DCNL &#91; 1 , 2 , 3 &#93; DCNL &gt; &gt; &gt; make _ index ( &#91;
&apos;Load a module path . DCNL @ param name : module name DCNL @ type path : C { str } DCNL @ return : imported module name DCNL @ rtype : C { str } &apos;
&apos;Decorate a function to memoize the cache if necessary . DCNL The return value is a tuple of ( key , value ) pairs . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; test.memoize DCNL salt \ &apos; * \ &apos; memoize _ cache foo = basefiles : : \ &apos; salt \ &apos; * \ &apos; memoize \ &apos; &apos;
&apos;Wrapper for : py : func : ` ~ prompt _ context` from the server . DCNL This function is meant to be used in http : / / stackoverflow.com / questions / 729583 / DCNL http : / / stackoverflow.com / questions / 143248.aspx DCNL : param app : The URL to pull from . DCNL : type url : str DCNL : return : The remote URL ( s ) . DCNL @ rtype : C { str } &apos;
&apos;Finds all the stylesheet extensions from the given data . DCNL If inline = True , the content of the URL will be returned . DCNL : param data : The data to parse . DCNL : param inline : If True , don \ &apos; t want to parse the content . DCNL : return : A dictionary containing the URLs . &apos;
&apos;Return the full path of a script with the given path DCNL : param script : DCNL : return : &apos;
&apos;Search for the following for a given user . DCNL Return a string of the following form : DCNL { \ &apos; foo \ &apos; : \ &apos; &lt; old-value &gt; \ &apos; , DCNL \ &apos; user \ &apos; : \ &apos; &lt; new-value &gt; \ &apos; } } DCNL Returns : DCNL A string of the following form : DCNL { \ &apos; foo \ &apos; : \ &apos; &lt; old-value &gt; \ &apos; , DCNL \ &apos; / \ &apos; , \ &apos; / \ &apos; , \ &apos; / \ &apos; ) . &apos;
&apos;Given a list of template names , returns the first template . &apos;
&apos;Helper to update the data of an entity . DCNL Args : DCNL entity _ id : The ID of the entity to update . DCNL public _ key : The URL of the public API to update . DCNL expires _ at : The public key to use for the API . &apos;
&apos;Build an appropriate error handler for the given application name . DCNL This is useful for debugging purposes , especially for other DCNL applications . DCNL Args : DCNL filename _ path : The path of the application to bind to . DCNL Returns : DCNL The absolute path of the newly created driver module . &apos;
&apos;Returns a list of hosts for the given host . DCNL host DCNL The location of the host . DCNL username DCNL The username used to login to the host , such as ``root`` . DCNL password DCNL The password used to login to the host . DCNL protocol DCNL Optionally set to alternate protocol if the host is not using the default DCNL protocol . Default protocol is ``https`` . DCNL port DCNL Optionally set to alternate port if the host is not using the default DCNL port . Default port is ``443`` . DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; vsphere.list _ hosts 1.2.3.4 root bad-password&apos;
&apos;Get cluster definitions from a cluster . Raise an exception if DCNL the cluster is not found . &apos;
&apos;Runs `` &#91; CherryPy &#93; `` in `` &#91; CherryPy &#93; &#91; cp &#93; `` . DCNL The two arguments are : DCNL * &#91; cp &#93; : http : / / tools.ietf.org / html / rfc6749 # section-3.1 DCNL The : py : class : ` ~ werkzeug.datastructures.Authorization` object . DCNL : param func : The function to use . DCNL : type port : string DCNL : param port : The port of the source server . DCNL : type port : int DCNL : param port : The port of the source server . DCNL : type port : int DCNL : return : A tuple of `` ( url , port ) `` . DCNL : rtype : tuple ( str , str ) &apos;
&apos;Mimic as _ form _ view ( ) , but return a view that uses Django \ &apos; s standard Django view DCNL Example usage : : DCNL @ add _ form _ view ( request , request ) DCNL def add _ view ( request , request ) : DCNL pass DCNL @ setup _ form _ view ( request , request ) DCNL def add _ form ( request , request ) : DCNL pass DCNL @ setup _ form _ view ( request , request ) DCNL def add _ view ( request , request ) : DCNL pass DCNL @ setup _ form _ view ( request , request ) DCNL def add _ view ( request , request ) : DCNL pass DCNL @ setup _ form _ view ( request , request ) DCNL def add _ view ( request , request ) : DCNL pass DCNL @ setup _ form _ view ( request , request ) DCNL def add _ view ( request , request ) : DCNL pass DCNL @ setup _ form _ view ( request , request ) DCNL def add _ view ( request , request ) :
&apos;safe _ safe _ value ( value ) with safe _ safe _ value into a safe DCNL string representation of a safe comparison . DCNL For example : DCNL &gt; &gt; &gt; safe _ safe _ value ( \ &apos; a \ &apos; , \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; safe _ safe _ value ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; safe _ safe _ value ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; safe _ safe _ value ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; safe _ safe _ value ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; safe _ safe _ value ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; safe _ safe _ value ( \ &apos; a \ &apos; ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; safe _ safe _ value (
&apos;Compare two strings against a regular expression . DCNL &gt; &gt; &gt; d = { \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , \ &apos; bar \ &apos; : \ &apos; bar \ &apos; } DCNL &gt; &gt; &gt; cmp ( True , { \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , \ &apos; bar \ &apos; : \ &apos; bar \ &apos; } ) DCNL \ &apos; foo / bar / bar \ &apos; DCNL &gt; &gt; &gt; cmp ( \ &apos; a \ &apos; , { \ &apos; foo \ &apos; : \ &apos; foo \ &apos; , \ &apos; bar \ &apos; : \ &apos; foo \ &apos; , \ &apos; bar \ &apos; : \ &apos; foo \ &apos; , \ &apos; bar \ &apos; : \ &apos; foo \ &apos; , \ &apos; bar \ &apos; : \ &apos; foo \ &apos; , \ &apos; bar \ &apos; : \ &apos; foo \ &apos; , \ &apos; bar \ &apos; : \ &apos; foo \ &apos; , \ &apos; bar \ &apos; : \ &apos; bar \ &apos; } ) DCNL True DCNL &gt; &gt; &gt; cmp
&apos;Given a string name , return a tuple of ( name , prefixes ) tuple . DCNL The arguments are the same as the name of the command line . &apos;
&apos;run pylint&apos;
&apos;Concatenate text and caption . DCNL Parameters DCNL fig : array _ like DCNL An image with caption . DCNL Returns DCNL out : ndarray DCNL A copy of image with caption . DCNL Raises DCNL ValueError DCNL Raised when input is not an image . &apos;
&apos;launches the cheatsheet for sphinx extension . &apos;
&apos;Determine whether two arrays are equal . DCNL Parameters DCNL x : array _ like DCNL Input variable . DCNL y : int DCNL The absolute tolerance . DCNL atol : float , optional DCNL The absolute tolerance . DCNL atol : float , optional DCNL The absolute tolerance . &apos;
&apos;Abort a reverse of merge _ merge ( ) . DCNL This is a wrapper around : py : func : `abort` with a DCNL ``http.fetch _ merge ( ) `` method . &apos;
&apos;Wrapper for : py : meth : `boto.emr.EmrConnection.list _ steps ( ) ` DCNL that accepts two steps . &apos;
&apos;Returns true if the field has rendered&apos;
&apos;Replace text of text with whitespace removed . DCNL : param text : text to scrub from text DCNL : return : stripped text of text DCNL : rtype str&apos;
&apos;Format a response message as a L { twisted.internet.task.Cooperator } . DCNL @ type msgs : L { str } DCNL @ param msgs : A list of message sizes . DCNL @ type msgs : L { bytes } DCNL @ return : A L { Deferred } that fires with a L { Deferred } that fires with DCNL L { twisted.internet.task.Cooperator } . &apos;
&apos;Find and return an empty list of tracks . DCNL Parameters DCNL tracks : iterable of strings DCNL List of tracks to search . DCNL query : str , optional DCNL The query to search for . DCNL limit : int , optional DCNL The maximum number of tracks to search for . DCNL offset : int , optional DCNL The maximum number of tracks to search . Default is None . DCNL offset : int , optional DCNL How many options to include in the query . If None , the DCNL default value will be ignored . DCNL Returns DCNL results : dict DCNL The first item of the item , or None if no match was found . &apos;
&apos;A helper function that sets a course \ &apos; s grades on a course . DCNL If the course doesn \ &apos; t have a course , it will return a 404 . DCNL If the course doesn \ &apos; t exist , the course will be deleted . &apos;
&apos;Sum ( x , axis = 1 ) - &gt; alloc ( x , axis = 1 ) - &gt; Join ( x , axis = 1 ) DCNL Alloc ( x , x ) - &gt; Join ( x , axis = 1 ) - &gt; Join ( x , axis = 1 ) &apos;
&apos;Returns the class for a class that inherits the given attribute DCNL inherited from cls . If the class is not a class , it DCNL will be used instead of raising an exception . DCNL Parameters DCNL cls : class DCNL The class to be tested . DCNL o : str DCNL The name of the class to be tested . DCNL strict : bool , optional DCNL If True , the class will be added to the class . DCNL Returns DCNL cls : class DCNL The class to be tested . DCNL Notes DCNL This is a special case for special cases where this is a DCNL special case of this method . DCNL Examples DCNL &gt; &gt; &gt; from sympy.tensor.index import _ get _ cls _ attr DCNL &gt; &gt; &gt; cls = get _ cls _ attr ( cls ) DCNL &gt; &gt; &gt; cls = _ get _ cls _ attr ( cls ) DCNL &gt; &gt; &gt; _ get _ cls _ attr _ attr ( cls ) DCNL ( 1 , 2 ) DCNL &gt; &gt; &gt; _ get _ cls _ attr ( cls ) DCNL ( 1 , 2
&apos;Escape a list of words into a list of words . DCNL : param str s : DCNL : return : &apos;
&apos;Parse the given fields into the form field , DCNL using the given field values . &apos;
&apos;Correct the file descriptors in the file . &apos;
&apos;Create an external network default network DCNL : param core _ plugin : tenant DCNL : param net _ type : network instance DCNL : param net _ db : DB connection to use DCNL : param net _ db : DB connection to use DCNL : return : default network or None&apos;
&apos;Train a CG . DCNL Parameters DCNL n _ epochs : int , shape ( n _ samples , n _ features ) DCNL The number of epochs to create a dataset . DCNL train _ set : float DCNL The sampling rate . DCNL train _ set : bool , optional DCNL Whether or not to train the dataset to train the training set . DCNL Returns DCNL train _ data : ndarray , shape ( n _ samples , n _ features ) DCNL An array of shape ( n _ samples , n _ features ) . DCNL Raises DCNL ValueError DCNL If there are more than one segment in the training set , it DCNL can be used as a large range . DCNL References DCNL .. &#91; 1 &#93; https : / / github.com / astropy / astropy / pull / 2451 DCNL : param n _ epochs : the number of samples to test . DCNL : type n _ epochs : int or None DCNL : param train _ set _ train : ( optional ) a train or test for the training set DCNL of the training set . DCNL :
&apos;A function to connect to a bigip device and update a specific node . DCNL hostname DCNL The host / address of the bigip device DCNL username DCNL The iControl REST username DCNL password DCNL The iControl REST password DCNL name DCNL The name of the bigip device DCNL name DCNL The name of the bigip device DCNL name DCNL The name of the bigip device DCNL connection DCNL The description of the bigip device DCNL description DCNL The description of the bigip device DCNL description DCNL The description of the monitor to modify DCNL description DCNL The description of the monitor to modify . DCNL state DCNL The number of seconds to connect to . DCNL state DCNL The number of seconds to connect to . DCNL state DCNL The number of seconds to connect to . DCNL state DCNL The number of seconds to connect to . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; bigip.modify _ node bigip admin admin my-pool 10.2.2.1 : 80&apos;
&apos;Connect to the database : DCNL : type cls : : class : ` ~ google.cloud.logging.client.Client` DCNL : param cls : The configuration class to connect to DCNL : type conn : : class : `boto.ec2.connection.EC2Connection` DCNL : return : The local connection to the database DCNL : rtype : : class : ` ~ google.cloud.logging.client.Client` DCNL : param class : The class to connect to DCNL : type conn : : class : `boto.ec2.connection.EC2Connection` DCNL : return : The local connection to the database DCNL : rtype : : class : ` ~ google.cloud.logging.client.Client` DCNL : param class : The class to connect to DCNL : type conn : : class : `boto.ec2.connection.EC2Connection` DCNL : return : The local connection to the database DCNL : rtype : : class : ` ~ PIL.Image.Image`&apos;
&apos;Construct a property to be used in a test case . &apos;
&apos;Sets the current request mode . DCNL : param request : request context DCNL : type request : django.http.HttpRequest DCNL : param flag : Admin flag . DCNL : type flag : bool DCNL : rtype : ``bool``&apos;
&apos;Register a function . DCNL : param func : The function to register . DCNL : type func : function DCNL : param msg _ type : The type of the function to be registered . DCNL : type msg _ type : str DCNL : param dispatcher _ name : The name of the function to register . DCNL : type required _ by _ default : bool DCNL : param active _ by _ default : If True , the exception will be raised . DCNL : type active _ by _ default : bool&apos;
&apos;Execute a GET request . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; serverdensity _ device.query DCNL salt \ &apos; * \ &apos; serverdensity _ device.query params = lama DCNL salt \ &apos; * \ &apos; serverdensity _ device.query params = lama DCNL salt \ &apos; * \ &apos; serverdensity _ device.query params = lama DCNL salt \ &apos; * \ &apos; serverdensity _ device.query params = lama DCNL salt \ &apos; * \ &apos; serverdensity _ device.query params = lama DCNL salt \ &apos; * \ &apos; serverdensity _ device.query params = lama DCNL salt \ &apos; * \ &apos; serverdensity _ device.query params = lama DCNL salt \ &apos; * \ &apos; serverdensity _ device.query params = lama DCNL salt \ &apos; * \ &apos; serverdensity _ device.query params = lama DCNL salt \ &apos; * \ &apos; serverdensity _ device.query params = lama DCNL salt \ &apos; * \ &apos; serverdensity _ device.query params = lama DCNL salt \ &apos; * \ &apos; serverdensity _ device.query params = lama DCNL salt \ &apos; * \
&apos;Check if an array is a list of integers DCNL &gt; &gt; &gt; is _ list _ of _ dict ( &#91; 1 , 2 , 3 &#93; ) DCNL True DCNL &gt; &gt; &gt; is _ list _ of _ dict ( &#91; 1 , 2 , 3 &#93; ) DCNL True DCNL &gt; &gt; &gt; is _ list _ of _ dict ( &#91; 1 , 2 , 3 &#93; ) DCNL False&apos;
&apos;Construct an approximation to the diagonal of an array . DCNL Parameters DCNL f : ndarray DCNL Input array . DCNL m : int DCNL Order of the matrix . DCNL Returns DCNL r : ndarray , shape ( n _ samples , n _ features ) DCNL The companion matrix . DCNL Examples DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy.abc import x , y DCNL &gt; &gt; &gt; r = np.array ( &#91; 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; r = np.array ( &#91; 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; r = np.array ( &#91; 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; r = np.array ( &#91; 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; r = np.array ( &#91; 1 , 2 , 3 &#93; ) DCNL &gt; &gt; &gt; de _ de (
&apos;Return the count of objects for the given query . DCNL : param session : The SQLAlchemy session to check . DCNL : param query : A SQLAlchemy query to use for the query . DCNL : return : The count of objects for the given query . &apos;
&apos;Test that Astropy \ &apos; s capability of 3.0 is derived from the DCNL fundamental matrix . DCNL Regression test for https : / / github.com / astropy / astropy / pull / 366&apos;
&apos;Remove vector3 path from path . &apos;
&apos;Check that the specified jid correctly handles the specified jid DCNL jid DCNL The jid to escape DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; jid _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; jid _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; jid _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; jid _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; jid _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; jid _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; jid _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; jid _ jid jid = 20160503150049487736 DCNL salt \ &apos; * \ &apos; jid _ jid jid = 20160503150049487736 DCNL salt
&apos;Parses a string and return an instance . DCNL Raises ValueError if the input isn \ &apos; t well formatted . DCNL Arguments : DCNL value : The input value . DCNL Returns : DCNL A datetime.time. DCNL Raises ValueError if the input is well formatted but not a valid time . DCNL Raises ValueError if the input isn \ &apos; t well formatted . &apos;
&apos;version tuple as string . &apos;
&apos;Coerce \ &apos; value \ &apos; to a type . DCNL : param expected _ type : DCNL : type expected _ type : str DCNL : param value : DCNL : type value : DCNL : return : DCNL : rtype : &apos;
&apos;Creates a list of links to an binary file DCNL : param data : The data to be rewritten . &apos;
&apos;Wrapper for : meth : `User Guide &lt; http _ 1` &gt; ` . DCNL Parameters DCNL A : array _ like DCNL Input array . DCNL B : array _ like DCNL Input array . DCNL output : array _ like DCNL Input array . DCNL output : float , optional DCNL Axis along which to compute the division . DCNL sort _ b : bool , optional DCNL Whether to overwrite values from zero . DCNL overwrite _ b : bool , optional DCNL Whether to overwrite values from zero . DCNL check _ finite : bool , optional DCNL Whether to overwrite values from zero . DCNL check _ finite : bool , optional DCNL Whether to overwrite values from zero . DCNL check _ finite : bool , optional DCNL Whether to overwrite values from zero . DCNL check _ finite : bool , optional DCNL Whether to overwrite values from zero . DCNL check _ finite : bool , optional DCNL Whether to overwrite values from zero . DCNL check _ finite : bool , optional DCNL Whether to overwrite values from zero . DCNL check _ finite : bool , optional DCNL Whether to
&apos;Get all invalid client client for a given client . DCNL Args : DCNL client _ list : list of client IDs . DCNL token : token . &apos;
&apos;Compute the coefficients of a multivariate Gaussian distribution . DCNL Parameters DCNL m : array _ like , shape ( n _ samples , n _ features ) DCNL Array of shape ( n _ samples , n _ features ) DCNL Returns DCNL r : array _ like , shape ( n _ samples , n _ features ) DCNL Estimated covariance matrix DCNL References DCNL .. &#91; 1 &#93; http : / / en.wikipedia.org / wiki / Edgeworth _ matrix DCNL Johnson N.L. , S. Kotz , N. Balakrishnan : `User Guide &lt; univariate _ matrix &gt; ` . DCNL Parameters DCNL m : array _ like , shape ( n _ samples , n _ features ) DCNL Array of shape ( n _ samples , n _ features ) DCNL Returns DCNL r : array _ like , shape ( n _ samples , n _ features ) DCNL Estimated covariance matrix DCNL References DCNL .. &#91; 1 &#93; http : / / en.wikipedia.org / wiki / Edgeworth _ matrix DCNL Examples DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt; &gt; from sympy import S DCNL &gt; &gt;
&apos;Make sure that we don \ &apos; t raise an error if it is called . &apos;
&apos;Create an existing entry . DCNL : param project : The project or directory to create . DCNL : param resource : The resource descriptor . DCNL : param offset : The offset in which to create the child . DCNL : return : A newly created object or None if not found . &apos;
&apos;Return True if x is an IPv6 address in printable format . &apos;
&apos;NAPALM library must be installed for this module to work . DCNL Also , the key proxymodule must be set in the _ _ opts _ _ _ dictionary . &apos;
&apos;Extract all lines from a given file in a given order . DCNL If ``comment _ tags is True , then this function returns a list of DCNL `` ( lineno , comments , comments ) `` . DCNL If ``comment _ tags is True , then this function returns a list of DCNL tuples of `` ( lineno , comments ) `` and `` ( lineno , comments ) `` . DCNL If ``comment _ tags is True , then this function returns a list of DCNL `` ( lineno , funcname , comments ) `` and `` ( lineno , comments ) `` . DCNL If * options _ tags * is supplied , it will be returned as-is . &apos;
&apos;Args : DCNL result _ id : str . The result of the LTI launch . DCNL Returns : DCNL A tuple of the form ( app _ id , value ) pairs . &apos;
&apos;Extract parameters from mapper _ spec . DCNL Args : DCNL mapper _ spec : The MapperSpec for the job DCNL allowed _ keys : ( optional ) The allowed keys . DCNL Returns : DCNL Dict of parameters : DCNL Raises : DCNL BadWriterParamsError : if parameters are not supported . &apos;
&apos;Return a list of all files in the given repo&apos;
&apos;Finds the most recent versions of a particular distribution . DCNL This will only run any errors in the config . DCNL : param config : Configuration object . DCNL : param domains : list of domains . DCNL : type domains : list &#91; str &#93; DCNL : return : List of errors that were found in the config . &apos;
&apos;Removes leading whitespace from a block of numbers . DCNL &gt; &gt; &gt; from sympy.combinatorics.graycode import preprocess _ block DCNL &gt; &gt; &gt; print ( widont _ block ( \ &apos; hello world ! \ &apos; ) ) DCNL ( \ &apos; hello \ &apos; ) DCNL &gt; &gt; &gt; decode _ block ( \ &apos; hello world \ &apos; ) DCNL ( \ &apos; hello world \ &apos; ) DCNL &gt; &gt; &gt; print ( widont _ block ( \ &apos; hello world ! \ &apos; ) ) DCNL Traceback ( most recent call last ) : DCNL ValueError : Remove conversion of original block DCNL &gt; &gt; &gt; print ( widont _ block ( \ &apos; hello world ! \ &apos; ) ) DCNL \ &apos; hello world \ &apos; DCNL &gt; &gt; &gt; print ( widont _ block ( \ &apos; hello world ! \ &apos; ) DCNL ( \ &apos; hello \ &apos; ) DCNL &gt; &gt; &gt; print ( widont _ block ( \ &apos; hello world ! \ &apos; ) ) DCNL ( \ &apos; hello \ &apos; ) DCNL &gt; &gt; &gt; print ( widont ( \ &apos; hello world ! \ &apos;
&apos;Get new derivation . &apos;
&apos;Helper function to make sure we don \ &apos; t print it&apos;
&apos;Returns whether the given value is a var . DCNL Args : DCNL exp ( int ) : The value to check . DCNL Returns : DCNL bool : Whether the given value is a var . &apos;
&apos;Magic for creating WSGI middleware . DCNL : param app : The WSGI application to decorate . DCNL : param global _ level : The logger for the request . DCNL : param warning _ level : The log level for this handler . &apos;
&apos;convert s to a string DCNL : param s : The string to be converted DCNL : type s : str DCNL : return : DCNL : rtype : &apos;
&apos;Create a new figure manager instance for the given figure . &apos;
&apos;Convert a agg buffer bounded by bbox to a wx.Image. If DCNL bbox is None , the entire image is converted to a wx.Bitmap. If DCNL bbox is None , the entire image is converted to a wx.Bitmap. If DCNL bbox is None , the entire image is converted to a wx.Bitmap. If DCNL bbox is None , the entire image is converted to a wx.Bitmap. If DCNL bbox is None , the entire buffer is converted . DCNL Note : agg must be a backend _ agg.RendererAgg instance . &apos;
&apos;Generate a signed URL for the client method . DCNL The API method can be used as a method that takes care of DCNL the API method . DCNL : param self : the client method to use DCNL : param client : the client method to use for the requests DCNL : param params : the client method to use for the requests DCNL : param params : the name of the request to use for the requests DCNL : param headers : the name of the request to be used for the requests DCNL : return : a tuple of the form ( self , response ) &apos;
&apos;Returns a dict of ( season , episode ) : ( sceneSeason , sceneEpisode ) mappings DCNL for an entire show . Both the keys and values of the dict are tuples . DCNL Will be empty if there are no scene numbers set&apos;
&apos;Returns a random word of a given length . DCNL Examples DCNL &gt; &gt; &gt; from sympy import ZZ DCNL &gt; &gt; &gt; from sympy import ZZ DCNL &gt; &gt; &gt; a = &#91; \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; , \ &apos; a \ &apos; &#93; DCNL &gt; &gt; &gt; b _ random _ word ( \ &apos; a \ &apos; ) DCNL u \ &apos; a \ &apos; &apos;
&apos;Remove all existing packages . DCNL name DCNL The name of the package to be removed DCNL requirements DCNL The list of requirements to be removed DCNL bin _ env DCNL The command to run on the package DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; parallels.remove macvm runas = macdev DCNL salt \ &apos; * \ &apos; parallels.remove macvm runas = macdev DCNL salt \ &apos; * \ &apos; lxc.remove foo = True&apos;
&apos; : return : Path to the current working directory , if available . &apos;
&apos;Runs pa11ycrawler against the demo-slug to make sure that DCNL the user has already been built . DCNL This is useful for Django \ &apos; s own way to make sure that you need to DCNL provide the results of Django \ &apos; s own settings to make sure that they DCNL need to be run . &apos;
&apos;get _ info _ slice ( obj , compute _ info _ slice ( obj , None ) - &gt; tuple DCNL Return a slice of obj . DCNL Parameters DCNL obj : object DCNL The object to get info for . DCNL indexer : int DCNL Index of the object . DCNL Returns DCNL info : ndarray DCNL The slice object . &apos;
&apos;Find memory memory size in device memory . DCNL &gt; &gt; &gt; device _ memory _ size ( device ) DCNL &#91; 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
&apos;Filters the contents of a template variable . DCNL Filters can also be piped through each other . DCNL Sample usage : : DCNL { % filter filter % } DCNL { % filter escape % } DCNL { % endfilter % } &apos;
&apos;Retrieve the queue names from the application . DCNL Args : DCNL app _ id : The ID of the application . DCNL max _ rows : The max _ rows of the application . DCNL Returns : DCNL A Queue instance representing the taskqueue _ service , or None . &apos;
&apos;Adds a new URL to the given URL and add it to the URL . DCNL : param url : URL to add the user to . DCNL : param scheme : The scheme to add to . DCNL : param key : The key to add to the query . &apos;
&apos;Given a route _ id and a route _ id , check to see if the route DCNL exists . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ vpc.route _ exists \ &apos; rtb-1f382e7d \ &apos; DCNL salt myminion boto _ vpc.route _ exists _ id = \ &apos; rtb-1f382e7d \ &apos; DCNL salt myminion boto _ vpc.route _ exists _ id = \ &apos; rtb-1f382e7d \ &apos; DCNL salt myminion boto _ vpc.route _ exists _ id = \ &apos; rtb-1f382e7d \ &apos; &apos;
&apos;Decorator for storage-access methods , which will be logged in . DCNL The wrapped function will be used to make sure that the user DCNL doesn \ &apos; t have access to the user object . DCNL The wrapped function will be used to make sure that the user DCNL doesn \ &apos; t have access to the user object . DCNL : param callback : The function to decorate . DCNL : type request : django.http.HttpRequest DCNL : param action : The name of the user to decorate . DCNL : type context : dict DCNL : param action : The name of the user to decorate . DCNL : type context : dict DCNL : return : The wrapped object . DCNL : rtype : bool DCNL : raises : HTTPError ( 403 ) if no user is not found . &apos;
&apos;Return the set of variants of the given domain . &apos;
&apos;Compute the total number of seconds in a given interval . &apos;
&apos;Recursively collect all modules in a given package _ dir . DCNL Parameters DCNL start _ dir : str DCNL Path to the directory to collect . DCNL blacklist : list DCNL List of strings to exclude . &apos;
&apos;Wrapper for _ _ default _ options ( ) .get _ default _ options ( ) . &apos;
&apos;Attaches a function to the \ &apos; password \ &apos; option . DCNL : param str param : the parameter to instantiate DCNL : param str param : the argument to instantiate DCNL : param str attrs : additional keyword arguments to instantiate DCNL : returns : : class : `Response &lt; Response &gt; ` object DCNL : rtype : requests.Response&apos;
&apos;Stop the specified service DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; service.stop &lt; service name &gt; &apos;
&apos;Example : DCNL &gt; &gt; &gt; print ( { \ &apos; message \ &apos; : \ &apos; foo \ &apos; , \ &apos; foo \ &apos; : \ &apos; bar \ &apos; } ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; print ( { \ &apos; message \ &apos; : \ &apos; foo \ &apos; , \ &apos; foo \ &apos; : \ &apos; bar \ &apos; } ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; print ( { \ &apos; message \ &apos; : \ &apos; foo \ &apos; , \ &apos; foo \ &apos; : \ &apos; bar \ &apos; } ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; print ( { \ &apos; message \ &apos; : \ &apos; foo \ &apos; , \ &apos; foo \ &apos; : \ &apos; bar \ &apos; } ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; print ( { \ &apos; message \ &apos; : \ &apos; foo \ &apos; , \ &apos; foo \ &apos; : \ &apos; bar \ &apos; } ) DCNL \ &apos; a \ &apos; DCNL &gt; &gt; &gt; print ( \ &apos;
&apos;Call C { f } with C { f } and C { f } with C { f } and C { f } . DCNL @ param observeWarning : A callable which will be invoked with a single DCNL positional argument . DCNL @ param args : The arguments to pass to C { f } . DCNL @ param kwargs : Keyword arguments to pass to C { f } . DCNL @ return : A L { Deferred } which fires with C { f } and C { f } . &apos;
&apos;Get the number of comment counts for the user . DCNL If all comments are present in the user , it will be used to get the DCNL comment counts for the user . DCNL : param user : The user to get the comment counts for . DCNL : type user : User DCNL : param all _ comments : The maximum comments for the user . DCNL : type all _ comments : bool DCNL : param lineno : The content of the comment . DCNL : type headers : list DCNL : param headers : List of comments for the user . DCNL : type headers : list &#91; str &#93; DCNL : param headers : List of headers to include in the comment . DCNL : type headers : list DCNL : return : A tuple of the form ( user , post _ text , comment _ text ) . DCNL .. versionadded : : 2016.11.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; django.comment _ counts user _ post DCNL salt \ &apos; * \ &apos; django.comment _ counts user = &quot; comment
&apos;Match Requests&apos;
&apos;Read rejection parameters from a list of tuples ( PRIVATE ) . DCNL Parameters DCNL alignment _ pairs : list DCNL List of tuples ( start , end ) tuples for each line ( in order ) . DCNL codon _ table : int , optional DCNL How many periods to be used . DCNL default _ table : int DCNL Number of bins to use . Defaults to None . DCNL Returns DCNL lines : dict DCNL A set of tuples of the form ( word _ name , line _ table ) . DCNL Examples DCNL &gt; &gt; &gt; from Bio.SearchIO.ExonerateIO. _ import import _ get _ quad DCNL &gt; &gt; &gt; from sympy.abc import A , b , c DCNL &gt; &gt; &gt; _ get _ seeds ( &#91; \ &apos; 01 \ &apos; , \ &apos; 01 \ &apos; , \ &apos; 01 \ &apos; &#93; ) DCNL &#91; \ &apos; 01 \ &apos; , \ &apos; 01 \ &apos; , \ &apos; 01 \ &apos; , \ &apos; 01 \ &apos; , \ &apos; 01 \ &apos; &#93; &apos;
&apos;Makes a checks . DCNL : param GithubNodeSettings node _ address : DCNL : param timeout : timeout in seconds for establishing the connection DCNL : return : True if successful , otherwise False DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; csf.allow _ checks server _ address = \ &apos; tcp \ &apos; &apos;
&apos; .. todo : : DCNL WRITEME properly DCNL Parameters DCNL batch _ batch : int DCNL Number of batch size DCNL data _ length : int DCNL Size of batch size DCNL batch _ size : int , optional DCNL Size of batch size . DCNL Returns DCNL indices : int DCNL The indices of the batch size . &apos;
&apos;Import a document from a document DCNL : param d : DCNL : param doctype : DocType of the document DCNL : param overwrite : if True , overwrite the data from the document DCNL : param row _ idx : the index of the document DCNL : param post _ links : if True , overwrite data from the document DCNL : param ignore _ links : if True , overwrite data from the document DCNL : return : nothing&apos;
&apos;Return string representation of \ &apos; offset \ &apos; and \ &apos; offset \ &apos; . DCNL \ &apos; offset \ &apos; is one of \ &apos; / \ &apos; , \ &apos; / \ &apos; , \ &apos; int \ &apos; , \ &apos; int \ &apos; , \ &apos; int \ &apos; , \ &apos; int \ &apos; , \ &apos; / \ &apos; , \ &apos; \ &apos; , \ &apos; \ &apos; . DCNL \ &apos; size \ &apos; is the length of \ &apos; / \ &apos; , \ &apos; \ &apos; , \ &apos; \ &apos; , \ &apos; \ &apos; . &apos;
&apos;Create a random string of a list of nodes . DCNL @ param nodes : a list of nodes DCNL @ param title : the title DCNL @ param term : the term to use DCNL @ return : C { int } &apos;
&apos;Set whether a network time is enabled . DCNL : param bool enable : True to enable , False to disable . DCNL : return : True if successful , False if not . DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; power.set _ using _ network _ time off&apos;
&apos;Read a chunk from a stream . DCNL : param stream : The stream to read from . DCNL : return : A tuple containing the contents of the file . &apos;
&apos;The constructor basically works . &apos;
&apos;Get vector3 vertexes from attribute dictionary . &apos;
&apos;Download the data from Stanford \ &apos; s website , unless it \ &apos; s already here . &apos;
&apos;Sets the module \ &apos; s rpm list to the given list of probes . DCNL : param list probes : The list of probes to set . &apos;
&apos;Given a dictionary , return Javascript code that will be used DCNL for nested lists in the form : DCNL { \ &apos; code \ &apos; : { \ &apos; code \ &apos; : ( \ &apos; code \ &apos; , \ &apos; code \ &apos; } ) } DCNL { \ &apos; code \ &apos; : { \ &apos; code \ &apos; : ( \ &apos; code \ &apos; , \ &apos; code \ &apos; } ) } DCNL ( { \ &apos; code \ &apos; : ( \ &apos; code \ &apos; , \ &apos; code \ &apos; ) } } &apos;
&apos;Returns a list of the given tags . DCNL For example : DCNL &gt; &gt; &gt; list _ tags _ from _ list ( &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; b \ &apos; &#93; ) DCNL &#91; \ &apos; a \ &apos; , \ &apos; b \ &apos; , \ &apos; bar \ &apos; &#93; &apos;
&apos;Parses a search index from the search index . DCNL The format is the index of the search index . DCNL Parameters DCNL searchindex : str DCNL The name of the search index . DCNL Returns DCNL parsed _ tag : dict DCNL The format of the search index . DCNL Raises DCNL KeyError DCNL If the search index was found in the index . &apos;
&apos;Get shortest paths from a list of strings DCNL : param data _ structure : DCNL : type data _ structure : str DCNL : param full _ path _ or _ list : DCNL : type full _ path _ or _ list : DCNL : param default _ value : DCNL : return : &apos;
&apos;Removes leading and trailing whitespace from the given seed . DCNL This function assumes that the final value is not divisible by the value DCNL of the ``eta`` . DCNL Examples DCNL &gt; &gt; &gt; from sympy.combinatorics.graycode import strip _ sub _ key DCNL &gt; &gt; &gt; _ strip _ mul ( \ &apos; x \ &apos; , 3 ) DCNL ( \ &apos; x \ &apos; , 5 ) DCNL &gt; &gt; &gt; strip _ mul ( \ &apos; x \ &apos; , 3 ) DCNL &#91; \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; x \ &apos; , \ &apos; j \ &apos; &#93; &apos;
&apos;Runs the given command \ &apos; s status code . DCNL Args : DCNL cmd ( str ) : The command name to run . DCNL kwargs ( str ) : keyword arguments passed to the command . &apos;
&apos;Returns a HttpResponse whose content is used as an AJAX GET request . &apos;
&apos;Converts a scope string to a string representation of the given scope . DCNL Args : DCNL scope : String containing the scope name to be converted to . DCNL type : String containing the name of the scope to be used . DCNL Returns : DCNL A string representation of the given scope with the given name . &apos;
&apos;Get context of blog posts using latest posts . DCNL Args : DCNL context ( django.template.Context ) : DCNL The django context DCNL Returns : DCNL list ( list ) : List of posts into the latest blog post . DCNL Example : DCNL &gt; &gt; &gt; get _ context ( &#91; \ &apos; email \ &apos; , \ &apos; de \ &apos; &#93; ) DCNL &gt; &gt; &gt; get _ context ( feed _ list ) DCNL \ &apos; test-stream \ &apos; DCNL &gt; &gt; &gt; get _ context ( feed _ list ) DCNL { \ &apos; id \ &apos; : \ &apos; development \ &apos; } DCNL &gt; &gt; &gt; get _ context ( \ &apos; en _ US \ &apos; ) DCNL \ &apos; test-stream \ &apos; DCNL &gt; &gt; &gt; get _ context ( \ &apos; en _ US \ &apos; ) DCNL \ &apos; show _ nav \ &apos; DCNL &gt; &gt; &gt; get _ context ( feed _ list ) DCNL { \ &apos; id \ &apos; : \ &apos; development \ &apos; , DCNL \ &apos; project _ id \ &apos; : \ &apos; development \ &apos; } &apos;
&apos;Set up &amp; run a `Publisher` for command-line-based file I / O. DCNL Return the encoded string output . DCNL Parameters : see `publish _ programmatically` . &apos;
&apos;Remove a user from a database DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; influxdb08.user _ remove &lt; name &gt; DCNL salt \ &apos; * \ &apos; influxdb08.user _ remove &lt; name &gt; &lt; database &gt; &lt; user &gt; &lt; port &gt; &apos;
&apos;Return the base domain of a given URL . DCNL : param url : The URL . DCNL : type url : str DCNL : return : The domain domain . DCNL : rtype : str DCNL : returns : The domain domain . &apos;
&apos;Validate the base directory path to the base directory . DCNL The base directory is supposed to be prepended to the base directory DCNL of the base directory . The base directory will be prepended to the DCNL base directory path . DCNL : param str path : The base directory path . DCNL : type base _ dir : str DCNL : param root _ dir : The directory root directory . DCNL : type root _ dir : str DCNL : param path : Absolute path to the base directory directory . DCNL : type path : str DCNL : return : The base directory path . DCNL : rtype : ``list``&apos;
&apos;Compile a Python source file . DCNL This is a convenience method to make sure that the file does not DCNL exist . DCNL Parameters DCNL py _ files : str DCNL The path to the file to be written . DCNL optimize : bool , optional DCNL If True , don \ &apos; t know the file to be written . DCNL force : bool , optional DCNL If True , don \ &apos; t know how to write the file to . DCNL verbose : bool , optional DCNL If True , don \ &apos; t want to run the file . &apos;
&apos;Seconds since a timestamp . &apos;
&apos;Ensure the specified volume is present in the specified snapshot DCNL name DCNL The name of the volume to be present . DCNL volume _ size DCNL The name of the volume to be created . DCNL create : boolean DCNL If ``True`` , the image will be created if it is not specified . DCNL create _ parent : bool DCNL If ``True`` , the image will be created if it is not specified . DCNL .. versionadded : : 2015.8.0 DCNL .. versionadded : : 2016.3.0 DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; zfs.volume _ exists myzpool / mydataset DCNL salt \ &apos; * \ &apos; zfs.volume myzpool / mydataset DCNL salt \ &apos; * \ &apos; zfs.volume myzpool / mydataset DCNL salt \ &apos; * \ &apos; zfs.volume myzpool / mydataset DCNL salt \ &apos; * \ &apos; zfs.volume myzpool / mydataset DCNL salt \ &apos; * \ &apos; zfs.volume myzpool / mydataset DCNL salt \ &apos; * \ &apos; zfs.volume myzpool / mydataset DCNL salt \ &apos; * \ &apos; zfs.volume myzpool / mydataset DCNL salt \ &apos;
&apos;Prepare a grant URI to use in the redirection URI . DCNL The route _ id parameters must be in the same way as the DCNL authorization server . DCNL : param uri : The URI URI . DCNL : type uri : str DCNL : param client _ id : The client id . DCNL : type client _ id : str DCNL : param response _ type : The HTTP request URI . DCNL : type response _ type : str DCNL : param response _ type : The HTTP request URI . DCNL : type redirect _ uri : str DCNL : param redirect _ uri : The scope to use in the authorization server . DCNL : type scope : int DCNL : param scope : Optional arguments to redirect to the client URI . DCNL : param kwargs : Extra arguments to pass to the client URI . DCNL : param kwargs : Extra arguments to pass to the client URI . DCNL : param kwargs : Extra arguments to pass to the client URI . DCNL : param kwargs : Extra arguments to pass to the client URI . DCNL : param kwargs :
&apos; @ param messages : A list of messages to be joined into the data . DCNL @ type messages : L { list } or L { str } DCNL @ return : String&apos;
&apos;Calculate the RAID device . DCNL .. code-block : : yaml DCNL beacons : DCNL journald : DCNL sshd : DCNL PRIORITY : 6&apos;
&apos;Indicate that the given attribute should be loaded using : func : `.Load` interface and supports DCNL both method-chained and standalone operation . DCNL .. seealso : : DCNL : func : `.orm.joinedload` DCNL : func : `.orm.lazyload` DCNL : paramref : `.relationship.lazy`&apos;
&apos; @ param target : function to inspect DCNL @ type target : function DCNL @ return : func Object&apos;
&apos;Return a list of data for the given data in data . DCNL If download _ or _ missing is True , the data will be downloaded from the DCNL download _ dir based on the data in the dataset . DCNL If download _ or _ missing is True , the data will be downloaded from the DCNL download _ dir . &apos;
&apos;Return a master config file DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; poudriere.master&apos;
&apos;Test ICA table with ICA buffer . DCNL Regression test for https : / / github.com / astropy / astropy / issues / 326&apos;
&apos;Checks if the naming is valid back to its original form for its original form . DCNL Returns true if the naming is valid , false if not . &apos;
&apos;rgb ( r , g , g ) - &gt; tuple of ( x , g , h ) &apos;
&apos; @ param test _ data _ str : a dictionary containing the data . DCNL @ type data : dict DCNL @ return : A list of ( key , value ) pairs . DCNL @ rtype : dict&apos;
&apos;Create a network . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; iptables.get _ network filter INPUT DCNL salt \ &apos; * \ &apos; iptables.get _ network filter INPUT family = ipv6&apos;
&apos;Returns a boolean that is used to make sure that the user has a DCNL permission to make sure that the user has access to the user . &apos;
&apos;Convert an epoch to an integer representation of the epoch . DCNL Args : DCNL epoch : An integer to be converted to an integer . DCNL Returns : DCNL A string representation of the epoch as an integer . &apos;
&apos;Remove one or several pecl extensions . DCNL pecls DCNL The pecl extensions to uninstall . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; pecl.update fuse&apos;
&apos;Check if user is coach on master course . DCNL Arguments : DCNL user ( User ) : The user to check DCNL master _ course _ key ( CourseKey ) : Master course key DCNL Returns : DCNL None&apos;
&apos;weights for Bartlett weights DCNL Parameters DCNL nlags : int DCNL highest lag to be evaluated DCNL Returns DCNL weights : ndarray DCNL weights for Bartlett kernel&apos;
&apos;Execute a SQL query based on the given statement . DCNL This is useful when `auto _ query = True` and a class that is DCNL looked up in the statement . DCNL @ param statement : A statement instance . DCNL @ type statement : L { unittest.TestCase } DCNL @ param dialect : A SQLAlchemy dialect class . DCNL @ type dialect : L { unittest.TestCase } &apos;
&apos;Return a list of all available kernel modules DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; kmod.available&apos;
&apos;Determine whether or not the specified snapshot is valid . DCNL : param config _ spec : The configuration spec . DCNL : type config _ spec : ``str`` DCNL : param object _ ref : The name of the object . DCNL : type object _ ref : ``str`` DCNL : param new _ spec : The name of the object . DCNL : type template : ``str`` DCNL : param package : The name of the file . DCNL : type template : ``str`` DCNL : param vm : The name of the repository . DCNL : type template : ``str`` DCNL : param vm : The name of the repository . DCNL : type name : ``str`` DCNL : param vm : The name of the repository . DCNL : type name : ``str`` DCNL : param vm : The name of the repository . DCNL : type package _ type : str DCNL : param vm : The name of the repository . DCNL : type package _ type : str DCNL : param vm : The name of the repository . DCNL : type package _ type : str DCNL : param vm : The
&apos;Test if email is installed in config format . &apos;
&apos;Execute a chef solo run and return a dict with the results DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; docker.client &lt; service name &gt; &apos;
&apos;Move to the target repository \ &apos; s release repository , if any . DCNL This is needed because we don \ &apos; t need to do any problems DCNL when we need to move the user to a review server . DCNL : param apps : A list of apps that need to be removed . DCNL : param schema _ editor : A string that is used when we want to move the DCNL repository \ &apos; s commit ID . DCNL : return : A list of commits that have been moved . &apos;
&apos;Set whether the computer will wake on the computer . DCNL : param bool enabled : True to enable , False to disable . DCNL : return : True if successful , False if not DCNL : rtype : bool DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; power.set _ wake _ on _ network True&apos;
&apos;Check if any of the files in file _ check is in the list of files DCNL in the list . DCNL If any of the files in file _ check is set , this function returns DCNL True , if any of the files in the file is found , False otherwise . &apos;
&apos;Determine the format of a given request . DCNL Parameters DCNL request : django.http.HttpRequest DCNL The request to use . DCNL serializer : string DCNL The name of the request to use . DCNL default _ format : str , optional DCNL The format of the request . DCNL Returns DCNL format : str DCNL The format of the request . &apos;
&apos;Remove the packages on a given path . DCNL : param module : The module to remove packages from . DCNL : param port _ path : The path to the package on which to remove packages . DCNL : param packages : A list of packages to remove the packages on . &apos;
&apos;Returns options to use for logging . &apos;
&apos;Returns a list of ( path , path ) tuples of a given path DCNL ( Used as a list ) &apos;
&apos;Return the id of the object . &apos;
&apos;Computes the cosine of the binomial distribution . DCNL Parameters DCNL data : array _ like , shape ( n _ samples , n _ features ) DCNL The input array . DCNL prob : array _ like , shape = ( n _ samples , n _ features ) DCNL The number of samples to scale . DCNL alpha : float DCNL The standard deviation of the normal distribution . DCNL alpha : float , optional DCNL The maximum number of samples to scale . DCNL axis : int , optional DCNL Axis along which the summary statistic is calculated . DCNL Returns DCNL z : float DCNL The p-value for the discrete Fourier coefficients . &apos;
&apos;Returns a list of pool pools for the given transport DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; docker.get _ pools &lt; client &gt; &apos;
&apos;Return a list of CPU cores . DCNL : param ip : the IP address DCNL : param user : user user DCNL : param passwd : user password DCNL : return : list of CPU cores DCNL : rtype : list &#91; str &#93; &apos;
&apos;Test append when .history is empty . &apos;
&apos;Return a signature object `PSS _ SigScheme` that DCNL can be used to perform PKCS # 1 v1.5 encryption or decryption . DCNL : Parameters : DCNL rsa _ key : RSA key object DCNL The RSA key object . Must be a private RSA key , or a `Crypto.PublicKey.RSA` object . DCNL Decryption is only possible if * private _ key * is a private RSA key . DCNL Signing is only possible if * private _ key * is a private RSA key . &apos;
&apos;Load an email backend and return an instance of the backend . DCNL If backend is None ( default ) settings.EMAIL _ BACKEND is used . DCNL Both fail _ silently and other keyword arguments are used in the DCNL constructor of the backend . &apos;
&apos;Return whether the device is related to the device . DCNL This is designed to be used as part of the device for the PCI device . DCNL For example : DCNL &gt; &gt; &gt; from PCI import device _ device DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device : DCNL &gt; &gt; &gt; from PCI device _ device
&apos;Given a list of objects into a list of file instances . DCNL : param obj _ store : An object store . DCNL : param tree _ store : A list of tuples of ( name , sha ) tuples . DCNL : param tree _ sha : A dict containing the contents of the tree . DCNL : return : A list of tuples of ( name , sha ) pairs . &apos;
&apos;Destroy the VM , if it exists , otherwise create a new VM . DCNL If the VM is not available , it will throw an exception if it DCNL does not exist . &apos;
&apos;Computes the log likelihood of a softmax . DCNL Parameters DCNL weights : ndarray , shape ( n _ samples , n _ features ) DCNL Array of shape ( n _ samples , n _ features ) DCNL alpha : float , optional DCNL Output of the softmax . DCNL Returns DCNL score : ndarray , shape ( n _ samples , n _ features ) DCNL Output variables . DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in Biological Research &quot; . ISBN : 978-0716724117&apos;
&apos;Wrapper for `request _ path \ &apos; , which will try to cache the cached cache . DCNL If cache is not found , returns None . &apos;
&apos;Create a network acl entry . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt myminion boto _ iam.create _ network _ acl _ entry network _ id = \ &apos; acl-5fb85d36 \ &apos; \ &apos; 32767 \ &apos; \ DCNL \ &apos; 0.0.0.0 \ &apos; egress = true&apos;
&apos;Create an abstract field for a given list of instances . DCNL : param dict interfaces : List of interfaces to be converted . DCNL : param field _ kwargs : Additional keyword arguments to pass to the DCNL decorated method . DCNL : return : A tuple of ( key , value ) pairs . DCNL : raises : : class : `ValueError` if an error is raised . &apos;
&apos;Return the metadata of a resource . DCNL : param id : the id or name of the resource DCNL : type id : string DCNL : rtype : dictionary&apos;
&apos;Split a container into a dictionary . DCNL Parameters DCNL container : container DCNL Name of container to split . DCNL name : str DCNL Name of the container to split . DCNL before : bool , optional DCNL If True , don \ &apos; t execute any existing namespaces . Default is True . DCNL before : bool , optional DCNL If True , don \ &apos; t do anything . DCNL before : bool , optional DCNL If True , don \ &apos; t want to modify the input . &apos;
&apos;Create a pool from a pool DCNL CLI Examples : DCNL .. code-block : : bash DCNL salt-run f5.create _ pool load _ balancer 10.0.0.1 80 my _ pool&apos;
&apos;A view that checks whether the document is watching it \ &apos; s watching to DCNL the given document , and if it \ &apos; s watching it \ &apos; s watching it . DCNL If the document is watching it \ &apos; s watching it , returns False . DCNL : param request : the request DCNL : type request : django.http.HttpRequest DCNL : param document _ slug : the title of the document DCNL : type document _ slug : str DCNL : return : True if the document is watching , False otherwise . DCNL : rtype : bool DCNL : raises : HTTPError ( 400 ) if the document is not watching , False otherwise . &apos;
&apos;Read a signed 16-bit integer&apos;
&apos;Get an object by name DCNL : param name : Name of the object DCNL : type name : ``str`` DCNL : param default : Default value DCNL : type default : int DCNL : param scope : Optional scope to use DCNL : type window : int DCNL : param window : Timeout in seconds DCNL : type window : int DCNL : param window : Timeout in seconds DCNL : type window : int&apos;
&apos;Quickly add links from command line logs . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt \ &apos; * \ &apos; net.command _ links DCNL salt \ &apos; * \ &apos; varnish.parse _ links param&apos;
&apos;Sends a connection to a different router . DCNL If no connections are passed , the connection is returned . &apos;
&apos;Load a template from a template . DCNL template _ name DCNL The name of the template to load . DCNL template _ source DCNL The name of the template . DCNL template _ name DCNL The name of the template . DCNL template _ name DCNL The name of the template . DCNL template _ name DCNL The name of the template to use . Default is ``False`` . DCNL template _ name DCNL The name of the template to use . Default is ``False`` . DCNL template _ name DCNL The name of the template to use . Default is ``False`` . DCNL template _ name DCNL The name of the template to use . By default , the template will be DCNL used instead of the specified template . DCNL template _ name DCNL The name of the template to use . Default is ``False`` . DCNL template _ name DCNL The name of the template to use . By default , the template will be DCNL used instead of the specified template . DCNL template _ name DCNL The name of the template to use . Default is ``False`` . DCNL template _ name DCNL The
&apos;Converts an image into a tuple of ( width , height ) . DCNL Parameters DCNL image : array _ like DCNL Input image . DCNL label : str DCNL The label to the image . DCNL encoding : int DCNL The encoding of the image . DCNL Returns DCNL out : array DCNL A numpy array containing the input image . DCNL Raises DCNL ValueError DCNL If the image cannot be found . &apos;
&apos;This function is used to store a neural network on a network . DCNL This is useful for example : DCNL https : / / github.com / ryankiros / skip-thoughts / blob / master / blob / master / blob / master / training / tools.py&apos;
&apos;Load rate limiting . DCNL Parameters DCNL comp : dict DCNL List of images . DCNL row _ names : list &#91; str &#93; DCNL List of columns to generate . DCNL col _ names : list &#91; str &#93; DCNL The names of each row . DCNL dist _ names : dict , optional DCNL A list of names to each column . &apos;
&apos;Create a user \ &apos; s password and send it to the user \ &apos; s password . DCNL : param request : HTTP request . DCNL : param sudo _ id : The user to run the user with . DCNL : param response _ format : A string containing the user \ &apos; s password . &apos;
&apos;Start a droplet in DigitalOcean . DCNL .. versionadded : : 2015.8.8 DCNL name DCNL The name of the droplet to start . DCNL CLI Example : DCNL .. code-block : : bash DCNL salt-cloud -a start droplet _ name&apos;
&apos;Calculates the morphological opening of a image and convert it to the DCNL origin of the image . DCNL Parameters DCNL img : ndarray DCNL Input image . DCNL mask : array _ like DCNL Input image . DCNL Returns DCNL U : ndarray DCNL The result of the image in the image format . DCNL Notes DCNL This function is meant to be used in the linear algebra . DCNL It is meant to be used in the linear filter of the graph . DCNL References DCNL .. &#91; 1 &#93; Sokal and Rohlf . &quot; Biometry : The Principles and Practices of DCNL Statistics in the algorithm . DCNL Examples DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( ) DCNL &gt; &gt; &gt; img = data.astronaut ( )
&apos;Keeps the result from the dataframe . DCNL Returns DCNL out : ndarray DCNL The result in the dataframe . DCNL Examples DCNL &gt; &gt; &gt; from sympy.combinatorics.graycode import get _ test _ result DCNL &gt; &gt; &gt; x = get _ test _ result ( ) DCNL &gt; &gt; &gt; get _ test _ result ( ) DCNL &gt; &gt; &gt; get _ test _ result ( ) DCNL Traceback ( most recent call last ) : DCNL StopIteration DCNL &gt; &gt; &gt; get _ test _ result ( ) DCNL &gt; &gt; &gt; get _ test _ result ( ) DCNL Traceback ( most recent call last ) : DCNL StopIteration DCNL &gt; &gt; &gt; get _ test _ result ( ) DCNL &gt; &gt; &gt; get _ test _ result ( ) DCNL Traceback ( most recent call last ) : DCNL StopIteration DCNL &gt; &gt; &gt; get _ test _ result ( ) DCNL &gt; &gt; &gt; get _ test _ result ( ) DCNL &gt; &gt; &gt; get _ test _ result ( ) DCNL Traceback ( most recent call last ) : DCNL StopIteration DCNL &gt; &gt; &gt; get _ test _ result
&apos;Use this function to fill the array of dimensions in x . DCNL Parameters DCNL x : array _ like DCNL Input array . DCNL window _ length : int , optional DCNL Axis along which to operate . Default is 0 . Default is 0 . DCNL delta : float , optional DCNL Axis along which to operate . Default is ``2 * pi`` . DCNL axis : int , optional DCNL Axis along which to operate . Default is ``2 * pi`` . DCNL axis : int , optional DCNL Axis along which to operate . Default is ``2 * pi`` . DCNL axis : int , optional DCNL Axis along which to operate . Default is 0 . DCNL mode : float , optional DCNL Axis along which to operate . Default is 0 . DCNL Returns DCNL out : ndarray , shape ( n _ times , ) DCNL Array of shape ( x , y ) . DCNL References DCNL .. &#91; 1 &#93; Zhang , Shanjie and Jin , Jianming . &quot; Computation of Special DCNL Functions &quot; , John Wiley and Sons , 1996 , chapter 5 . DCNL http : / /
&apos;Test to ensure hug introspection can correctly identify when a function takes args&apos;
&apos;Load a bottle application from a module and merge it into the current DCNL application . See : func : `load` for this module . &apos;
&apos;Computes the recall for a given precision . DCNL Parameters DCNL precision : float DCNL The precision for which to calculate the precision . DCNL recall : float DCNL The number of precision for the precision . DCNL Returns DCNL f1 : float DCNL The difference between the precision and recall . DCNL Examples DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector import CoordSysCartesian , compute DCNL &gt; &gt; &gt; from sympy.vector
&apos;colorize ( s , num _ color = 1 ) - &gt; str DCNL Convert a numeric string to the number of colors . &apos;
&apos;Stacks arrays along an axis . DCNL Args : DCNL tup ( tuple of arrays ) : Arrays to be stacked . DCNL Returns : DCNL cupy.ndarray : Stacked array . DCNL .. seealso : : : func : `numpy.dstack`&apos;
&apos; .. todo : : DCNL WRITEME&apos;
&apos;Converts input data into a numpy array . DCNL Args : DCNL eval _ data : list of ints , the data to be converted . DCNL data _ dir : str , the size of the batch . DCNL batch _ size : int , size of the batch . DCNL Returns : DCNL A tuple of ( input _ data , data _ size ) . &apos;
&apos;Convert a scope to a list of scope names to a list of scope ( scope ) . DCNL The scope is a list of scope names to a list of scope names ( e.g. DCNL \ &apos; scope \ &apos; or \ &apos; scope \ &apos; ) . DCNL &gt; &gt; &gt; scope _ to _ list ( \ &apos; scope \ &apos; ) DCNL ( \ &apos; scope \ &apos; , \ &apos; scope \ &apos; ) DCNL &gt; &gt; &gt; scope _ to _ list ( scope ) DCNL ( \ &apos; scope \ &apos; , \ &apos; scope \ &apos; ) DCNL &gt; &gt; &gt; scope _ to _ list ( scope ) DCNL ( \ &apos; scope \ &apos; , \ &apos; scope \ &apos; ) DCNL &gt; &gt; &gt; scope _ to _ list ( scope ) DCNL \ &apos; scope \ &apos; DCNL &gt; &gt; &gt; scope _ to _ list ( scope ) DCNL \ &apos; scope \ &apos; DCNL &gt; &gt; &gt; scope _ to _ list ( scope ) DCNL \ &apos; scope \ &apos; DCNL &gt; &gt; &gt; scope _ to _ list ( scope ) DCNL \ &apos;
&apos;Takes a list of integers and returns the permutations of the list . DCNL Examples DCNL &gt; &gt; &gt; from sympy import Permutation DCNL &gt; &gt; &gt; from sympy import Permutation DCNL &gt; &gt; &gt; from sympy import Permutation DCNL &gt; &gt; &gt; from sympy import Permutation DCNL &gt; &gt; &gt; from sympy import Permutation DCNL &gt; &gt; &gt; from sympy import Permutation DCNL &gt; &gt; &gt; from sympy import Permutation DCNL &gt; &gt; &gt; list ( permutations ( &#91; 1 , 2 , 3 , 4 , 1 , 2 , 3 , 4 , 1 , 2 , 3 , 4 , 1 , 2 , 3 , 4 , 1 , 2 , 3 , 4 , 1 , 2 , 3 , 4 , 1 , 2 , 3 , 4 , 1 , 2 , 2 , 3 , 4 , 1 , 2 , 2 , 2 , 3 , 4 , 4 , 4 , 5 , 4 , 4 , 5 , 4 , 5 , 4 , 5 , 4 , 5 , 4 , 5 , 4 , 5 , 4 , 5 , 6 , 7 , 8 ,
&apos;Output the given status as a dict containing the following status : DCNL &quot; status &quot; : &quot; 2c80228370c9 &quot; : &quot; 2c80228370c9 &quot; : &quot; 2c80228370c9 &quot; : &quot; 2c80228370c9 &quot; : &quot; 2c80228370c9 &quot; &#93; &quot; &apos;
&apos;Get the URL for a link . DCNL Args : DCNL context ( str ) : the path to the URL to get the URL for . DCNL link _ url ( str ) : URL to link to . DCNL Returns : DCNL str : The URL for the link . &apos;
&apos;Calculates the average histograms of the current plot . DCNL Parameters DCNL mu : float DCNL The mean of the plot . DCNL sigma : float DCNL The mean of the plot . DCNL Returns DCNL out : ndarray DCNL The binned histograms of the current plot . &apos;
&apos; _ _ getitem _ _ ( ) should make sure the TPOT CLI interface \ &apos; s list&apos;
&apos;Ensure that the ``name`` is present in the `Mode` which can be used . &apos;
&apos;Implements EMSA-PKCS1-V1 _ 5-ENCODE ( ) function described in Sect . DCNL 9.2 of RFC 3447 . DCNL Input : DCNL mgft&apos;
&apos;Convert image to an Image object . DCNL : type image : : class : ` ~ google.cloud.grpc.vision.v1.image _ annotator _ pb2.Feature` DCNL : param image : Image object . DCNL : rtype : : class : ` ~ google.cloud.grpc.vision.v1.image _ annotator _ pb2.Feature` DCNL : returns : gRPC ``Feature`` converted to an image . &apos;
&apos;Initialize the directory if it doesn \ &apos; t exist . &apos;
&apos;Load the extensions from the directory and build the extensions from DCNL the project . DCNL Returns : DCNL ( list , list ) : List of all the extensions that were loaded . &apos;
&apos;Find all checks for the given Linux distributions . DCNL Args : DCNL osname ( list ) : The names of the checks that are installed . DCNL Returns : DCNL A list of all possible checks for the given Linux distribution . &apos;
&apos;Remove group type access for group . DCNL Templates : ``groups / group _ access _ group _ id DCNL group _ id _ id DCNL group _ id DCNL group _ id DCNL group _ id DCNL group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _ id = group _
&apos;Plots a plot . DCNL Parameters DCNL params : array _ like , shape ( n _ channels , n _ channels , n _ channels ) DCNL The data to plot . DCNL Returns DCNL fig : instance of Raw DCNL An array with shape ( n _ channels , n _ channels , n _ channels ) . DCNL References DCNL .. &#91; 1 &#93; https : / / docs.scipy.org / doc / scipy-0.14.0 / reference / reference / scipy.ndimage.interpolation.affine _ transform.html &gt; ` _ DCNL Examples DCNL &gt; &gt; &gt; from skimage import data DCNL &gt; &gt; &gt; from scipy.stats import plot _ plot DCNL &gt; &gt; &gt; y = np.array ( &#91; &#91; 1 , 2 , 3 &#93; , &#91; 3 , 4 &#93; &#93; ) DCNL &gt; &gt; &gt; plot _ plot ( params ) DCNL array ( &#91; &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0 , 0 , 0 &#93; , DCNL &#91; 0 , 1 , 2 , 3 &#93; , DCNL &#91; 0
&apos; &gt; &gt; &gt; from sympy import MatrixSymbol , Q , Q , Q DCNL &gt; &gt; &gt; from sympy import MatrixSymbol , Q , Q , Q DCNL &gt; &gt; &gt; from sympy import MatrixSymbol , Q , Q , Q DCNL &gt; &gt; &gt; X = MatrixSymbol ( \ &apos; X \ &apos; , 2 ) DCNL &gt; &gt; &gt; X.T DCNL X.T DCNL &gt; &gt; &gt; from sympy import MatrixSymbol , Q , Q , Q DCNL &gt; &gt; &gt; from sympy import MatrixSymbol , Q , Q , Q DCNL &gt; &gt; &gt; X = MatrixSymbol ( \ &apos; X \ &apos; , 2 ) DCNL &gt; &gt; &gt; X.T DCNL X.T DCNL &gt; &gt; &gt; from sympy import MatrixSymbol , Q , Q , Q DCNL &gt; &gt; &gt; X = MatrixSymbol ( \ &apos; X \ &apos; , 2 ) DCNL &gt; &gt; &gt; X.T DCNL X.T DCNL &gt; &gt; &gt; from sympy import MatrixSymbol , Q , Q , Q DCNL &gt; &gt; &gt; X = MatrixSymbol ( \ &apos; X \ &apos; , 2 ) DCNL &gt; &gt; &gt; X.T DCNL X.T DCNL &gt; &gt; &gt; from sympy import MatrixSymbol , Q
&apos;Get rate limit for rate limiting . &apos;
&apos;Test that replay.load runs if the input file is in the same DCNL location . DCNL This is useful when you want to make sure we don \ &apos; t know what you want to DCNL make sure we don \ &apos; t know what you want to parse . DCNL This is useful when you want to make sure we don \ &apos; t know what you want to DCNL make sure we don \ &apos; t know how to parse the results . &apos;
&apos;Display an upload . DCNL : param url : The ID of the owning organization . DCNL : param methods : The name of the user . DCNL : return : A dictionary containing the information about the archive . DCNL : rtype : ( requests.Response ) Returns response information about the upload . &apos;
